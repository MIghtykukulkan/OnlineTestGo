TRACE: 2017/03/25 16:14:06 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/25 16:14:06 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/25 16:14:06 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/25 16:14:06 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/03/25 16:14:06 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/25 16:14:06 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/03/25 16:14:06 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/03/25 16:14:06 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/25 16:14:06 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/03/25 16:14:06 debug.go:45: [GIN-debug] Listening and serving HTTP on :8087
TRACE: 2017/03/25 16:16:55 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/25 16:16:55 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/25 16:16:55 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/25 16:16:55 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/03/25 16:16:55 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/25 16:16:55 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/03/25 16:16:55 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/03/25 16:16:55 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/25 16:16:55 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/03/25 16:16:55 debug.go:45: [GIN-debug] Listening and serving HTTP on :8087
TRACE: 2017/03/25 16:19:58 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/25 16:19:58 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/25 16:19:58 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/25 16:19:58 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/03/25 16:19:58 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/25 16:19:58 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/03/25 16:19:58 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/03/25 16:19:58 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/25 16:19:58 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/03/25 16:19:58 debug.go:45: [GIN-debug] Listening and serving HTTP on :8087
TRACE: 2017/03/25 16:20:02 RegisterUser.go:14: entering in webservice.RegisterUser
TRACE: 2017/03/25 16:20:02 RegisterUser.go:18: calling manager.Register function
TRACE: 2017/03/25 16:20:02 register.go:17: entering in  manager.Register() function
TRACE: 2017/03/25 16:20:02 register.go:19: calling register manager
TRACE: 2017/03/25 16:20:02 register.go:21: calling userDao.CheckUser function
TRACE: 2017/03/25 16:20:02 userimpl.go:50: entering in userDao.CheckUser()...
TRACE: 2017/03/25 16:20:02 userimpl.go:53: executing query and checking user exists
TRACE: 2017/03/25 16:23:18 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/25 16:23:18 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/25 16:23:18 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/25 16:23:18 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/03/25 16:23:18 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/25 16:23:18 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/03/25 16:23:18 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/03/25 16:23:18 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/25 16:23:18 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/03/25 16:23:18 debug.go:45: [GIN-debug] Listening and serving HTTP on :8087
TRACE: 2017/03/25 16:23:35 RegisterUser.go:14: entering in webservice.RegisterUser
TRACE: 2017/03/25 16:23:35 RegisterUser.go:18: calling manager.Register function
TRACE: 2017/03/25 16:23:35 register.go:17: entering in  manager.Register() function
TRACE: 2017/03/25 16:23:35 register.go:19: calling register manager
TRACE: 2017/03/25 16:23:35 register.go:21: calling userDao.CheckUser function
TRACE: 2017/03/25 16:23:35 userimpl.go:50: entering in userDao.CheckUser()...
TRACE: 2017/03/25 16:23:35 userimpl.go:53: executing query and checking user exists
TRACE: 2017/03/25 16:23:39 register.go:33: calling userDao.SaveNewUser() function
TRACE: 2017/03/25 16:23:39 userimpl.go:17: entering in SaveNewUser() function
TRACE: 2017/03/25 16:23:39 userimpl.go:20: executing query and storing registration details
TRACE: 2017/03/25 16:23:42 userimpl.go:26: <nil>
TRACE: 2017/03/25 16:23:43 register.go:38: {195  registration sussecful}
TRACE: 2017/03/25 16:32:39 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/25 16:32:39 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/25 16:32:39 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/25 16:32:39 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/03/25 16:32:39 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/25 16:32:39 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/03/25 16:32:39 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/03/25 16:32:39 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/25 16:32:39 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/03/25 16:32:39 debug.go:45: [GIN-debug] Listening and serving HTTP on :8087
TRACE: 2017/03/25 16:33:08 RegisterUser.go:14: entering in webservice.RegisterUser
TRACE: 2017/03/25 16:33:08 RegisterUser.go:18: calling manager.Register function
TRACE: 2017/03/25 16:33:08 register.go:17: entering in  manager.Register() function
TRACE: 2017/03/25 16:33:08 register.go:19: calling register manager
TRACE: 2017/03/25 16:33:08 register.go:21: calling userDao.CheckUser function
TRACE: 2017/03/25 16:33:08 userimpl.go:50: entering in userDao.CheckUser()...
TRACE: 2017/03/25 16:33:08 userimpl.go:53: executing query and checking user exists
TRACE: 2017/03/25 16:37:43 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/25 16:37:43 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/25 16:37:43 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/25 16:37:43 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/03/25 16:37:43 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/25 16:37:43 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/03/25 16:37:43 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/03/25 16:37:43 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/25 16:37:43 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/03/25 16:37:43 debug.go:45: [GIN-debug] Listening and serving HTTP on :8087
TRACE: 2017/03/25 16:38:14 RegisterUser.go:14: entering in webservice.RegisterUser
TRACE: 2017/03/25 16:38:14 RegisterUser.go:18: calling manager.Register function
TRACE: 2017/03/25 16:38:14 register.go:17: entering in  manager.Register() function
TRACE: 2017/03/25 16:38:14 register.go:19: calling register manager
TRACE: 2017/03/25 16:38:14 register.go:21: calling userDao.CheckUser function
TRACE: 2017/03/25 16:38:14 userimpl.go:50: entering in userDao.CheckUser()...
TRACE: 2017/03/25 16:38:14 userimpl.go:53: executing query and checking user exists
TRACE: 2017/03/25 16:58:42 RegisterUser.go:14: entering in webservice.RegisterUser
TRACE: 2017/03/25 16:58:42 RegisterUser.go:18: calling manager.Register function
TRACE: 2017/03/25 16:58:42 register.go:17: entering in  manager.Register() function
TRACE: 2017/03/25 16:58:42 register.go:19: calling register manager
TRACE: 2017/03/25 16:58:42 register.go:21: calling userDao.CheckUser function
TRACE: 2017/03/25 16:58:42 userimpl.go:50: entering in userDao.CheckUser()...
TRACE: 2017/03/25 16:58:43 userimpl.go:53: executing query and checking user exists
TRACE: 2017/03/25 17:20:06 RegisterUser.go:14: entering in webservice.RegisterUser
TRACE: 2017/03/25 17:20:06 RegisterUser.go:18: calling manager.Register function
TRACE: 2017/03/25 17:20:06 register.go:17: entering in  manager.Register() function
TRACE: 2017/03/25 17:20:06 register.go:19: calling register manager
TRACE: 2017/03/25 17:20:06 register.go:21: calling userDao.CheckUser function
TRACE: 2017/03/25 17:20:06 userimpl.go:50: entering in userDao.CheckUser()...
TRACE: 2017/03/25 17:20:06 userimpl.go:53: executing query and checking user exists
TRACE: 2017/03/25 17:24:21 RegisterUser.go:14: entering in webservice.RegisterUser
TRACE: 2017/03/25 17:24:21 RegisterUser.go:18: calling manager.Register function
TRACE: 2017/03/25 17:24:21 register.go:17: entering in  manager.Register() function
TRACE: 2017/03/25 17:24:21 register.go:19: calling register manager
TRACE: 2017/03/25 17:24:21 register.go:21: calling userDao.CheckUser function
TRACE: 2017/03/25 17:24:21 userimpl.go:50: entering in userDao.CheckUser()...
TRACE: 2017/03/25 17:24:21 userimpl.go:53: executing query and checking user exists
TRACE: 2017/03/25 17:25:30 RegisterUser.go:14: entering in webservice.RegisterUser
TRACE: 2017/03/25 17:25:30 RegisterUser.go:18: calling manager.Register function
TRACE: 2017/03/25 17:25:30 register.go:17: entering in  manager.Register() function
TRACE: 2017/03/25 17:25:30 register.go:19: calling register manager
TRACE: 2017/03/25 17:25:30 register.go:21: calling userDao.CheckUser function
TRACE: 2017/03/25 17:25:30 userimpl.go:50: entering in userDao.CheckUser()...
TRACE: 2017/03/25 17:25:30 userimpl.go:53: executing query and checking user exists
TRACE: 2017/03/25 17:28:34 RegisterUser.go:14: entering in webservice.RegisterUser
TRACE: 2017/03/25 17:28:34 RegisterUser.go:18: calling manager.Register function
TRACE: 2017/03/25 17:28:34 register.go:17: entering in  manager.Register() function
TRACE: 2017/03/25 17:28:34 register.go:19: calling register manager
TRACE: 2017/03/25 17:28:34 register.go:21: calling userDao.CheckUser function
TRACE: 2017/03/25 17:28:34 userimpl.go:50: entering in userDao.CheckUser()...
TRACE: 2017/03/25 17:28:34 userimpl.go:53: executing query and checking user exists
TRACE: 2017/03/25 17:29:33 RegisterUser.go:14: entering in webservice.RegisterUser
TRACE: 2017/03/25 17:29:33 RegisterUser.go:18: calling manager.Register function
TRACE: 2017/03/25 17:29:33 register.go:17: entering in  manager.Register() function
TRACE: 2017/03/25 17:29:33 register.go:19: calling register manager
TRACE: 2017/03/25 17:29:33 register.go:21: calling userDao.CheckUser function
TRACE: 2017/03/25 17:29:33 userimpl.go:50: entering in userDao.CheckUser()...
TRACE: 2017/03/25 17:29:33 userimpl.go:53: executing query and checking user exists
TRACE: 2017/03/25 17:30:35 RegisterUser.go:14: entering in webservice.RegisterUser
TRACE: 2017/03/25 17:30:35 RegisterUser.go:18: calling manager.Register function
TRACE: 2017/03/25 17:30:35 register.go:17: entering in  manager.Register() function
TRACE: 2017/03/25 17:30:35 register.go:19: calling register manager
TRACE: 2017/03/25 17:30:35 register.go:21: calling userDao.CheckUser function
TRACE: 2017/03/25 17:30:35 userimpl.go:50: entering in userDao.CheckUser()...
TRACE: 2017/03/25 17:30:35 userimpl.go:53: executing query and checking user exists
TRACE: 2017/03/25 17:35:39 RegisterUser.go:14: entering in webservice.RegisterUser
TRACE: 2017/03/25 17:35:39 RegisterUser.go:18: calling manager.Register function
TRACE: 2017/03/25 17:35:39 register.go:17: entering in  manager.Register() function
TRACE: 2017/03/25 17:35:39 register.go:19: calling register manager
TRACE: 2017/03/25 17:35:39 register.go:21: calling userDao.CheckUser function
TRACE: 2017/03/25 17:35:39 userimpl.go:50: entering in userDao.CheckUser()...
TRACE: 2017/03/25 17:35:39 userimpl.go:53: executing query and checking user exists
TRACE: 2017/03/25 17:35:43 register.go:33: calling userDao.SaveNewUser() function
TRACE: 2017/03/25 17:35:43 userimpl.go:17: entering in SaveNewUser() function
TRACE: 2017/03/25 17:35:43 userimpl.go:20: executing query and storing registration details
TRACE: 2017/03/25 17:35:47 userimpl.go:26: <nil>
TRACE: 2017/03/25 17:35:48 register.go:38: {196  registration sussecful}
TRACE: 2017/04/17 15:02:26 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/04/17 15:02:26 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/04/17 15:02:26 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/04/17 15:02:26 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/04/17 15:02:26 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/04/17 15:02:26 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/04/17 15:02:26 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/04/17 15:02:26 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/04/17 15:02:26 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/04/17 15:02:26 debug.go:45: [GIN-debug] Listening and serving HTTP on :8087
TRACE: 2017/04/17 15:02:26 debug.go:45: [GIN-debug] [ERROR] listen tcp :8087: bind: Only one usage of each socket address (protocol/network address/port) is normally permitted.
TRACE: 2017/05/08 13:47:52 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/05/08 13:47:52 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/05/08 13:47:52 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/05/08 13:47:52 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/05/08 13:47:52 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/05/08 13:47:52 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/05/08 13:47:52 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/05/08 13:47:52 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/05/08 13:47:52 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/05/08 13:47:52 debug.go:45: [GIN-debug] Listening and serving HTTP on :8087
TRACE: 2017/05/09 09:52:15 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/05/09 09:52:15 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/05/09 09:52:15 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/05/09 09:52:15 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/05/09 09:52:15 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/05/09 09:52:15 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/05/09 09:52:15 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/05/09 09:52:15 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/05/09 09:52:15 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/05/09 09:52:15 debug.go:45: [GIN-debug] Listening and serving HTTP on :8084
TRACE: 2017/05/09 10:05:32 Login.go:14: entering webservice.Login()
TRACE: 2017/05/09 10:05:32 Login.go:19: calling manager.Login()
TRACE: 2017/05/09 10:05:32 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/09 10:05:32 Login.go:16: entering manager.login
TRACE: 2017/05/09 10:05:32 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/09 10:05:32 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/09 10:05:32 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/09 10:05:35 Login.go:14: entering webservice.Login()
TRACE: 2017/05/09 10:05:35 Login.go:19: calling manager.Login()
TRACE: 2017/05/09 10:05:35 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/09 10:05:35 Login.go:16: entering manager.login
TRACE: 2017/05/09 10:05:35 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/09 10:05:35 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/09 10:05:35 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/09 10:05:36 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/09 10:05:36 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/09 10:05:36 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/09 10:05:40 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/09 10:05:40 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/09 10:05:40 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/09 10:05:42 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/09 10:05:42 loginimpl.go:81: executing query.....
TRACE: 2017/05/09 10:05:44 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/09 10:05:44 loginimpl.go:81: executing query.....
TRACE: 2017/05/09 10:05:44 loginimpl.go:93: {0xc0421bebd0 0xc042346220}
TRACE: 2017/05/09 10:05:44 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/09 10:05:44 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/09 10:05:44 loginimpl.go:16: exntering in SaveToken() function {0 2 BuSDNToLPdqZFrwOWyyZ 2017-05-09 10:05:36.9340899 +0530 IST}
TRACE: 2017/05/09 10:05:44 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/09 10:05:46 loginimpl.go:93: {0xc0422ca310 0xc0422c6300}
TRACE: 2017/05/09 10:05:46 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/09 10:05:46 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/09 10:05:46 loginimpl.go:16: exntering in SaveToken() function {0 2 QDELYKLiHvphFtCYiZyH 2017-05-09 10:05:40.8448708 +0530 IST}
TRACE: 2017/05/09 10:05:46 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/09 10:05:50 loginimpl.go:20: token inserted
TRACE: 2017/05/09 10:05:50 loginimpl.go:21: {0 2 QDELYKLiHvphFtCYiZyH 2017-05-09 10:05:40.8448708 +0530 IST}
TRACE: 2017/05/09 10:05:52 loginimpl.go:33: {0xc0421befc0 0xc042346710}
TRACE: 2017/05/09 10:05:52 Login.go:48: {2 rakesh QDELYKLiHvphFtCYiZyH user}
TRACE: 2017/05/09 10:05:52 loginimpl.go:20: token inserted
TRACE: 2017/05/09 10:05:52 loginimpl.go:21: {0 2 BuSDNToLPdqZFrwOWyyZ 2017-05-09 10:05:36.9340899 +0530 IST}
TRACE: 2017/05/09 10:05:55 loginimpl.go:33: {0xc042032f50 0xc042005ae0}
TRACE: 2017/05/09 10:05:55 Login.go:48: {2 rakesh BuSDNToLPdqZFrwOWyyZ user}
TRACE: 2017/05/09 10:05:56 Login.go:14: entering webservice.Login()
TRACE: 2017/05/09 10:05:56 Login.go:19: calling manager.Login()
TRACE: 2017/05/09 10:05:56 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/09 10:05:56 Login.go:16: entering manager.login
TRACE: 2017/05/09 10:05:56 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/09 10:05:56 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/09 10:05:56 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/09 10:06:01 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/09 10:06:01 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/09 10:06:01 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/09 10:06:05 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/09 10:06:05 loginimpl.go:81: executing query.....
TRACE: 2017/05/09 10:06:09 loginimpl.go:93: {0xc0422ea380 0xc0422b4bb0}
TRACE: 2017/05/09 10:06:09 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/09 10:06:09 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/09 10:06:09 loginimpl.go:16: exntering in SaveToken() function {0 2 PkTSumxBityUUIVcBcDB 2017-05-09 10:06:01.5225848 +0530 IST}
TRACE: 2017/05/09 10:06:09 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/09 10:06:10 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/09 10:06:10 QuestionList.go:18: fundamental
TRACE: 2017/05/09 10:06:10 QuestionList.go:19: BuSDNToLPdqZFrwOWyyZ
TRACE: 2017/05/09 10:06:10 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/09 10:06:10 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/09 10:06:10 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/09 10:06:10 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/09 10:06:11 loginimpl.go:20: token inserted
TRACE: 2017/05/09 10:06:11 loginimpl.go:21: {0 2 PkTSumxBityUUIVcBcDB 2017-05-09 10:06:01.5225848 +0530 IST}
TRACE: 2017/05/09 10:06:13 loginimpl.go:33: {0xc0422ca850 0xc0423768a0}
TRACE: 2017/05/09 10:06:13 Login.go:48: {2 rakesh PkTSumxBityUUIVcBcDB user}
TRACE: 2017/05/09 10:06:24 authenticatetokenimpl.go:47: BuSDNToLPdqZFrwOWyyZ
TRACE: 2017/05/09 10:06:24 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/09 10:06:24 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/09 10:06:35 authenticatetokenimpl.go:51: 
TRACE: 2017/05/09 10:06:35 authenticatetokenimpl.go:54: No uid with that token.
TRACE: 2017/05/09 10:07:52 Login.go:14: entering webservice.Login()
TRACE: 2017/05/09 10:07:52 Login.go:19: calling manager.Login()
TRACE: 2017/05/09 10:07:52 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/09 10:07:52 Login.go:16: entering manager.login
TRACE: 2017/05/09 10:07:52 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/09 10:07:52 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/09 10:07:52 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/09 10:07:56 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/09 10:07:56 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/09 10:07:56 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/09 10:07:59 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/09 10:07:59 loginimpl.go:81: executing query.....
TRACE: 2017/05/09 10:08:01 loginimpl.go:93: {0xc0422ca9a0 0xc0422c7090}
TRACE: 2017/05/09 10:08:01 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/09 10:08:01 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/09 10:08:01 loginimpl.go:16: exntering in SaveToken() function {0 2 PPOjYBNMzrBOBsFIoQbF 2017-05-09 10:07:56.5484834 +0530 IST}
TRACE: 2017/05/09 10:08:01 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/09 10:08:15 loginimpl.go:20: token inserted
TRACE: 2017/05/09 10:08:15 loginimpl.go:21: {0 2 PPOjYBNMzrBOBsFIoQbF 2017-05-09 10:07:56.5484834 +0530 IST}
TRACE: 2017/05/09 10:08:17 loginimpl.go:33: {0xc0422cac40 0xc0422c73d0}
TRACE: 2017/05/09 10:08:17 Login.go:48: {2 rakesh PPOjYBNMzrBOBsFIoQbF user}
TRACE: 2017/05/09 10:08:34 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/09 10:08:34 QuestionList.go:18: java
TRACE: 2017/05/09 10:08:34 QuestionList.go:19: PPOjYBNMzrBOBsFIoQbF
TRACE: 2017/05/09 10:08:34 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/09 10:08:34 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/09 10:08:34 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/09 10:08:34 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/09 10:08:36 authenticatetokenimpl.go:47: PPOjYBNMzrBOBsFIoQbF
TRACE: 2017/05/09 10:08:36 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/09 10:08:36 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/09 10:08:39 authenticatetokenimpl.go:51: PPOjYBNMzrBOBsFIoQbF
TRACE: 2017/05/09 10:08:39 authenticatetokenimpl.go:59: Type is PPOjYBNMzrBOBsFIoQbF
TRACE: 2017/05/09 10:08:39 aunthenticate.go:42: 2017-05-09 10:08:39
TRACE: 2017/05/09 10:08:39 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/09 10:08:43 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/09 10:08:43 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/09 10:08:45 authenticatetokenimpl.go:30: {0xc0421bfc70 0xc0422b54d0}
TRACE: 2017/05/09 10:08:45 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/09 10:08:45 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/09 10:08:45 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/09 10:08:45 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/09 10:08:45 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/09 10:08:45 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/09 10:08:45 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/09 10:08:47 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0423c5200 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/09 10:08:50 questionimpl.go:30: &{0xc0422cb260 0x718e40 0xc0423c1b40 false [] <nil> 0xc0422bfcb0}
TRACE: 2017/05/09 10:09:14 Login.go:14: entering webservice.Login()
TRACE: 2017/05/09 10:09:14 Login.go:19: calling manager.Login()
TRACE: 2017/05/09 10:09:14 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/09 10:09:14 Login.go:16: entering manager.login
TRACE: 2017/05/09 10:09:14 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/09 10:09:14 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/09 10:09:14 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/09 10:09:19 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/09 10:09:19 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/09 10:09:19 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/09 10:09:25 Login.go:14: entering webservice.Login()
TRACE: 2017/05/09 10:09:25 Login.go:19: calling manager.Login()
TRACE: 2017/05/09 10:09:25 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/09 10:09:25 Login.go:16: entering manager.login
TRACE: 2017/05/09 10:09:25 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/09 10:09:25 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/09 10:09:25 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/09 10:09:25 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/09 10:09:25 loginimpl.go:81: executing query.....
TRACE: 2017/05/09 10:09:28 loginimpl.go:93: {0xc0422eb420 0xc042464540}
TRACE: 2017/05/09 10:09:28 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/09 10:09:28 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/09 10:09:28 loginimpl.go:16: exntering in SaveToken() function {0 2 wAKMcIwjVRgmmYyrzuXR 2017-05-09 10:09:19.0980656 +0530 IST}
TRACE: 2017/05/09 10:09:28 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/09 10:09:31 loginimpl.go:20: token inserted
TRACE: 2017/05/09 10:09:31 loginimpl.go:21: {0 2 wAKMcIwjVRgmmYyrzuXR 2017-05-09 10:09:19.0980656 +0530 IST}
TRACE: 2017/05/09 10:09:32 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/09 10:09:32 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/09 10:09:32 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/09 10:09:33 loginimpl.go:33: {0xc0422eb650 0xc042458f10}
TRACE: 2017/05/09 10:09:33 Login.go:48: {2 rakesh wAKMcIwjVRgmmYyrzuXR user}
TRACE: 2017/05/09 10:09:36 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/09 10:09:36 loginimpl.go:81: executing query.....
TRACE: 2017/05/09 10:09:50 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/09 10:09:50 AnswerList.go:23: [{0 29 } {0 15 } {0 16 } {0 19 } {0 21 } {0 34 } {0 28 } {0 24 } {0 20 } {0 17 } {0 11 } {0 33 } {0 30 } {0 31 } {0 18 } {0 27 } {0 23 } {0 13 } {0 14 } {0 35 } {0 22 } {0 12 } {0 26 } {0 25 } {0 32 }]
TRACE: 2017/05/09 10:09:50 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/09 10:09:50 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/09 10:09:50 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/09 10:09:50 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/09 10:09:50 CalculateScore.go:30: answerList [{0 29 } {0 15 } {0 16 } {0 19 } {0 21 } {0 34 } {0 28 } {0 24 } {0 20 } {0 17 } {0 11 } {0 33 } {0 30 } {0 31 } {0 18 } {0 27 } {0 23 } {0 13 } {0 14 } {0 35 } {0 22 } {0 12 } {0 26 } {0 25 } {0 32 }]
TRACE: 2017/05/09 10:09:50 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/09 10:09:50 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/09 10:09:50 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/09 10:09:50 questionimpl.go:98: executing query and fetching answers 
TRACE: 2017/05/09 10:09:51 questionimpl.go:105: dial tcp 127.0.0.1:3306: connectex: No connection could be made because the target machine actively refused it.
TRACE: 2017/05/09 10:25:40 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/05/09 10:25:40 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/05/09 10:25:40 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/05/09 10:25:40 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/05/09 10:25:40 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/05/09 10:25:40 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/05/09 10:25:40 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/05/09 10:25:40 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/05/09 10:25:40 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/05/09 10:25:40 debug.go:45: [GIN-debug] Listening and serving HTTP on :8084
TRACE: 2017/05/09 10:26:00 Login.go:14: entering webservice.Login()
TRACE: 2017/05/09 10:26:00 Login.go:19: calling manager.Login()
TRACE: 2017/05/09 10:26:00 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/09 10:26:00 Login.go:16: entering manager.login
TRACE: 2017/05/09 10:26:00 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/09 10:26:00 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/09 10:26:00 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/09 10:26:05 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/09 10:26:05 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/09 10:26:05 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/09 10:26:08 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/09 10:26:08 loginimpl.go:81: executing query.....
TRACE: 2017/05/09 10:26:10 loginimpl.go:93: {0xc042032540 0xc0421f29e0}
TRACE: 2017/05/09 10:26:10 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/09 10:26:10 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/09 10:26:10 loginimpl.go:16: exntering in SaveToken() function {0 2 EYJXoZmQnqdWSfEKuzJS 2017-05-09 10:26:05.9323514 +0530 IST}
TRACE: 2017/05/09 10:26:10 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/09 10:26:13 loginimpl.go:20: token inserted
TRACE: 2017/05/09 10:26:13 loginimpl.go:21: {0 2 EYJXoZmQnqdWSfEKuzJS 2017-05-09 10:26:05.9323514 +0530 IST}
TRACE: 2017/05/09 10:26:19 loginimpl.go:33: {0xc0422fc0e0 0xc0423181a0}
TRACE: 2017/05/09 10:26:19 Login.go:48: {2 rakesh EYJXoZmQnqdWSfEKuzJS user}
TRACE: 2017/05/09 10:26:43 Login.go:14: entering webservice.Login()
TRACE: 2017/05/09 10:26:43 Login.go:19: calling manager.Login()
TRACE: 2017/05/09 10:26:43 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/09 10:26:43 Login.go:16: entering manager.login
TRACE: 2017/05/09 10:26:43 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/09 10:26:43 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/09 10:26:43 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/09 10:26:49 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/09 10:26:49 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/09 10:26:49 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/09 10:27:07 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/09 10:27:07 loginimpl.go:81: executing query.....
TRACE: 2017/05/09 10:27:11 loginimpl.go:93: {0xc0422127e0 0xc042004a10}
TRACE: 2017/05/09 10:27:11 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/09 10:27:11 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/09 10:27:11 loginimpl.go:16: exntering in SaveToken() function {0 2 YDmVWuaZopwunEVEuFhJ 2017-05-09 10:26:49.4539239 +0530 IST}
TRACE: 2017/05/09 10:27:11 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/09 10:27:14 loginimpl.go:20: token inserted
TRACE: 2017/05/09 10:27:14 loginimpl.go:21: {0 2 YDmVWuaZopwunEVEuFhJ 2017-05-09 10:26:49.4539239 +0530 IST}
TRACE: 2017/05/09 10:27:17 loginimpl.go:33: {0xc0421bf0a0 0xc042318d50}
TRACE: 2017/05/09 10:27:17 Login.go:48: {2 rakesh YDmVWuaZopwunEVEuFhJ user}
TRACE: 2017/05/09 10:27:41 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/09 10:27:41 QuestionList.go:18: fundamental
TRACE: 2017/05/09 10:27:41 QuestionList.go:19: YDmVWuaZopwunEVEuFhJ
TRACE: 2017/05/09 10:27:41 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/09 10:27:41 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/09 10:27:41 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/09 10:27:41 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/09 10:27:43 authenticatetokenimpl.go:47: YDmVWuaZopwunEVEuFhJ
TRACE: 2017/05/09 10:27:43 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/09 10:27:43 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/09 10:27:45 authenticatetokenimpl.go:51: YDmVWuaZopwunEVEuFhJ
TRACE: 2017/05/09 10:27:45 authenticatetokenimpl.go:59: Type is YDmVWuaZopwunEVEuFhJ
TRACE: 2017/05/09 10:27:45 aunthenticate.go:42: 2017-05-09 10:27:45
TRACE: 2017/05/09 10:27:45 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/09 10:27:48 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/09 10:27:48 QuestionList.go:18: fundamental
TRACE: 2017/05/09 10:27:48 QuestionList.go:19: EYJXoZmQnqdWSfEKuzJS
TRACE: 2017/05/09 10:27:48 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/09 10:27:48 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/09 10:27:48 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/09 10:27:48 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/09 10:27:48 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/09 10:27:48 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/09 10:27:50 authenticatetokenimpl.go:30: {0xc042032e70 0xc042005400}
TRACE: 2017/05/09 10:27:50 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/09 10:27:50 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/09 10:27:50 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/09 10:27:50 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/09 10:27:50 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/09 10:27:50 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/09 10:27:50 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/09 10:27:53 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc04231be00 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/09 10:27:55 questionimpl.go:30: &{0xc042213030 0x718e40 0xc0423786a0 false [] <nil> 0xc04220b650}
TRACE: 2017/05/09 10:27:56 authenticatetokenimpl.go:47: EYJXoZmQnqdWSfEKuzJS
TRACE: 2017/05/09 10:27:56 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/09 10:27:56 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/09 10:28:03 Logout.go:14: entering webservice.Logout()
TRACE: 2017/05/09 10:28:03 Logout.go:16: calling manager.DeleteTokenLogin()
TRACE: 2017/05/09 10:28:03 Logout.go:12: entering manager.DeleteToken()
TRACE: 2017/05/09 10:28:03 Logout.go:15: calling logoutdao.DeleteToken()
TRACE: 2017/05/09 10:28:03 logoutimpl.go:13: exntering in DeleteToken() function
TRACE: 2017/05/09 10:28:03 logoutimpl.go:15: executing query and deleting token from database 
TRACE: 2017/05/09 10:28:05 authenticatetokenimpl.go:51: 
TRACE: 2017/05/09 10:28:05 authenticatetokenimpl.go:54: No uid with that token.
TRACE: 2017/05/09 10:28:08 logoutimpl.go:27: 
TRACE: 2017/05/09 10:28:08 logoutimpl.go:37: 0
TRACE: 2017/05/09 10:29:12 Login.go:14: entering webservice.Login()
TRACE: 2017/05/09 10:29:12 Login.go:19: calling manager.Login()
TRACE: 2017/05/09 10:29:12 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/09 10:29:12 Login.go:16: entering manager.login
TRACE: 2017/05/09 10:29:12 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/09 10:29:12 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/09 10:29:12 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/09 10:29:16 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/09 10:29:16 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/09 10:29:16 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/09 10:29:19 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/09 10:29:19 loginimpl.go:81: executing query.....
TRACE: 2017/05/09 10:29:23 loginimpl.go:93: {0xc0422fcbd0 0xc04239e5a0}
TRACE: 2017/05/09 10:29:23 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/09 10:29:23 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/09 10:29:23 loginimpl.go:16: exntering in SaveToken() function {0 2 hKKzJYymaOoCDZtresdT 2017-05-09 10:29:16.7899282 +0530 IST}
TRACE: 2017/05/09 10:29:23 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/09 10:29:28 loginimpl.go:20: token inserted
TRACE: 2017/05/09 10:29:28 loginimpl.go:21: {0 2 hKKzJYymaOoCDZtresdT 2017-05-09 10:29:16.7899282 +0530 IST}
TRACE: 2017/05/09 10:29:30 loginimpl.go:33: {0xc0421bf810 0xc0423ee0b0}
TRACE: 2017/05/09 10:29:30 Login.go:48: {2 rakesh hKKzJYymaOoCDZtresdT user}
TRACE: 2017/05/09 10:29:40 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/09 10:29:40 QuestionList.go:18: fundamental
TRACE: 2017/05/09 10:29:40 QuestionList.go:19: hKKzJYymaOoCDZtresdT
TRACE: 2017/05/09 10:29:40 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/09 10:29:40 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/09 10:29:40 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/09 10:29:40 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/09 10:29:43 authenticatetokenimpl.go:47: hKKzJYymaOoCDZtresdT
TRACE: 2017/05/09 10:29:43 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/09 10:29:43 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/09 10:29:46 authenticatetokenimpl.go:51: hKKzJYymaOoCDZtresdT
TRACE: 2017/05/09 10:29:46 authenticatetokenimpl.go:59: Type is hKKzJYymaOoCDZtresdT
TRACE: 2017/05/09 10:29:46 aunthenticate.go:42: 2017-05-09 10:29:46
TRACE: 2017/05/09 10:29:46 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/09 10:29:48 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/09 10:29:48 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/09 10:29:50 authenticatetokenimpl.go:30: {0xc042033ce0 0xc0423ee820}
TRACE: 2017/05/09 10:29:50 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/09 10:29:50 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/09 10:29:50 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/09 10:29:50 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/09 10:29:50 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/09 10:29:50 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/09 10:29:50 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/09 10:29:54 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0423c7620 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/09 10:29:59 questionimpl.go:30: &{0xc0422135e0 0x718e40 0xc042371d20 false [] <nil> 0xc042414300}
TRACE: 2017/05/09 10:30:15 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/09 10:30:15 AnswerList.go:23: [{0 10 } {0 9 } {0 8 } {0 6 } {0 7 } {0 1 } {0 3 } {0 4 } {0 5 } {0 2 }]
TRACE: 2017/05/09 10:30:15 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/09 10:30:15 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/09 10:30:15 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/09 10:30:15 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/09 10:30:15 CalculateScore.go:30: answerList [{0 10 } {0 9 } {0 8 } {0 6 } {0 7 } {0 1 } {0 3 } {0 4 } {0 5 } {0 2 }]
TRACE: 2017/05/09 10:30:15 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/09 10:30:15 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/09 10:30:15 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/09 10:30:15 questionimpl.go:98: executing query and fetching answers 
TRACE: 2017/05/09 10:30:16 questionimpl.go:105: dial tcp 127.0.0.1:3306: connectex: No connection could be made because the target machine actively refused it.
TRACE: 2017/05/09 10:34:43 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/05/09 10:34:43 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/05/09 10:34:43 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/05/09 10:34:43 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/05/09 10:34:43 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/05/09 10:34:43 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/05/09 10:34:43 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/05/09 10:34:43 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/05/09 10:34:43 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/05/09 10:34:43 debug.go:45: [GIN-debug] Listening and serving HTTP on :8084
TRACE: 2017/05/09 10:35:04 Login.go:14: entering webservice.Login()
TRACE: 2017/05/09 10:35:04 Login.go:19: calling manager.Login()
TRACE: 2017/05/09 10:35:04 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/09 10:35:04 Login.go:16: entering manager.login
TRACE: 2017/05/09 10:35:04 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/09 10:35:04 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/09 10:35:04 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/09 10:35:10 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/09 10:35:10 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/09 10:35:10 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/09 10:35:13 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/09 10:35:13 loginimpl.go:81: executing query.....
TRACE: 2017/05/09 10:35:15 loginimpl.go:93: {0xc0422262a0 0xc042300480}
TRACE: 2017/05/09 10:35:15 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/09 10:35:15 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/09 10:35:15 loginimpl.go:16: exntering in SaveToken() function {0 2 jcTsYfadlOizxmHvuaXQ 2017-05-09 10:35:10.4855619 +0530 IST}
TRACE: 2017/05/09 10:35:15 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/09 10:35:17 loginimpl.go:20: token inserted
TRACE: 2017/05/09 10:35:17 loginimpl.go:21: {0 2 jcTsYfadlOizxmHvuaXQ 2017-05-09 10:35:10.4855619 +0530 IST}
TRACE: 2017/05/09 10:35:21 loginimpl.go:33: {0xc0421bf340 0xc042300ce0}
TRACE: 2017/05/09 10:35:21 Login.go:48: {2 rakesh jcTsYfadlOizxmHvuaXQ user}
TRACE: 2017/05/09 10:35:46 Login.go:14: entering webservice.Login()
TRACE: 2017/05/09 10:35:46 Login.go:19: calling manager.Login()
TRACE: 2017/05/09 10:35:46 Login.go:20: {0    test@t.com 123 }
TRACE: 2017/05/09 10:35:46 Login.go:16: entering manager.login
TRACE: 2017/05/09 10:35:46 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/09 10:35:46 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/09 10:35:46 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/09 10:35:50 userimpl.go:109: Response user Obj :  {1 Sweta Vahia 9898989898   admin}
TRACE: 2017/05/09 10:35:50 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/09 10:35:50 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/09 10:35:53 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/09 10:35:53 loginimpl.go:81: executing query.....
TRACE: 2017/05/09 10:35:55 loginimpl.go:93: {0xc0420323f0 0xc042004700}
TRACE: 2017/05/09 10:35:55 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/09 10:35:55 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/09 10:35:55 loginimpl.go:16: exntering in SaveToken() function {0 1 CVgRIhKNIgiOaSEMdNtf 2017-05-09 10:35:50.9315554 +0530 IST}
TRACE: 2017/05/09 10:35:55 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/09 10:35:58 loginimpl.go:20: token inserted
TRACE: 2017/05/09 10:35:58 loginimpl.go:21: {0 1 CVgRIhKNIgiOaSEMdNtf 2017-05-09 10:35:50.9315554 +0530 IST}
TRACE: 2017/05/09 10:36:03 loginimpl.go:33: {0xc0422e4a80 0xc0422dafc0}
TRACE: 2017/05/09 10:36:03 Login.go:48: {1 Sweta CVgRIhKNIgiOaSEMdNtf admin}
TRACE: 2017/05/09 10:37:49 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/09 10:37:49 QuestionList.go:18: language
TRACE: 2017/05/09 10:37:49 QuestionList.go:19: jcTsYfadlOizxmHvuaXQ
TRACE: 2017/05/09 10:37:49 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/09 10:37:49 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/09 10:37:49 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/09 10:37:49 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/09 10:37:54 authenticatetokenimpl.go:47: jcTsYfadlOizxmHvuaXQ
TRACE: 2017/05/09 10:37:54 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/09 10:37:54 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/09 10:37:56 authenticatetokenimpl.go:51: jcTsYfadlOizxmHvuaXQ
TRACE: 2017/05/09 10:37:56 authenticatetokenimpl.go:59: Type is jcTsYfadlOizxmHvuaXQ
TRACE: 2017/05/09 10:37:56 aunthenticate.go:42: 2017-05-09 10:37:56
TRACE: 2017/05/09 10:37:56 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/09 10:38:03 Login.go:14: entering webservice.Login()
TRACE: 2017/05/09 10:38:03 Login.go:19: calling manager.Login()
TRACE: 2017/05/09 10:38:03 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/09 10:38:03 Login.go:16: entering manager.login
TRACE: 2017/05/09 10:38:03 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/09 10:38:03 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/09 10:38:03 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/09 10:38:16 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/09 10:38:16 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/09 10:38:16 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/09 10:38:21 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/09 10:38:21 loginimpl.go:81: executing query.....
TRACE: 2017/05/09 10:38:31 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/09 10:38:31 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/09 10:38:32 loginimpl.go:93: {0xc042032930 0xc042301630}
TRACE: 2017/05/09 10:38:32 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/09 10:38:32 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/09 10:38:32 loginimpl.go:16: exntering in SaveToken() function {0 2 dSmiufZJspcbCoxGBHjV 2017-05-09 10:38:16.4864161 +0530 IST}
TRACE: 2017/05/09 10:38:32 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/09 10:38:34 loginimpl.go:20: token inserted
TRACE: 2017/05/09 10:38:34 loginimpl.go:21: {0 2 dSmiufZJspcbCoxGBHjV 2017-05-09 10:38:16.4864161 +0530 IST}
TRACE: 2017/05/09 10:38:35 authenticatetokenimpl.go:30: {0xc0421bf9d0 0xc042301dc0}
TRACE: 2017/05/09 10:38:35 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/09 10:38:35 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/09 10:38:35 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/09 10:38:35 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/09 10:38:35 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/09 10:38:35 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/09 10:38:35 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/09 10:38:37 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0423d04e0 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/09 10:38:37 Login.go:14: entering webservice.Login()
TRACE: 2017/05/09 10:38:37 Login.go:19: calling manager.Login()
TRACE: 2017/05/09 10:38:37 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/09 10:38:37 Login.go:16: entering manager.login
TRACE: 2017/05/09 10:38:37 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/09 10:38:37 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/09 10:38:37 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/09 10:38:39 loginimpl.go:33: {0xc0421bfb90 0xc0422dbec0}
TRACE: 2017/05/09 10:38:39 Login.go:48: {2 rakesh dSmiufZJspcbCoxGBHjV user}
TRACE: 2017/05/09 10:38:42 questionimpl.go:30: &{0xc0422e50a0 0x718e40 0xc042009c00 false [] <nil> 0xc0422d9710}
TRACE: 2017/05/09 10:38:43 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/09 10:38:43 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/09 10:38:43 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/09 10:38:48 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/09 10:38:48 loginimpl.go:81: executing query.....
TRACE: 2017/05/09 10:38:51 loginimpl.go:93: {0xc0422e56c0 0xc0423e2bf0}
TRACE: 2017/05/09 10:38:51 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/09 10:38:51 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/09 10:38:51 loginimpl.go:16: exntering in SaveToken() function {0 2 MImpxtUcrtXHFjCIPKhM 2017-05-09 10:38:43.809805 +0530 IST}
TRACE: 2017/05/09 10:38:51 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/09 10:39:06 loginimpl.go:20: token inserted
TRACE: 2017/05/09 10:39:06 loginimpl.go:21: {0 2 MImpxtUcrtXHFjCIPKhM 2017-05-09 10:38:43.809805 +0530 IST}
TRACE: 2017/05/09 10:39:10 loginimpl.go:33: {0xc0421bfea0 0xc0423ca550}
TRACE: 2017/05/09 10:39:10 Login.go:48: {2 rakesh MImpxtUcrtXHFjCIPKhM user}
TRACE: 2017/05/09 10:39:21 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/09 10:39:21 QuestionList.go:18: fundamental
TRACE: 2017/05/09 10:39:21 QuestionList.go:19: MImpxtUcrtXHFjCIPKhM
TRACE: 2017/05/09 10:39:21 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/09 10:39:21 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/09 10:39:21 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/09 10:39:21 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/09 10:39:26 authenticatetokenimpl.go:47: MImpxtUcrtXHFjCIPKhM
TRACE: 2017/05/09 10:39:26 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/09 10:39:26 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/09 10:39:28 authenticatetokenimpl.go:51: MImpxtUcrtXHFjCIPKhM
TRACE: 2017/05/09 10:39:28 authenticatetokenimpl.go:59: Type is MImpxtUcrtXHFjCIPKhM
TRACE: 2017/05/09 10:39:28 aunthenticate.go:42: 2017-05-09 10:39:28
TRACE: 2017/05/09 10:39:28 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/09 10:39:31 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/09 10:39:31 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/09 10:39:32 authenticatetokenimpl.go:30: {0xc0422e5c00 0xc04240c050}
TRACE: 2017/05/09 10:39:32 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/09 10:39:32 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/09 10:39:32 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/09 10:39:32 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/09 10:39:32 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/09 10:39:32 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/09 10:39:32 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/09 10:39:35 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0424112c0 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/09 10:39:39 questionimpl.go:30: &{0xc042428700 0x718e40 0xc0424581a0 false [] <nil> 0xc04245a0c0}
TRACE: 2017/05/09 10:39:43 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/09 10:39:43 AnswerList.go:23: [{0 39 } {0 38 } {0 41 } {0 40 } {0 43 } {0 36 } {0 37 } {0 42 }]
TRACE: 2017/05/09 10:39:43 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/09 10:39:43 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/09 10:39:43 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/09 10:39:43 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/09 10:39:43 CalculateScore.go:30: answerList [{0 39 } {0 38 } {0 41 } {0 40 } {0 43 } {0 36 } {0 37 } {0 42 }]
TRACE: 2017/05/09 10:39:43 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/09 10:39:43 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/09 10:39:43 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/09 10:39:43 questionimpl.go:98: executing query and fetching answers 
TRACE: 2017/05/09 10:39:44 questionimpl.go:105: dial tcp 127.0.0.1:3306: connectex: No connection could be made because the target machine actively refused it.
TRACE: 2017/05/09 10:40:08 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/05/09 10:40:08 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/05/09 10:40:08 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/05/09 10:40:08 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/05/09 10:40:08 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/05/09 10:40:08 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/05/09 10:40:08 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/05/09 10:40:08 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/05/09 10:40:08 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/05/09 10:40:08 debug.go:45: [GIN-debug] Listening and serving HTTP on :8084
TRACE: 2017/05/09 10:40:16 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/09 10:40:16 QuestionList.go:18: java
TRACE: 2017/05/09 10:40:16 QuestionList.go:19: jcTsYfadlOizxmHvuaXQ
TRACE: 2017/05/09 10:40:16 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/09 10:40:16 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/09 10:40:16 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/09 10:40:16 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/09 10:40:22 authenticatetokenimpl.go:47: jcTsYfadlOizxmHvuaXQ
TRACE: 2017/05/09 10:40:22 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/09 10:40:22 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/09 10:40:25 authenticatetokenimpl.go:51: 
TRACE: 2017/05/09 10:40:25 authenticatetokenimpl.go:54: No uid with that token.
TRACE: 2017/05/09 11:03:35 Login.go:14: entering webservice.Login()
TRACE: 2017/05/09 11:03:35 Login.go:19: calling manager.Login()
TRACE: 2017/05/09 11:03:35 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/09 11:03:35 Login.go:16: entering manager.login
TRACE: 2017/05/09 11:03:35 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/09 11:03:35 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/09 11:03:35 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/09 11:03:39 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/09 11:03:39 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/09 11:03:39 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/09 11:03:41 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/09 11:03:41 loginimpl.go:81: executing query.....
TRACE: 2017/05/09 11:03:43 loginimpl.go:93: {0xc0421bef50 0xc0421e68b0}
TRACE: 2017/05/09 11:03:43 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/09 11:03:43 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/09 11:03:43 loginimpl.go:16: exntering in SaveToken() function {0 2 phQlSdHrSyOJIaypEdmu 2017-05-09 11:03:39.8118392 +0530 IST}
TRACE: 2017/05/09 11:03:43 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/09 11:03:45 loginimpl.go:20: token inserted
TRACE: 2017/05/09 11:03:45 loginimpl.go:21: {0 2 phQlSdHrSyOJIaypEdmu 2017-05-09 11:03:39.8118392 +0530 IST}
TRACE: 2017/05/09 11:03:47 loginimpl.go:33: {0xc042032070 0xc0421e6e70}
TRACE: 2017/05/09 11:03:47 Login.go:48: {2 rakesh phQlSdHrSyOJIaypEdmu user}
TRACE: 2017/05/09 11:04:28 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/09 11:04:28 QuestionList.go:18: fundamental
TRACE: 2017/05/09 11:04:28 QuestionList.go:19: phQlSdHrSyOJIaypEdmu
TRACE: 2017/05/09 11:04:28 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/09 11:04:28 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/09 11:04:28 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/09 11:04:28 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/09 11:04:30 authenticatetokenimpl.go:47: phQlSdHrSyOJIaypEdmu
TRACE: 2017/05/09 11:04:30 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/09 11:04:30 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/09 11:04:32 authenticatetokenimpl.go:51: phQlSdHrSyOJIaypEdmu
TRACE: 2017/05/09 11:04:32 authenticatetokenimpl.go:59: Type is phQlSdHrSyOJIaypEdmu
TRACE: 2017/05/09 11:04:32 aunthenticate.go:42: 2017-05-09 11:04:32
TRACE: 2017/05/09 11:04:32 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/09 11:04:34 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/09 11:04:34 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/09 11:04:36 authenticatetokenimpl.go:30: {0xc0422ae7e0 0xc0421e4ac0}
TRACE: 2017/05/09 11:04:36 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/09 11:04:36 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/09 11:04:36 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/09 11:04:36 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/09 11:04:36 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/09 11:04:36 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/09 11:04:36 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/09 11:04:38 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0422857a0 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/09 11:04:40 questionimpl.go:30: &{0xc0421bf880 0x718e40 0xc042333cc0 false [] <nil> 0xc042344810}
TRACE: 2017/05/09 11:06:09 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/09 11:06:09 QuestionList.go:18: fundamental
TRACE: 2017/05/09 11:06:09 QuestionList.go:19: jcTsYfadlOizxmHvuaXQ
TRACE: 2017/05/09 11:06:09 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/09 11:06:09 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/09 11:06:09 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/09 11:06:09 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/09 11:06:11 authenticatetokenimpl.go:47: jcTsYfadlOizxmHvuaXQ
TRACE: 2017/05/09 11:06:11 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/09 11:06:11 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/09 11:06:12 Logout.go:14: entering webservice.Logout()
TRACE: 2017/05/09 11:06:12 Logout.go:16: calling manager.DeleteTokenLogin()
TRACE: 2017/05/09 11:06:12 Logout.go:12: entering manager.DeleteToken()
TRACE: 2017/05/09 11:06:12 Logout.go:15: calling logoutdao.DeleteToken()
TRACE: 2017/05/09 11:06:12 logoutimpl.go:13: exntering in DeleteToken() function
TRACE: 2017/05/09 11:06:12 logoutimpl.go:15: executing query and deleting token from database 
TRACE: 2017/05/09 11:06:13 authenticatetokenimpl.go:51: 
TRACE: 2017/05/09 11:06:13 authenticatetokenimpl.go:54: No uid with that token.
TRACE: 2017/05/09 11:06:16 logoutimpl.go:27: 
TRACE: 2017/05/09 11:06:16 logoutimpl.go:37: 0
TRACE: 2017/05/09 11:07:41 Login.go:14: entering webservice.Login()
TRACE: 2017/05/09 11:07:41 Login.go:19: calling manager.Login()
TRACE: 2017/05/09 11:07:41 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/09 11:07:41 Login.go:16: entering manager.login
TRACE: 2017/05/09 11:07:41 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/09 11:07:41 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/09 11:07:41 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/09 11:07:45 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/09 11:07:45 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/09 11:07:45 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/09 11:07:47 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/09 11:07:47 loginimpl.go:81: executing query.....
TRACE: 2017/05/09 11:07:49 loginimpl.go:93: {0xc0421bff80 0xc042384ef0}
TRACE: 2017/05/09 11:07:49 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/09 11:07:49 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/09 11:07:49 loginimpl.go:16: exntering in SaveToken() function {0 2 NNqTeJJSjorsCkTvDhUQ 2017-05-09 11:07:45.2679524 +0530 IST}
TRACE: 2017/05/09 11:07:49 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/09 11:07:51 loginimpl.go:20: token inserted
TRACE: 2017/05/09 11:07:51 loginimpl.go:21: {0 2 NNqTeJJSjorsCkTvDhUQ 2017-05-09 11:07:45.2679524 +0530 IST}
TRACE: 2017/05/09 11:07:52 loginimpl.go:33: {0xc0423f23f0 0xc0422abed0}
TRACE: 2017/05/09 11:07:52 Login.go:48: {2 rakesh NNqTeJJSjorsCkTvDhUQ user}
TRACE: 2017/05/09 11:08:01 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/09 11:08:01 QuestionList.go:18: java
TRACE: 2017/05/09 11:08:01 QuestionList.go:19: NNqTeJJSjorsCkTvDhUQ
TRACE: 2017/05/09 11:08:01 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/09 11:08:01 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/09 11:08:01 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/09 11:08:01 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/09 11:08:03 authenticatetokenimpl.go:47: NNqTeJJSjorsCkTvDhUQ
TRACE: 2017/05/09 11:08:03 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/09 11:08:03 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/09 11:08:05 authenticatetokenimpl.go:51: NNqTeJJSjorsCkTvDhUQ
TRACE: 2017/05/09 11:08:05 authenticatetokenimpl.go:59: Type is NNqTeJJSjorsCkTvDhUQ
TRACE: 2017/05/09 11:08:05 aunthenticate.go:42: 2017-05-09 11:08:05
TRACE: 2017/05/09 11:08:05 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/09 11:08:07 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/09 11:08:07 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/09 11:08:09 authenticatetokenimpl.go:30: {0xc04228b180 0xc04240c5b0}
TRACE: 2017/05/09 11:08:09 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/09 11:08:09 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/09 11:08:09 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/09 11:08:09 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/09 11:08:09 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/09 11:08:09 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/09 11:08:09 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/09 11:08:11 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0423f4c60 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/09 11:08:13 questionimpl.go:30: &{0xc042032770 0x718e40 0xc042009f20 false [] <nil> 0xc042006ed0}
TRACE: 2017/05/09 11:08:25 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/09 11:08:25 QuestionList.go:18: fundamental
TRACE: 2017/05/09 11:08:25 QuestionList.go:19: NNqTeJJSjorsCkTvDhUQ
TRACE: 2017/05/09 11:08:25 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/09 11:08:25 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/09 11:08:25 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/09 11:08:25 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/09 11:08:27 authenticatetokenimpl.go:47: NNqTeJJSjorsCkTvDhUQ
TRACE: 2017/05/09 11:08:27 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/09 11:08:27 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/09 11:08:28 authenticatetokenimpl.go:51: NNqTeJJSjorsCkTvDhUQ
TRACE: 2017/05/09 11:08:28 authenticatetokenimpl.go:59: Type is NNqTeJJSjorsCkTvDhUQ
TRACE: 2017/05/09 11:08:28 aunthenticate.go:42: 2017-05-09 11:08:28
TRACE: 2017/05/09 11:08:28 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/09 11:08:30 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/09 11:08:30 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/09 11:08:32 authenticatetokenimpl.go:30: {0xc04228b500 0xc04240cf10}
TRACE: 2017/05/09 11:08:32 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/09 11:08:32 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/09 11:08:32 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/09 11:08:32 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/09 11:08:32 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/09 11:08:32 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/09 11:08:32 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/09 11:08:34 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0423f4fc0 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/09 11:08:36 questionimpl.go:30: &{0xc042033260 0x718e40 0xc042472d60 false [] <nil> 0xc0424411d0}
TRACE: 2017/05/09 11:14:39 Login.go:14: entering webservice.Login()
TRACE: 2017/05/09 11:14:39 Login.go:19: calling manager.Login()
TRACE: 2017/05/09 11:14:39 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/09 11:14:39 Login.go:16: entering manager.login
TRACE: 2017/05/09 11:14:39 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/09 11:14:39 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/09 11:14:39 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/09 11:14:43 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/09 11:14:43 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/09 11:14:43 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/09 11:14:45 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/09 11:14:45 loginimpl.go:81: executing query.....
TRACE: 2017/05/09 11:14:47 loginimpl.go:93: {0xc042128230 0xc042106270}
TRACE: 2017/05/09 11:14:47 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/09 11:14:47 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/09 11:14:47 loginimpl.go:16: exntering in SaveToken() function {0 2 tGdYAdJngwShbOHcZfKJ 2017-05-09 11:14:43.4589213 +0530 IST}
TRACE: 2017/05/09 11:14:47 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/09 11:14:49 loginimpl.go:20: token inserted
TRACE: 2017/05/09 11:14:49 loginimpl.go:21: {0 2 tGdYAdJngwShbOHcZfKJ 2017-05-09 11:14:43.4589213 +0530 IST}
TRACE: 2017/05/09 11:14:51 loginimpl.go:33: {0xc0421be700 0xc0421065f0}
TRACE: 2017/05/09 11:14:51 Login.go:48: {2 rakesh tGdYAdJngwShbOHcZfKJ user}
TRACE: 2017/05/09 11:15:13 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/09 11:15:13 QuestionList.go:18: fundamental
TRACE: 2017/05/09 11:15:13 QuestionList.go:19: tGdYAdJngwShbOHcZfKJ
TRACE: 2017/05/09 11:15:13 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/09 11:15:13 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/09 11:15:13 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/09 11:15:13 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/09 11:15:15 authenticatetokenimpl.go:47: tGdYAdJngwShbOHcZfKJ
TRACE: 2017/05/09 11:15:15 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/09 11:15:15 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/09 11:15:17 authenticatetokenimpl.go:51: tGdYAdJngwShbOHcZfKJ
TRACE: 2017/05/09 11:15:17 authenticatetokenimpl.go:59: Type is tGdYAdJngwShbOHcZfKJ
TRACE: 2017/05/09 11:15:17 aunthenticate.go:42: 2017-05-09 11:15:17
TRACE: 2017/05/09 11:15:17 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/09 11:15:19 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/09 11:15:19 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/09 11:15:21 authenticatetokenimpl.go:30: {0xc0421287e0 0xc042137850}
TRACE: 2017/05/09 11:15:21 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/09 11:15:21 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/09 11:15:21 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/09 11:15:21 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/09 11:15:21 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/09 11:15:21 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/09 11:15:21 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/09 11:15:23 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0422c5200 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/09 11:15:25 questionimpl.go:30: &{0xc042138930 0x718e40 0xc0422ac980 false [] <nil> 0xc04228eab0}
TRACE: 2017/05/09 11:15:30 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/09 11:15:30 AnswerList.go:23: [{0 3 } {0 1 } {0 4 } {0 10 } {0 8 } {0 5 } {0 6 } {0 2 } {0 7 } {0 9 }]
TRACE: 2017/05/09 11:15:30 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/09 11:15:30 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/09 11:15:30 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/09 11:15:30 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/09 11:15:30 CalculateScore.go:30: answerList [{0 3 } {0 1 } {0 4 } {0 10 } {0 8 } {0 5 } {0 6 } {0 2 } {0 7 } {0 9 }]
TRACE: 2017/05/09 11:15:30 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/09 11:15:30 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/09 11:15:30 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/09 11:15:30 questionimpl.go:98: executing query and fetching answers 
TRACE: 2017/05/09 11:15:31 questionimpl.go:105: dial tcp 127.0.0.1:3306: connectex: No connection could be made because the target machine actively refused it.
TRACE: 2017/05/09 11:26:07 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/05/09 11:26:07 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/05/09 11:26:07 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/05/09 11:26:07 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/05/09 11:26:07 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/05/09 11:26:07 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/05/09 11:26:07 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/05/09 11:26:07 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/05/09 11:26:07 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/05/09 11:26:07 debug.go:45: [GIN-debug] Listening and serving HTTP on :8084
TRACE: 2017/05/09 11:26:15 Login.go:14: entering webservice.Login()
TRACE: 2017/05/09 11:26:15 Login.go:19: calling manager.Login()
TRACE: 2017/05/09 11:26:15 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/09 11:26:15 Login.go:16: entering manager.login
TRACE: 2017/05/09 11:26:15 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/09 11:26:15 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/09 11:26:15 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/09 11:26:19 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/09 11:26:19 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/09 11:26:19 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/09 11:26:21 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/09 11:26:21 loginimpl.go:81: executing query.....
TRACE: 2017/05/09 11:26:23 loginimpl.go:93: {0xc0420328c0 0xc0422080a0}
TRACE: 2017/05/09 11:26:23 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/09 11:26:23 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/09 11:26:23 loginimpl.go:16: exntering in SaveToken() function {0 2 pwgXmFhKUMawBzqQuLyR 2017-05-09 11:26:19.8379862 +0530 IST}
TRACE: 2017/05/09 11:26:23 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/09 11:26:25 loginimpl.go:20: token inserted
TRACE: 2017/05/09 11:26:25 loginimpl.go:21: {0 2 pwgXmFhKUMawBzqQuLyR 2017-05-09 11:26:19.8379862 +0530 IST}
TRACE: 2017/05/09 11:26:27 loginimpl.go:33: {0xc0422e41c0 0xc0422bc3f0}
TRACE: 2017/05/09 11:26:27 Login.go:48: {2 rakesh pwgXmFhKUMawBzqQuLyR user}
TRACE: 2017/05/09 11:26:38 Logout.go:14: entering webservice.Logout()
TRACE: 2017/05/09 11:26:38 Logout.go:16: calling manager.DeleteTokenLogin()
TRACE: 2017/05/09 11:26:38 Logout.go:12: entering manager.DeleteToken()
TRACE: 2017/05/09 11:26:38 Logout.go:15: calling logoutdao.DeleteToken()
TRACE: 2017/05/09 11:26:38 logoutimpl.go:13: exntering in DeleteToken() function
TRACE: 2017/05/09 11:26:38 logoutimpl.go:15: executing query and deleting token from database 
TRACE: 2017/05/09 11:26:42 logoutimpl.go:27: 
TRACE: 2017/05/09 11:26:42 logoutimpl.go:37: 0
TRACE: 2017/05/09 11:26:57 Login.go:14: entering webservice.Login()
TRACE: 2017/05/09 11:26:57 Login.go:19: calling manager.Login()
TRACE: 2017/05/09 11:26:57 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/09 11:26:57 Login.go:16: entering manager.login
TRACE: 2017/05/09 11:26:57 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/09 11:26:57 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/09 11:26:57 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/09 11:27:01 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/09 11:27:01 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/09 11:27:01 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/09 11:27:03 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/09 11:27:03 loginimpl.go:81: executing query.....
TRACE: 2017/05/09 11:27:05 loginimpl.go:93: {0xc0422e49a0 0xc0422bd6a0}
TRACE: 2017/05/09 11:27:05 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/09 11:27:05 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/09 11:27:05 loginimpl.go:16: exntering in SaveToken() function {0 2 JKdlcjaVnYlIBQHWBJsp 2017-05-09 11:27:01.3597673 +0530 IST}
TRACE: 2017/05/09 11:27:05 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/09 11:27:07 loginimpl.go:20: token inserted
TRACE: 2017/05/09 11:27:07 loginimpl.go:21: {0 2 JKdlcjaVnYlIBQHWBJsp 2017-05-09 11:27:01.3597673 +0530 IST}
TRACE: 2017/05/09 11:27:08 loginimpl.go:33: {0xc0421beaf0 0xc042368130}
TRACE: 2017/05/09 11:27:08 Login.go:48: {2 rakesh JKdlcjaVnYlIBQHWBJsp user}
TRACE: 2017/05/09 11:27:15 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/09 11:27:19 QuestionList.go:18: fundamental
TRACE: 2017/05/09 11:27:19 QuestionList.go:19: JKdlcjaVnYlIBQHWBJsp
TRACE: 2017/05/09 11:27:19 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/09 11:27:19 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/09 11:27:19 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/09 11:27:19 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/09 11:27:21 authenticatetokenimpl.go:47: JKdlcjaVnYlIBQHWBJsp
TRACE: 2017/05/09 11:27:24 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/09 11:27:24 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/09 11:27:25 authenticatetokenimpl.go:51: JKdlcjaVnYlIBQHWBJsp
TRACE: 2017/05/09 11:27:25 authenticatetokenimpl.go:59: Type is JKdlcjaVnYlIBQHWBJsp
TRACE: 2017/05/09 11:27:25 aunthenticate.go:42: 2017-05-09 11:27:25
TRACE: 2017/05/09 11:27:25 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/09 11:27:27 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/09 11:27:27 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/09 11:27:29 authenticatetokenimpl.go:30: {0xc0421bed90 0xc04239a6b0}
TRACE: 2017/05/09 11:27:29 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/09 11:27:29 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/09 11:27:29 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/09 11:27:29 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/09 11:27:29 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/09 11:27:29 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/09 11:27:29 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/09 11:27:31 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0423b02a0 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/09 11:27:33 questionimpl.go:30: &{0xc0422e52d0 0x718e40 0xc04239eca0 false [] <nil> 0xc0423bc0c0}
TRACE: 2017/05/09 11:27:45 Logout.go:14: entering webservice.Logout()
TRACE: 2017/05/09 11:27:45 Logout.go:16: calling manager.DeleteTokenLogin()
TRACE: 2017/05/09 11:27:45 Logout.go:12: entering manager.DeleteToken()
TRACE: 2017/05/09 11:27:45 Logout.go:15: calling logoutdao.DeleteToken()
TRACE: 2017/05/09 11:27:45 logoutimpl.go:13: exntering in DeleteToken() function
TRACE: 2017/05/09 11:27:45 logoutimpl.go:15: executing query and deleting token from database 
TRACE: 2017/05/09 11:27:48 logoutimpl.go:27: 
TRACE: 2017/05/09 11:27:48 logoutimpl.go:37: 0
TRACE: 2017/05/09 11:28:12 Login.go:14: entering webservice.Login()
TRACE: 2017/05/09 11:28:12 Login.go:19: calling manager.Login()
TRACE: 2017/05/09 11:28:12 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/09 11:28:12 Login.go:16: entering manager.login
TRACE: 2017/05/09 11:28:12 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/09 11:28:12 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/09 11:28:12 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/09 11:28:15 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/09 11:28:15 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/09 11:28:15 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/09 11:28:17 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/09 11:28:17 loginimpl.go:81: executing query.....
TRACE: 2017/05/09 11:28:19 loginimpl.go:93: {0xc042206f50 0xc042209a40}
TRACE: 2017/05/09 11:28:19 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/09 11:28:19 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/09 11:28:19 loginimpl.go:16: exntering in SaveToken() function {0 2 kJQKoDzdoQoNJazVecvN 2017-05-09 11:28:15.8245762 +0530 IST}
TRACE: 2017/05/09 11:28:19 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/09 11:28:21 loginimpl.go:20: token inserted
TRACE: 2017/05/09 11:28:21 loginimpl.go:21: {0 2 kJQKoDzdoQoNJazVecvN 2017-05-09 11:28:15.8245762 +0530 IST}
TRACE: 2017/05/09 11:28:23 loginimpl.go:33: {0xc0420332d0 0xc0423f80a0}
TRACE: 2017/05/09 11:28:23 Login.go:48: {2 rakesh kJQKoDzdoQoNJazVecvN user}
TRACE: 2017/05/09 11:29:07 Login.go:14: entering webservice.Login()
TRACE: 2017/05/09 11:29:07 Login.go:19: calling manager.Login()
TRACE: 2017/05/09 11:29:07 Login.go:20: {0    test@1.com 1223 }
TRACE: 2017/05/09 11:29:07 Login.go:16: entering manager.login
TRACE: 2017/05/09 11:29:07 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/09 11:29:07 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/09 11:29:07 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/09 11:29:11 userimpl.go:109: Response user Obj :  {0      }
TRACE: 2017/05/09 11:29:19 Logout.go:14: entering webservice.Logout()
TRACE: 2017/05/09 11:29:19 Logout.go:16: calling manager.DeleteTokenLogin()
TRACE: 2017/05/09 11:29:19 Logout.go:12: entering manager.DeleteToken()
TRACE: 2017/05/09 11:29:19 Logout.go:15: calling logoutdao.DeleteToken()
TRACE: 2017/05/09 11:29:19 logoutimpl.go:13: exntering in DeleteToken() function
TRACE: 2017/05/09 11:29:19 logoutimpl.go:15: executing query and deleting token from database 
TRACE: 2017/05/09 11:29:23 logoutimpl.go:27: 
TRACE: 2017/05/09 11:29:23 logoutimpl.go:37: 0
TRACE: 2017/05/09 11:29:35 Login.go:14: entering webservice.Login()
TRACE: 2017/05/09 11:29:35 Login.go:19: calling manager.Login()
TRACE: 2017/05/09 11:29:35 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/09 11:29:35 Login.go:16: entering manager.login
TRACE: 2017/05/09 11:29:35 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/09 11:29:35 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/09 11:29:35 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/09 11:29:39 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/09 11:29:39 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/09 11:29:39 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/09 11:29:41 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/09 11:29:41 loginimpl.go:81: executing query.....
TRACE: 2017/05/09 11:29:42 loginimpl.go:93: {0xc042033ab0 0xc042414450}
TRACE: 2017/05/09 11:29:42 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/09 11:29:42 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/09 11:29:42 loginimpl.go:16: exntering in SaveToken() function {0 2 LrpFzwfoQeFGXALcXdDX 2017-05-09 11:29:39.1414069 +0530 IST}
TRACE: 2017/05/09 11:29:42 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/09 11:29:44 loginimpl.go:20: token inserted
TRACE: 2017/05/09 11:29:44 loginimpl.go:21: {0 2 LrpFzwfoQeFGXALcXdDX 2017-05-09 11:29:39.1414069 +0530 IST}
TRACE: 2017/05/09 11:29:46 loginimpl.go:33: {0xc0421bf8f0 0xc042369ea0}
TRACE: 2017/05/09 11:29:46 Login.go:48: {2 rakesh LrpFzwfoQeFGXALcXdDX user}
TRACE: 2017/05/09 11:29:54 Logout.go:14: entering webservice.Logout()
TRACE: 2017/05/09 11:29:54 Logout.go:16: calling manager.DeleteTokenLogin()
TRACE: 2017/05/09 11:29:54 Logout.go:12: entering manager.DeleteToken()
TRACE: 2017/05/09 11:29:54 Logout.go:15: calling logoutdao.DeleteToken()
TRACE: 2017/05/09 11:29:54 logoutimpl.go:13: exntering in DeleteToken() function
TRACE: 2017/05/09 11:29:54 logoutimpl.go:15: executing query and deleting token from database 
TRACE: 2017/05/09 11:29:58 logoutimpl.go:27: 
TRACE: 2017/05/09 11:29:58 logoutimpl.go:37: 0
TRACE: 2017/05/09 11:30:17 Login.go:14: entering webservice.Login()
TRACE: 2017/05/09 11:30:17 Login.go:19: calling manager.Login()
TRACE: 2017/05/09 11:30:17 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/09 11:30:17 Login.go:16: entering manager.login
TRACE: 2017/05/09 11:30:17 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/09 11:30:17 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/09 11:30:17 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/09 11:30:21 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/09 11:30:21 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/09 11:30:21 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/09 11:30:23 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/09 11:30:23 loginimpl.go:81: executing query.....
TRACE: 2017/05/09 11:30:25 loginimpl.go:93: {0xc042484230 0xc042430d20}
TRACE: 2017/05/09 11:30:25 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/09 11:30:25 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/09 11:30:25 loginimpl.go:16: exntering in SaveToken() function {0 2 NukPuwrOVMEmhbMdqpBn 2017-05-09 11:30:21.3927826 +0530 IST}
TRACE: 2017/05/09 11:30:25 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/09 11:30:27 loginimpl.go:20: token inserted
TRACE: 2017/05/09 11:30:27 loginimpl.go:21: {0 2 NukPuwrOVMEmhbMdqpBn 2017-05-09 11:30:21.3927826 +0530 IST}
TRACE: 2017/05/09 11:30:29 loginimpl.go:33: {0xc042207c00 0xc0423f9410}
TRACE: 2017/05/09 11:30:29 Login.go:48: {2 rakesh NukPuwrOVMEmhbMdqpBn user}
TRACE: 2017/05/09 11:30:45 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/09 11:30:45 QuestionList.go:18: fundamental
TRACE: 2017/05/09 11:30:45 QuestionList.go:19: NukPuwrOVMEmhbMdqpBn
TRACE: 2017/05/09 11:30:45 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/09 11:30:45 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/09 11:30:45 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/09 11:30:45 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/09 11:30:47 authenticatetokenimpl.go:47: NukPuwrOVMEmhbMdqpBn
TRACE: 2017/05/09 11:30:47 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/09 11:30:47 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/09 11:30:49 authenticatetokenimpl.go:51: NukPuwrOVMEmhbMdqpBn
TRACE: 2017/05/09 11:30:49 authenticatetokenimpl.go:59: Type is NukPuwrOVMEmhbMdqpBn
TRACE: 2017/05/09 11:30:49 aunthenticate.go:42: 2017-05-09 11:30:49
TRACE: 2017/05/09 11:30:49 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/09 11:30:51 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/09 11:30:51 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/09 11:30:53 authenticatetokenimpl.go:30: {0xc0422e42a0 0xc042136390}
TRACE: 2017/05/09 11:30:53 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/09 11:30:53 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/09 11:30:53 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/09 11:30:53 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/09 11:30:53 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/09 11:30:53 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/09 11:30:53 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/09 11:30:55 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0423b14a0 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/09 11:30:57 questionimpl.go:30: &{0xc0421482a0 0x718e40 0xc04239ee00 false [] <nil> 0xc0421f4360}
TRACE: 2017/05/09 11:31:01 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/09 11:31:02 AnswerList.go:23: [{0 3 } {0 7 } {0 4 } {0 6 } {0 9 } {0 8 } {0 10 } {0 5 } {0 2 } {0 1 }]
TRACE: 2017/05/09 11:31:02 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/09 11:31:02 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/09 11:31:02 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/09 11:31:02 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/09 11:31:02 CalculateScore.go:30: answerList [{0 3 } {0 7 } {0 4 } {0 6 } {0 9 } {0 8 } {0 10 } {0 5 } {0 2 } {0 1 }]
TRACE: 2017/05/09 11:31:02 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/09 11:31:02 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/09 11:31:02 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/09 11:31:02 questionimpl.go:98: executing query and fetching answers 
TRACE: 2017/05/09 11:31:04 questionimpl.go:105: dial tcp 127.0.0.1:3306: connectex: No connection could be made because the target machine actively refused it.
TRACE: 2017/05/09 11:31:46 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/05/09 11:31:46 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/05/09 11:31:46 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/05/09 11:31:46 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/05/09 11:31:46 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/05/09 11:31:46 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/05/09 11:31:46 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/05/09 11:31:46 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/05/09 11:31:46 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/05/09 11:31:46 debug.go:45: [GIN-debug] Listening and serving HTTP on :8084
TRACE: 2017/05/09 11:58:34 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/09 11:58:34 QuestionList.go:18: fundamental
TRACE: 2017/05/09 11:58:34 QuestionList.go:19: NukPuwrOVMEmhbMdqpBn
TRACE: 2017/05/09 11:58:34 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/09 11:58:34 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/09 11:58:34 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/09 11:58:34 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/09 11:58:37 authenticatetokenimpl.go:47: NukPuwrOVMEmhbMdqpBn
TRACE: 2017/05/09 11:58:37 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/09 11:58:37 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/09 11:58:39 authenticatetokenimpl.go:51: NukPuwrOVMEmhbMdqpBn
TRACE: 2017/05/09 11:58:39 authenticatetokenimpl.go:59: Type is NukPuwrOVMEmhbMdqpBn
TRACE: 2017/05/09 11:58:39 aunthenticate.go:42: 2017-05-09 11:58:39
TRACE: 2017/05/09 11:58:39 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/09 11:58:41 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/09 11:58:41 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/09 11:58:42 authenticatetokenimpl.go:30: {0xc0422902a0 0xc0420044c0}
TRACE: 2017/05/09 11:58:42 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/09 11:58:42 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/09 11:58:42 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/09 11:58:42 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/09 11:58:42 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/09 11:58:42 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/09 11:58:42 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/09 11:58:45 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0422ee180 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/09 11:58:46 questionimpl.go:30: &{0xc0421becb0 0x718e40 0xc0421d6d40 false [] <nil> 0xc042145620}
TRACE: 2017/05/09 12:02:12 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/09 12:02:12 QuestionList.go:18: java
TRACE: 2017/05/09 12:02:12 QuestionList.go:19: NukPuwrOVMEmhbMdqpBn
TRACE: 2017/05/09 12:02:12 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/09 12:02:12 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/09 12:02:12 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/09 12:02:12 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/09 12:02:14 authenticatetokenimpl.go:47: NukPuwrOVMEmhbMdqpBn
TRACE: 2017/05/09 12:02:14 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/09 12:02:14 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/09 12:02:16 authenticatetokenimpl.go:51: NukPuwrOVMEmhbMdqpBn
TRACE: 2017/05/09 12:02:16 authenticatetokenimpl.go:59: Type is NukPuwrOVMEmhbMdqpBn
TRACE: 2017/05/09 12:02:16 aunthenticate.go:42: 2017-05-09 12:02:16
TRACE: 2017/05/09 12:02:16 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/09 12:02:18 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/09 12:02:18 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/09 12:02:20 authenticatetokenimpl.go:30: {0xc042032690 0xc042004c60}
TRACE: 2017/05/09 12:02:20 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/09 12:02:20 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/09 12:02:20 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/09 12:02:20 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/09 12:02:20 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/09 12:02:20 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/09 12:02:20 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/09 12:02:22 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc04232e4e0 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/09 12:02:24 questionimpl.go:30: &{0xc042290a80 0x718e40 0xc04232a6e0 false [] <nil> 0xc0422890b0}
TRACE: 2017/05/09 12:03:25 Login.go:14: entering webservice.Login()
TRACE: 2017/05/09 12:03:25 Login.go:19: calling manager.Login()
TRACE: 2017/05/09 12:03:25 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/09 12:03:25 Login.go:16: entering manager.login
TRACE: 2017/05/09 12:03:25 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/09 12:03:25 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/09 12:03:25 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/09 12:03:28 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/09 12:03:28 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/09 12:03:28 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/09 12:03:30 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/09 12:03:30 loginimpl.go:81: executing query.....
TRACE: 2017/05/09 12:03:32 loginimpl.go:93: {0xc042032a10 0xc042005400}
TRACE: 2017/05/09 12:03:32 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/09 12:03:32 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/09 12:03:32 loginimpl.go:16: exntering in SaveToken() function {0 2 fvpexJLSbiSEDtAGHPSR 2017-05-09 12:03:28.8962357 +0530 IST}
TRACE: 2017/05/09 12:03:32 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/09 12:03:34 loginimpl.go:20: token inserted
TRACE: 2017/05/09 12:03:34 loginimpl.go:21: {0 2 fvpexJLSbiSEDtAGHPSR 2017-05-09 12:03:28.8962357 +0530 IST}
TRACE: 2017/05/09 12:03:36 loginimpl.go:33: {0xc0422bc690 0xc0422b6a50}
TRACE: 2017/05/09 12:03:36 Login.go:48: {2 rakesh fvpexJLSbiSEDtAGHPSR user}
TRACE: 2017/05/09 12:03:49 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/09 12:03:49 QuestionList.go:18: fundamental
TRACE: 2017/05/09 12:03:49 QuestionList.go:19: fvpexJLSbiSEDtAGHPSR
TRACE: 2017/05/09 12:03:49 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/09 12:03:49 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/09 12:03:49 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/09 12:03:49 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/09 12:03:51 authenticatetokenimpl.go:47: fvpexJLSbiSEDtAGHPSR
TRACE: 2017/05/09 12:03:51 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/09 12:03:51 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/09 12:03:53 authenticatetokenimpl.go:51: fvpexJLSbiSEDtAGHPSR
TRACE: 2017/05/09 12:03:53 authenticatetokenimpl.go:59: Type is fvpexJLSbiSEDtAGHPSR
TRACE: 2017/05/09 12:03:53 aunthenticate.go:42: 2017-05-09 12:03:53
TRACE: 2017/05/09 12:03:53 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/09 12:03:55 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/09 12:03:55 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/09 12:03:57 authenticatetokenimpl.go:30: {0xc0422916c0 0xc0421ed1e0}
TRACE: 2017/05/09 12:03:57 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/09 12:03:57 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/09 12:03:57 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/09 12:03:57 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/09 12:03:57 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/09 12:03:57 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/09 12:03:57 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/09 12:03:59 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0422efc80 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/09 12:04:00 questionimpl.go:30: &{0xc0421bf340 0x718e40 0xc04231ecc0 false [] <nil> 0xc042312e40}
TRACE: 2017/05/09 12:05:01 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/09 12:05:01 AnswerList.go:23: [{0 10 } {0 9 } {0 8 } {0 5 } {0 1 } {0 7 } {0 4 } {0 6 } {0 3 } {0 2 }]
TRACE: 2017/05/09 12:05:01 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/09 12:05:01 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/09 12:05:01 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/09 12:05:01 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/09 12:05:01 CalculateScore.go:30: answerList [{0 10 } {0 9 } {0 8 } {0 5 } {0 1 } {0 7 } {0 4 } {0 6 } {0 3 } {0 2 }]
TRACE: 2017/05/09 12:05:01 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/09 12:05:01 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/09 12:05:01 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/09 12:05:01 questionimpl.go:98: executing query and fetching answers 
TRACE: 2017/05/09 12:05:02 questionimpl.go:105: dial tcp 127.0.0.1:3306: connectex: No connection could be made because the target machine actively refused it.
TRACE: 2017/05/09 12:16:01 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/05/09 12:16:01 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/05/09 12:16:01 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/05/09 12:16:01 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/05/09 12:16:01 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/05/09 12:16:01 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/05/09 12:16:01 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/05/09 12:16:01 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/05/09 12:16:01 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/05/09 12:16:01 debug.go:45: [GIN-debug] Listening and serving HTTP on :8084
TRACE: 2017/05/09 12:22:24 Login.go:14: entering webservice.Login()
TRACE: 2017/05/09 12:22:24 Login.go:19: calling manager.Login()
TRACE: 2017/05/09 12:22:24 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/09 12:22:24 Login.go:16: entering manager.login
TRACE: 2017/05/09 12:22:24 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/09 12:22:24 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/09 12:22:24 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/09 12:22:29 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/09 12:22:29 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/09 12:22:29 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/09 12:22:31 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/09 12:22:31 loginimpl.go:81: executing query.....
TRACE: 2017/05/09 12:22:32 loginimpl.go:93: {0xc0420324d0 0xc0422c00b0}
TRACE: 2017/05/09 12:22:32 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/09 12:22:32 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/09 12:22:32 loginimpl.go:16: exntering in SaveToken() function {0 2 NMMzwaTaPKBAXfIhXJlC 2017-05-09 12:22:29.1110647 +0530 IST}
TRACE: 2017/05/09 12:22:32 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/09 12:22:34 loginimpl.go:20: token inserted
TRACE: 2017/05/09 12:22:34 loginimpl.go:21: {0 2 NMMzwaTaPKBAXfIhXJlC 2017-05-09 12:22:29.1110647 +0530 IST}
TRACE: 2017/05/09 12:22:36 loginimpl.go:33: {0xc0421c1030 0xc0422c03d0}
TRACE: 2017/05/09 12:22:36 Login.go:48: {2 rakesh NMMzwaTaPKBAXfIhXJlC user}
TRACE: 2017/05/09 12:24:27 Login.go:14: entering webservice.Login()
TRACE: 2017/05/09 12:24:27 Login.go:19: calling manager.Login()
TRACE: 2017/05/09 12:24:27 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/09 12:24:27 Login.go:16: entering manager.login
TRACE: 2017/05/09 12:24:27 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/09 12:24:27 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/09 12:24:27 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/09 12:24:31 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/09 12:24:31 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/09 12:24:31 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/09 12:24:33 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/09 12:24:33 loginimpl.go:81: executing query.....
TRACE: 2017/05/09 12:24:35 loginimpl.go:93: {0xc0421c16c0 0xc0422b8f80}
TRACE: 2017/05/09 12:24:35 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/09 12:24:35 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/09 12:24:35 loginimpl.go:16: exntering in SaveToken() function {0 2 IMyLuDIElwlZsCtqcucm 2017-05-09 12:24:31.4491016 +0530 IST}
TRACE: 2017/05/09 12:24:35 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/09 12:24:38 loginimpl.go:20: token inserted
TRACE: 2017/05/09 12:24:38 loginimpl.go:21: {0 2 IMyLuDIElwlZsCtqcucm 2017-05-09 12:24:31.4491016 +0530 IST}
TRACE: 2017/05/09 12:24:40 loginimpl.go:33: {0xc04232e310 0xc0422c0b40}
TRACE: 2017/05/09 12:24:40 Login.go:48: {2 rakesh IMyLuDIElwlZsCtqcucm user}
TRACE: 2017/05/09 12:30:57 Login.go:14: entering webservice.Login()
TRACE: 2017/05/09 12:30:57 Login.go:19: calling manager.Login()
TRACE: 2017/05/09 12:30:57 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/09 12:30:57 Login.go:16: entering manager.login
TRACE: 2017/05/09 12:30:57 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/09 12:30:57 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/09 12:30:57 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/09 12:31:01 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/09 12:31:01 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/09 12:31:01 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/09 12:31:03 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/09 12:31:03 loginimpl.go:81: executing query.....
TRACE: 2017/05/09 12:31:04 loginimpl.go:93: {0xc042032b60 0xc0422c0e40}
TRACE: 2017/05/09 12:31:04 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/09 12:31:04 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/09 12:31:04 loginimpl.go:16: exntering in SaveToken() function {0 2 jzXTgjFXsCFHdVPPrcPz 2017-05-09 12:31:01.1046744 +0530 IST}
TRACE: 2017/05/09 12:31:04 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/09 12:31:06 loginimpl.go:20: token inserted
TRACE: 2017/05/09 12:31:06 loginimpl.go:21: {0 2 jzXTgjFXsCFHdVPPrcPz 2017-05-09 12:31:01.1046744 +0530 IST}
TRACE: 2017/05/09 12:31:08 loginimpl.go:33: {0xc04232eaf0 0xc042205420}
TRACE: 2017/05/09 12:31:08 Login.go:48: {2 rakesh jzXTgjFXsCFHdVPPrcPz user}
TRACE: 2017/05/09 12:32:33 Login.go:14: entering webservice.Login()
TRACE: 2017/05/09 12:32:33 Login.go:19: calling manager.Login()
TRACE: 2017/05/09 12:32:33 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/09 12:32:33 Login.go:16: entering manager.login
TRACE: 2017/05/09 12:32:33 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/09 12:32:33 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/09 12:32:33 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/09 12:32:37 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/09 12:32:37 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/09 12:32:37 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/09 12:32:39 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/09 12:32:39 loginimpl.go:81: executing query.....
TRACE: 2017/05/09 12:32:41 loginimpl.go:93: {0xc0420333b0 0xc0422b9590}
TRACE: 2017/05/09 12:32:41 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/09 12:32:41 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/09 12:32:41 loginimpl.go:16: exntering in SaveToken() function {0 2 JWEJyHCMzBWNjgJWoVZA 2017-05-09 12:32:37.77919 +0530 IST}
TRACE: 2017/05/09 12:32:41 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/09 12:32:43 loginimpl.go:20: token inserted
TRACE: 2017/05/09 12:32:43 loginimpl.go:21: {0 2 JWEJyHCMzBWNjgJWoVZA 2017-05-09 12:32:37.77919 +0530 IST}
TRACE: 2017/05/09 12:32:45 loginimpl.go:33: {0xc0421c1ce0 0xc0422b98d0}
TRACE: 2017/05/09 12:32:45 Login.go:48: {2 rakesh JWEJyHCMzBWNjgJWoVZA user}
TRACE: 2017/05/09 12:34:37 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/09 12:34:37 QuestionList.go:18: fundamental
TRACE: 2017/05/09 12:34:37 QuestionList.go:19: JWEJyHCMzBWNjgJWoVZA
TRACE: 2017/05/09 12:34:37 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/09 12:34:37 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/09 12:34:37 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/09 12:34:37 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/09 12:34:39 authenticatetokenimpl.go:47: JWEJyHCMzBWNjgJWoVZA
TRACE: 2017/05/09 12:34:39 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/09 12:34:39 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/09 12:34:41 authenticatetokenimpl.go:51: JWEJyHCMzBWNjgJWoVZA
TRACE: 2017/05/09 12:34:41 authenticatetokenimpl.go:59: Type is JWEJyHCMzBWNjgJWoVZA
TRACE: 2017/05/09 12:34:41 aunthenticate.go:42: 2017-05-09 12:34:41
TRACE: 2017/05/09 12:34:41 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/09 12:34:43 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/09 12:34:43 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/09 12:34:45 authenticatetokenimpl.go:30: {0xc042033500 0xc0423ac650}
TRACE: 2017/05/09 12:34:45 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/09 12:34:45 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/09 12:34:45 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/09 12:34:45 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/09 12:34:45 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/09 12:34:45 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/09 12:34:45 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/09 12:34:47 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0423af260 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/09 12:34:49 questionimpl.go:30: &{0xc04232f420 0x718e40 0xc0423e0cc0 false [] <nil> 0xc042325f20}
TRACE: 2017/05/09 12:41:52 Login.go:14: entering webservice.Login()
TRACE: 2017/05/09 12:41:52 Login.go:19: calling manager.Login()
TRACE: 2017/05/09 12:41:52 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/09 12:41:52 Login.go:16: entering manager.login
TRACE: 2017/05/09 12:41:52 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/09 12:41:52 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/09 12:41:52 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/09 12:41:56 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/09 12:41:56 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/09 12:41:56 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/09 12:41:58 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/09 12:41:58 loginimpl.go:81: executing query.....
TRACE: 2017/05/09 12:42:00 loginimpl.go:93: {0xc0423ce690 0xc0422c1220}
TRACE: 2017/05/09 12:42:00 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/09 12:42:00 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/09 12:42:00 loginimpl.go:16: exntering in SaveToken() function {0 2 zFxFznLkMzcGLHFHbvCn 2017-05-09 12:41:56.9039289 +0530 IST}
TRACE: 2017/05/09 12:42:00 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/09 12:42:02 loginimpl.go:20: token inserted
TRACE: 2017/05/09 12:42:02 loginimpl.go:21: {0 2 zFxFznLkMzcGLHFHbvCn 2017-05-09 12:41:56.9039289 +0530 IST}
TRACE: 2017/05/09 12:42:04 loginimpl.go:33: {0xc042033f10 0xc0423ad6a0}
TRACE: 2017/05/09 12:42:04 Login.go:48: {2 rakesh zFxFznLkMzcGLHFHbvCn user}
TRACE: 2017/05/09 12:42:14 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/09 12:42:14 QuestionList.go:18: fundamental
TRACE: 2017/05/09 12:42:14 QuestionList.go:19: zFxFznLkMzcGLHFHbvCn
TRACE: 2017/05/09 12:42:14 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/09 12:42:14 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/09 12:42:14 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/09 12:42:14 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/09 12:42:16 authenticatetokenimpl.go:47: zFxFznLkMzcGLHFHbvCn
TRACE: 2017/05/09 12:42:16 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/09 12:42:16 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/09 12:42:18 authenticatetokenimpl.go:51: zFxFznLkMzcGLHFHbvCn
TRACE: 2017/05/09 12:42:18 authenticatetokenimpl.go:59: Type is zFxFznLkMzcGLHFHbvCn
TRACE: 2017/05/09 12:42:18 aunthenticate.go:42: 2017-05-09 12:42:18
TRACE: 2017/05/09 12:42:18 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/09 12:42:20 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/09 12:42:20 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/09 12:42:21 authenticatetokenimpl.go:30: {0xc0422daee0 0xc0423cd440}
TRACE: 2017/05/09 12:42:21 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/09 12:42:21 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/09 12:42:21 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/09 12:42:21 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/09 12:42:21 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/09 12:42:21 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/09 12:42:21 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/09 12:42:23 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc042452c00 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/09 12:42:25 questionimpl.go:30: &{0xc042458230 0x718e40 0xc042472f60 false [] <nil> 0xc0423b1800}
TRACE: 2017/05/09 12:43:30 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/09 12:43:30 AnswerList.go:23: [{0 5 } {0 8 } {0 10 } {0 9 } {0 3 } {0 2 } {0 6 } {0 1 } {0 7 } {0 4 }]
TRACE: 2017/05/09 12:43:30 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/09 12:43:30 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/09 12:43:30 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/09 12:43:30 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/09 12:43:30 CalculateScore.go:30: answerList [{0 5 } {0 8 } {0 10 } {0 9 } {0 3 } {0 2 } {0 6 } {0 1 } {0 7 } {0 4 }]
TRACE: 2017/05/09 12:43:30 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/09 12:43:30 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/09 12:43:30 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/09 12:43:30 questionimpl.go:98: executing query and fetching answers 
TRACE: 2017/05/09 12:43:31 questionimpl.go:105: dial tcp 127.0.0.1:3306: connectex: No connection could be made because the target machine actively refused it.
TRACE: 2017/05/09 12:44:46 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/05/09 12:44:46 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/05/09 12:44:46 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/05/09 12:44:46 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/05/09 12:44:46 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/05/09 12:44:46 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/05/09 12:44:46 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/05/09 12:44:46 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/05/09 12:44:46 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/05/09 12:44:46 debug.go:45: [GIN-debug] Listening and serving HTTP on :8084
TRACE: 2017/05/09 12:55:18 Login.go:14: entering webservice.Login()
TRACE: 2017/05/09 12:55:18 Login.go:19: calling manager.Login()
TRACE: 2017/05/09 12:55:18 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/09 12:55:18 Login.go:16: entering manager.login
TRACE: 2017/05/09 12:55:18 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/09 12:55:18 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/09 12:55:18 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/09 12:55:23 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/09 12:55:23 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/09 12:55:23 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/09 12:55:25 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/09 12:55:25 loginimpl.go:81: executing query.....
TRACE: 2017/05/09 12:55:27 loginimpl.go:93: {0xc042206380 0xc042137eb0}
TRACE: 2017/05/09 12:55:27 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/09 12:55:27 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/09 12:55:27 loginimpl.go:16: exntering in SaveToken() function {0 2 CkAJSCDubNariHnGJDqo 2017-05-09 12:55:23.1347692 +0530 IST}
TRACE: 2017/05/09 12:55:27 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/09 12:55:29 loginimpl.go:20: token inserted
TRACE: 2017/05/09 12:55:29 loginimpl.go:21: {0 2 CkAJSCDubNariHnGJDqo 2017-05-09 12:55:23.1347692 +0530 IST}
TRACE: 2017/05/09 12:55:31 loginimpl.go:33: {0xc0421bec40 0xc042004e90}
TRACE: 2017/05/09 12:55:31 Login.go:48: {2 rakesh CkAJSCDubNariHnGJDqo user}
TRACE: 2017/05/09 13:05:00 Login.go:14: entering webservice.Login()
TRACE: 2017/05/09 13:05:00 Login.go:19: calling manager.Login()
TRACE: 2017/05/09 13:05:00 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/09 13:05:00 Login.go:16: entering manager.login
TRACE: 2017/05/09 13:05:00 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/09 13:05:00 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/09 13:05:00 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/09 13:05:04 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/09 13:05:04 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/09 13:05:04 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/09 13:05:06 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/09 13:05:06 loginimpl.go:81: executing query.....
TRACE: 2017/05/09 13:05:08 loginimpl.go:93: {0xc0422064d0 0xc0422086e0}
TRACE: 2017/05/09 13:05:08 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/09 13:05:08 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/09 13:05:08 loginimpl.go:16: exntering in SaveToken() function {0 2 IDlqcaUzNHKlBWYzxAoJ 2017-05-09 13:05:04.0323762 +0530 IST}
TRACE: 2017/05/09 13:05:08 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/09 13:05:10 loginimpl.go:20: token inserted
TRACE: 2017/05/09 13:05:10 loginimpl.go:21: {0 2 IDlqcaUzNHKlBWYzxAoJ 2017-05-09 13:05:04.0323762 +0530 IST}
TRACE: 2017/05/09 13:05:11 loginimpl.go:33: {0xc042033180 0xc042374160}
TRACE: 2017/05/09 13:05:11 Login.go:48: {2 rakesh IDlqcaUzNHKlBWYzxAoJ user}
TRACE: 2017/05/09 13:11:01 Login.go:14: entering webservice.Login()
TRACE: 2017/05/09 13:11:01 Login.go:19: calling manager.Login()
TRACE: 2017/05/09 13:11:01 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/09 13:11:01 Login.go:16: entering manager.login
TRACE: 2017/05/09 13:11:01 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/09 13:11:01 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/09 13:11:01 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/09 13:11:04 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/09 13:11:04 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/09 13:11:04 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/09 13:11:07 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/09 13:11:07 loginimpl.go:81: executing query.....
TRACE: 2017/05/09 13:11:08 loginimpl.go:93: {0xc0420337a0 0xc042209730}
TRACE: 2017/05/09 13:11:08 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/09 13:11:08 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/09 13:11:08 loginimpl.go:16: exntering in SaveToken() function {0 2 uXDWGMhzyUleBzEiPSlA 2017-05-09 13:11:04.973883 +0530 IST}
TRACE: 2017/05/09 13:11:08 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/09 13:11:10 loginimpl.go:20: token inserted
TRACE: 2017/05/09 13:11:10 loginimpl.go:21: {0 2 uXDWGMhzyUleBzEiPSlA 2017-05-09 13:11:04.973883 +0530 IST}
TRACE: 2017/05/09 13:11:12 loginimpl.go:33: {0xc042206e00 0xc042209ac0}
TRACE: 2017/05/09 13:11:12 Login.go:48: {2 rakesh uXDWGMhzyUleBzEiPSlA user}
TRACE: 2017/05/09 13:11:52 Login.go:14: entering webservice.Login()
TRACE: 2017/05/09 13:11:52 Login.go:19: calling manager.Login()
TRACE: 2017/05/09 13:11:52 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/09 13:11:52 Login.go:16: entering manager.login
TRACE: 2017/05/09 13:11:52 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/09 13:11:52 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/09 13:11:52 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/09 13:11:56 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/09 13:11:56 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/09 13:11:56 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/09 13:11:58 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/09 13:11:58 loginimpl.go:81: executing query.....
TRACE: 2017/05/09 13:12:00 loginimpl.go:93: {0xc042207490 0xc0423a4420}
TRACE: 2017/05/09 13:12:00 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/09 13:12:00 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/09 13:12:00 loginimpl.go:16: exntering in SaveToken() function {0 2 QpWjYmYwFgaHzCCprQfK 2017-05-09 13:11:56.5227073 +0530 IST}
TRACE: 2017/05/09 13:12:00 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/09 13:12:02 loginimpl.go:20: token inserted
TRACE: 2017/05/09 13:12:02 loginimpl.go:21: {0 2 QpWjYmYwFgaHzCCprQfK 2017-05-09 13:11:56.5227073 +0530 IST}
TRACE: 2017/05/09 13:12:04 loginimpl.go:33: {0xc0422077a0 0xc0422fcb70}
TRACE: 2017/05/09 13:12:04 Login.go:48: {2 rakesh QpWjYmYwFgaHzCCprQfK user}
TRACE: 2017/05/09 13:34:15 Login.go:14: entering webservice.Login()
TRACE: 2017/05/09 13:34:15 Login.go:19: calling manager.Login()
TRACE: 2017/05/09 13:34:15 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/09 13:34:15 Login.go:16: entering manager.login
TRACE: 2017/05/09 13:34:15 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/09 13:34:15 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/09 13:34:15 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/09 13:34:20 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/09 13:34:20 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/09 13:34:20 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/09 13:34:22 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/09 13:34:22 loginimpl.go:81: executing query.....
TRACE: 2017/05/09 13:34:24 loginimpl.go:93: {0xc0423065b0 0xc042308bb0}
TRACE: 2017/05/09 13:34:24 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/09 13:34:24 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/09 13:34:24 loginimpl.go:16: exntering in SaveToken() function {0 2 bZieODIzMAUovSeequPt 2017-05-09 13:34:20.352974 +0530 IST}
TRACE: 2017/05/09 13:34:24 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/09 13:34:26 loginimpl.go:20: token inserted
TRACE: 2017/05/09 13:34:26 loginimpl.go:21: {0 2 bZieODIzMAUovSeequPt 2017-05-09 13:34:20.352974 +0530 IST}
TRACE: 2017/05/09 13:34:28 loginimpl.go:33: {0xc0423069a0 0xc0423093c0}
TRACE: 2017/05/09 13:34:28 Login.go:48: {2 rakesh bZieODIzMAUovSeequPt user}
TRACE: 2017/05/09 13:34:54 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/09 13:34:54 QuestionList.go:18: fundamental
TRACE: 2017/05/09 13:34:54 QuestionList.go:19: bZieODIzMAUovSeequPt
TRACE: 2017/05/09 13:34:54 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/09 13:34:54 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/09 13:34:54 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/09 13:34:54 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/09 13:34:56 authenticatetokenimpl.go:47: bZieODIzMAUovSeequPt
TRACE: 2017/05/09 13:34:56 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/09 13:34:56 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/09 13:34:58 authenticatetokenimpl.go:51: bZieODIzMAUovSeequPt
TRACE: 2017/05/09 13:34:58 authenticatetokenimpl.go:59: Type is bZieODIzMAUovSeequPt
TRACE: 2017/05/09 13:34:58 aunthenticate.go:42: 2017-05-09 13:34:58
TRACE: 2017/05/09 13:34:58 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/09 13:35:00 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/09 13:35:00 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/09 13:35:01 authenticatetokenimpl.go:30: {0xc042207d50 0xc0423a5260}
TRACE: 2017/05/09 13:35:01 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/09 13:35:01 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/09 13:35:01 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/09 13:35:01 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/09 13:35:01 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/09 13:35:01 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/09 13:35:01 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/09 13:35:04 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc04242a180 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/09 13:35:05 questionimpl.go:30: &{0xc042426150 0x718e40 0xc0424249a0 false [] <nil> 0xc0423ceed0}
TRACE: 2017/05/09 13:35:10 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/09 13:35:10 AnswerList.go:23: [{0 7 } {0 8 } {0 5 } {0 3 } {0 10 } {0 1 } {0 9 } {0 4 } {0 2 } {0 6 }]
TRACE: 2017/05/09 13:35:10 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/09 13:35:10 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/09 13:35:10 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/09 13:35:10 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/09 13:35:10 CalculateScore.go:30: answerList [{0 7 } {0 8 } {0 5 } {0 3 } {0 10 } {0 1 } {0 9 } {0 4 } {0 2 } {0 6 }]
TRACE: 2017/05/09 13:35:10 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/09 13:35:10 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/09 13:35:10 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/09 13:35:10 questionimpl.go:98: executing query and fetching answers 
TRACE: 2017/05/09 13:35:11 questionimpl.go:105: dial tcp 127.0.0.1:3306: connectex: No connection could be made because the target machine actively refused it.
TRACE: 2017/05/09 14:40:53 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/05/09 14:40:53 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/05/09 14:40:53 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/05/09 14:40:53 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/05/09 14:40:53 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/05/09 14:40:53 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/05/09 14:40:53 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/05/09 14:40:53 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/05/09 14:40:53 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/05/09 14:40:53 debug.go:45: [GIN-debug] Listening and serving HTTP on :8084
TRACE: 2017/05/09 14:58:02 Login.go:14: entering webservice.Login()
TRACE: 2017/05/09 14:58:02 Login.go:19: calling manager.Login()
TRACE: 2017/05/09 14:58:02 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/09 14:58:02 Login.go:16: entering manager.login
TRACE: 2017/05/09 14:58:02 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/09 14:58:02 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/09 14:58:02 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/09 14:58:06 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/09 14:58:06 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/09 14:58:06 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/09 14:58:08 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/09 14:58:08 loginimpl.go:81: executing query.....
TRACE: 2017/05/09 14:58:09 loginimpl.go:93: {0xc0421beaf0 0xc042137de0}
TRACE: 2017/05/09 14:58:09 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/09 14:58:09 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/09 14:58:09 loginimpl.go:16: exntering in SaveToken() function {0 2 GKzsjAqnRVTbbElFVmrE 2017-05-09 14:58:06.1121901 +0530 IST}
TRACE: 2017/05/09 14:58:09 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/09 14:58:11 loginimpl.go:20: token inserted
TRACE: 2017/05/09 14:58:11 loginimpl.go:21: {0 2 GKzsjAqnRVTbbElFVmrE 2017-05-09 14:58:06.1121901 +0530 IST}
TRACE: 2017/05/09 14:58:13 loginimpl.go:33: {0xc0422b4070 0xc0422b0200}
TRACE: 2017/05/09 14:58:13 Login.go:48: {2 rakesh GKzsjAqnRVTbbElFVmrE user}
TRACE: 2017/05/09 14:58:25 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/09 14:58:25 QuestionList.go:18: fundamental
TRACE: 2017/05/09 14:58:25 QuestionList.go:19: GKzsjAqnRVTbbElFVmrE
TRACE: 2017/05/09 14:58:25 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/09 14:58:25 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/09 14:58:25 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/09 14:58:25 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/09 14:58:27 authenticatetokenimpl.go:47: GKzsjAqnRVTbbElFVmrE
TRACE: 2017/05/09 14:58:27 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/09 14:58:27 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/09 14:58:29 authenticatetokenimpl.go:51: GKzsjAqnRVTbbElFVmrE
TRACE: 2017/05/09 14:58:29 authenticatetokenimpl.go:59: Type is GKzsjAqnRVTbbElFVmrE
TRACE: 2017/05/09 14:58:29 aunthenticate.go:42: 2017-05-09 14:58:29
TRACE: 2017/05/09 14:58:29 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/09 14:58:31 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/09 14:58:32 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/09 14:58:32 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/09 14:58:32 QuestionList.go:18: fundamental
TRACE: 2017/05/09 14:58:32 QuestionList.go:19: fvpexJLSbiSEDtAGHPSR
TRACE: 2017/05/09 14:58:32 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/09 14:58:32 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/09 14:58:32 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/09 14:58:32 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/09 14:58:33 authenticatetokenimpl.go:30: {0xc042032b60 0xc0422a2810}
TRACE: 2017/05/09 14:58:33 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/09 14:58:33 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/09 14:58:33 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/09 14:58:33 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/09 14:58:33 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/09 14:58:33 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/09 14:58:33 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/09 14:58:34 authenticatetokenimpl.go:47: fvpexJLSbiSEDtAGHPSR
TRACE: 2017/05/09 14:58:34 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/09 14:58:34 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/09 14:58:35 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0422bb9e0 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/09 14:58:36 authenticatetokenimpl.go:51: 
TRACE: 2017/05/09 14:58:36 authenticatetokenimpl.go:54: No uid with that token.
TRACE: 2017/05/09 14:58:37 questionimpl.go:30: &{0xc0422b4700 0x718e40 0xc04236c180 false [] <nil> 0xc0422ab110}
TRACE: 2017/05/09 14:59:14 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/09 14:59:14 QuestionList.go:18: language
TRACE: 2017/05/09 14:59:14 QuestionList.go:19: fvpexJLSbiSEDtAGHPSR
TRACE: 2017/05/09 14:59:14 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/09 14:59:14 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/09 14:59:14 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/09 14:59:14 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/09 14:59:17 authenticatetokenimpl.go:47: fvpexJLSbiSEDtAGHPSR
TRACE: 2017/05/09 14:59:17 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/09 14:59:17 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/09 14:59:18 authenticatetokenimpl.go:51: 
TRACE: 2017/05/09 14:59:18 authenticatetokenimpl.go:54: No uid with that token.
TRACE: 2017/05/09 14:59:38 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/09 14:59:38 AnswerList.go:23: [{0 9 } {0 5 } {0 6 queue} {0 10 has to implement none of the methods from interface} {0 4 } {0 7 } {0 1 } {0 3 } {0 2 } {0 8 shows path of current directory}]
TRACE: 2017/05/09 14:59:38 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/09 14:59:38 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/09 14:59:38 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/09 14:59:38 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/09 14:59:38 CalculateScore.go:30: answerList [{0 9 } {0 5 } {0 6 queue} {0 10 has to implement none of the methods from interface} {0 4 } {0 7 } {0 1 } {0 3 } {0 2 } {0 8 shows path of current directory}]
TRACE: 2017/05/09 14:59:38 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/09 14:59:38 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/09 14:59:38 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/09 14:59:38 questionimpl.go:98: executing query and fetching answers 
TRACE: 2017/05/09 14:59:39 questionimpl.go:105: dial tcp 127.0.0.1:3306: connectex: No connection could be made because the target machine actively refused it.
TRACE: 2017/05/09 15:00:55 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/05/09 15:00:55 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/05/09 15:00:55 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/05/09 15:00:55 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/05/09 15:00:55 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/05/09 15:00:55 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/05/09 15:00:55 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/05/09 15:00:55 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/05/09 15:00:55 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/05/09 15:00:55 debug.go:45: [GIN-debug] Listening and serving HTTP on :8084
TRACE: 2017/05/09 15:01:14 Login.go:14: entering webservice.Login()
TRACE: 2017/05/09 15:01:14 Login.go:19: calling manager.Login()
TRACE: 2017/05/09 15:01:14 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/09 15:01:14 Login.go:16: entering manager.login
TRACE: 2017/05/09 15:01:14 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/09 15:01:14 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/09 15:01:14 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/09 15:01:18 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/09 15:01:18 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/09 15:01:18 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/09 15:01:20 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/09 15:01:20 loginimpl.go:81: executing query.....
TRACE: 2017/05/09 15:01:21 Login.go:14: entering webservice.Login()
TRACE: 2017/05/09 15:01:21 Login.go:19: calling manager.Login()
TRACE: 2017/05/09 15:01:21 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/09 15:01:21 Login.go:16: entering manager.login
TRACE: 2017/05/09 15:01:21 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/09 15:01:21 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/09 15:01:21 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/09 15:01:22 loginimpl.go:93: {0xc0422a0540 0xc04229c820}
TRACE: 2017/05/09 15:01:22 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/09 15:01:22 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/09 15:01:22 loginimpl.go:16: exntering in SaveToken() function {0 2 vKdGWFVkaSFIvpeRRGyQ 2017-05-09 15:01:18.5246034 +0530 IST}
TRACE: 2017/05/09 15:01:22 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/09 15:01:24 loginimpl.go:20: token inserted
TRACE: 2017/05/09 15:01:24 loginimpl.go:21: {0 2 vKdGWFVkaSFIvpeRRGyQ 2017-05-09 15:01:18.5246034 +0530 IST}
TRACE: 2017/05/09 15:01:25 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/09 15:01:25 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/09 15:01:25 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/09 15:01:26 loginimpl.go:33: {0xc0422a81c0 0xc0421e0860}
TRACE: 2017/05/09 15:01:26 Login.go:48: {2 rakesh vKdGWFVkaSFIvpeRRGyQ user}
TRACE: 2017/05/09 15:01:27 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/09 15:01:27 loginimpl.go:81: executing query.....
TRACE: 2017/05/09 15:01:29 loginimpl.go:93: {0xc0421bf340 0xc0421e0d60}
TRACE: 2017/05/09 15:01:29 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/09 15:01:29 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/09 15:01:29 loginimpl.go:16: exntering in SaveToken() function {0 2 gmzWpJJdPdyfLnsjuqTp 2017-05-09 15:01:25.4618014 +0530 IST}
TRACE: 2017/05/09 15:01:29 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/09 15:01:31 loginimpl.go:20: token inserted
TRACE: 2017/05/09 15:01:31 loginimpl.go:21: {0 2 gmzWpJJdPdyfLnsjuqTp 2017-05-09 15:01:25.4618014 +0530 IST}
TRACE: 2017/05/09 15:01:33 loginimpl.go:33: {0xc0421bf5e0 0xc0421e1060}
TRACE: 2017/05/09 15:01:33 Login.go:48: {2 rakesh gmzWpJJdPdyfLnsjuqTp user}
TRACE: 2017/05/09 15:01:42 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/09 15:01:42 QuestionList.go:18: fundamental
TRACE: 2017/05/09 15:01:42 QuestionList.go:19: gmzWpJJdPdyfLnsjuqTp
TRACE: 2017/05/09 15:01:42 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/09 15:01:42 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/09 15:01:42 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/09 15:01:42 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/09 15:01:42 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/09 15:01:42 QuestionList.go:18: fundamental
TRACE: 2017/05/09 15:01:42 QuestionList.go:19: vKdGWFVkaSFIvpeRRGyQ
TRACE: 2017/05/09 15:01:42 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/09 15:01:42 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/09 15:01:42 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/09 15:01:42 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/09 15:01:44 authenticatetokenimpl.go:47: gmzWpJJdPdyfLnsjuqTp
TRACE: 2017/05/09 15:01:44 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/09 15:01:44 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/09 15:01:44 authenticatetokenimpl.go:47: vKdGWFVkaSFIvpeRRGyQ
TRACE: 2017/05/09 15:01:44 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/09 15:01:44 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/09 15:01:46 authenticatetokenimpl.go:51: gmzWpJJdPdyfLnsjuqTp
TRACE: 2017/05/09 15:01:46 authenticatetokenimpl.go:59: Type is gmzWpJJdPdyfLnsjuqTp
TRACE: 2017/05/09 15:01:46 aunthenticate.go:42: 2017-05-09 15:01:46
TRACE: 2017/05/09 15:01:46 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/09 15:01:46 authenticatetokenimpl.go:51: 
TRACE: 2017/05/09 15:01:46 authenticatetokenimpl.go:54: No uid with that token.
TRACE: 2017/05/09 15:01:48 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/09 15:01:48 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/09 15:01:49 authenticatetokenimpl.go:30: {0xc0422a0ee0 0xc0421e1d20}
TRACE: 2017/05/09 15:01:49 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/09 15:01:49 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/09 15:01:49 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/09 15:01:49 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/09 15:01:49 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/09 15:01:49 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/09 15:01:49 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/09 15:01:52 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0422f3ec0 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/09 15:01:54 questionimpl.go:30: &{0xc0422a1110 0x718e40 0xc042378320 false [] <nil> 0xc042299800}
TRACE: 2017/05/09 15:02:01 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/09 15:02:01 QuestionList.go:18: java
TRACE: 2017/05/09 15:02:01 QuestionList.go:19: vKdGWFVkaSFIvpeRRGyQ
TRACE: 2017/05/09 15:02:01 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/09 15:02:01 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/09 15:02:01 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/09 15:02:01 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/09 15:02:03 authenticatetokenimpl.go:47: vKdGWFVkaSFIvpeRRGyQ
TRACE: 2017/05/09 15:02:03 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/09 15:02:03 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/09 15:02:05 authenticatetokenimpl.go:51: 
TRACE: 2017/05/09 15:02:05 authenticatetokenimpl.go:54: No uid with that token.
TRACE: 2017/05/09 15:02:08 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/09 15:02:08 AnswerList.go:23: [{0 4 } {0 10 } {0 9 } {0 3 } {0 7 } {0 5 } {0 1 } {0 6 } {0 2 } {0 8 }]
TRACE: 2017/05/09 15:02:08 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/09 15:02:08 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/09 15:02:08 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/09 15:02:08 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/09 15:02:08 CalculateScore.go:30: answerList [{0 4 } {0 10 } {0 9 } {0 3 } {0 7 } {0 5 } {0 1 } {0 6 } {0 2 } {0 8 }]
TRACE: 2017/05/09 15:02:08 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/09 15:02:08 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/09 15:02:08 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/09 15:02:08 questionimpl.go:98: executing query and fetching answers 
TRACE: 2017/05/09 15:02:09 questionimpl.go:105: dial tcp 127.0.0.1:3306: connectex: No connection could be made because the target machine actively refused it.
TRACE: 2017/05/09 15:04:36 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/05/09 15:04:36 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/05/09 15:04:36 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/05/09 15:04:36 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/05/09 15:04:36 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/05/09 15:04:36 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/05/09 15:04:36 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/05/09 15:04:36 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/05/09 15:04:36 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/05/09 15:04:36 debug.go:45: [GIN-debug] Listening and serving HTTP on :8084
TRACE: 2017/05/09 15:04:42 Login.go:14: entering webservice.Login()
TRACE: 2017/05/09 15:04:42 Login.go:19: calling manager.Login()
TRACE: 2017/05/09 15:04:42 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/09 15:04:42 Login.go:16: entering manager.login
TRACE: 2017/05/09 15:04:42 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/09 15:04:42 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/09 15:04:42 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/09 15:04:46 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/09 15:04:46 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/09 15:04:46 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/09 15:04:48 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/09 15:04:48 loginimpl.go:81: executing query.....
TRACE: 2017/05/09 15:04:50 loginimpl.go:93: {0xc0422c40e0 0xc0422b84c0}
TRACE: 2017/05/09 15:04:50 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/09 15:04:50 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/09 15:04:50 loginimpl.go:16: exntering in SaveToken() function {0 2 zdSwfLXIEVYagbUfXjYY 2017-05-09 15:04:46.455484 +0530 IST}
TRACE: 2017/05/09 15:04:50 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/09 15:04:52 loginimpl.go:20: token inserted
TRACE: 2017/05/09 15:04:52 loginimpl.go:21: {0 2 zdSwfLXIEVYagbUfXjYY 2017-05-09 15:04:46.455484 +0530 IST}
TRACE: 2017/05/09 15:04:54 loginimpl.go:33: {0xc0422c4310 0xc0421ea950}
TRACE: 2017/05/09 15:04:54 Login.go:48: {2 rakesh zdSwfLXIEVYagbUfXjYY user}
TRACE: 2017/05/09 15:08:00 Login.go:14: entering webservice.Login()
TRACE: 2017/05/09 15:08:00 Login.go:19: calling manager.Login()
TRACE: 2017/05/09 15:08:00 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/09 15:08:00 Login.go:16: entering manager.login
TRACE: 2017/05/09 15:08:00 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/09 15:08:00 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/09 15:08:00 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/09 15:08:04 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/09 15:08:04 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/09 15:08:04 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/09 15:08:06 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/09 15:08:06 loginimpl.go:81: executing query.....
TRACE: 2017/05/09 15:08:08 loginimpl.go:93: {0xc0421bf030 0xc042004a20}
TRACE: 2017/05/09 15:08:08 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/09 15:08:08 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/09 15:08:08 loginimpl.go:16: exntering in SaveToken() function {0 2 pGPuxZgAcYhUehsFvsgi 2017-05-09 15:08:04.293027 +0530 IST}
TRACE: 2017/05/09 15:08:08 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/09 15:08:10 loginimpl.go:20: token inserted
TRACE: 2017/05/09 15:08:10 loginimpl.go:21: {0 2 pGPuxZgAcYhUehsFvsgi 2017-05-09 15:08:04.293027 +0530 IST}
TRACE: 2017/05/09 15:08:12 loginimpl.go:33: {0xc0421bf180 0xc04220ab70}
TRACE: 2017/05/09 15:08:12 Login.go:48: {2 rakesh pGPuxZgAcYhUehsFvsgi user}
TRACE: 2017/05/09 15:08:36 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/09 15:08:36 QuestionList.go:18: fundamental
TRACE: 2017/05/09 15:08:36 QuestionList.go:19: pGPuxZgAcYhUehsFvsgi
TRACE: 2017/05/09 15:08:36 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/09 15:08:36 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/09 15:08:36 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/09 15:08:36 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/09 15:08:38 authenticatetokenimpl.go:47: pGPuxZgAcYhUehsFvsgi
TRACE: 2017/05/09 15:08:38 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/09 15:08:38 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/09 15:08:40 authenticatetokenimpl.go:51: pGPuxZgAcYhUehsFvsgi
TRACE: 2017/05/09 15:08:40 authenticatetokenimpl.go:59: Type is pGPuxZgAcYhUehsFvsgi
TRACE: 2017/05/09 15:08:40 aunthenticate.go:42: 2017-05-09 15:08:40
TRACE: 2017/05/09 15:08:40 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/09 15:08:42 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/09 15:08:42 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/09 15:08:44 authenticatetokenimpl.go:30: {0xc0422bc9a0 0xc042005140}
TRACE: 2017/05/09 15:08:44 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/09 15:08:44 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/09 15:08:44 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/09 15:08:44 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/09 15:08:44 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/09 15:08:44 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/09 15:08:44 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/09 15:08:46 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc04237d500 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/09 15:08:48 questionimpl.go:30: &{0xc0422c4770 0x718e40 0xc042358540 false [] <nil> 0xc0421eccc0}
TRACE: 2017/05/09 15:09:49 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/09 15:09:49 AnswerList.go:23: [{0 7 } {0 1 } {0 6 } {0 5 } {0 3 } {0 8 } {0 4 } {0 10 } {0 2 } {0 9 }]
TRACE: 2017/05/09 15:09:49 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/09 15:09:49 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/09 15:09:49 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/09 15:09:49 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/09 15:09:49 CalculateScore.go:30: answerList [{0 7 } {0 1 } {0 6 } {0 5 } {0 3 } {0 8 } {0 4 } {0 10 } {0 2 } {0 9 }]
TRACE: 2017/05/09 15:09:49 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/09 15:09:49 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/09 15:09:49 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/09 15:09:49 questionimpl.go:98: executing query and fetching answers 
TRACE: 2017/05/09 15:09:50 questionimpl.go:105: dial tcp 127.0.0.1:3306: connectex: No connection could be made because the target machine actively refused it.
TRACE: 2017/05/09 15:12:07 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/05/09 15:12:07 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/05/09 15:12:07 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/05/09 15:12:07 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/05/09 15:12:07 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/05/09 15:12:07 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/05/09 15:12:07 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/05/09 15:12:07 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/05/09 15:12:07 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/05/09 15:12:07 debug.go:45: [GIN-debug] Listening and serving HTTP on :8084
TRACE: 2017/05/09 15:12:16 Login.go:14: entering webservice.Login()
TRACE: 2017/05/09 15:12:16 Login.go:19: calling manager.Login()
TRACE: 2017/05/09 15:12:16 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/09 15:12:16 Login.go:16: entering manager.login
TRACE: 2017/05/09 15:12:16 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/09 15:12:16 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/09 15:12:16 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/09 15:12:21 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/09 15:12:21 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/09 15:12:21 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/09 15:12:23 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/09 15:12:23 loginimpl.go:81: executing query.....
TRACE: 2017/05/09 15:12:25 loginimpl.go:93: {0xc0421bf3b0 0xc0422c6030}
TRACE: 2017/05/09 15:12:25 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/09 15:12:25 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/09 15:12:25 loginimpl.go:16: exntering in SaveToken() function {0 2 evQHWPwFEDjeJfWbfoJH 2017-05-09 15:12:21.3669108 +0530 IST}
TRACE: 2017/05/09 15:12:25 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/09 15:12:27 loginimpl.go:20: token inserted
TRACE: 2017/05/09 15:12:27 loginimpl.go:21: {0 2 evQHWPwFEDjeJfWbfoJH 2017-05-09 15:12:21.3669108 +0530 IST}
TRACE: 2017/05/09 15:12:29 loginimpl.go:33: {0xc0420321c0 0xc042004580}
TRACE: 2017/05/09 15:12:29 Login.go:48: {2 rakesh evQHWPwFEDjeJfWbfoJH user}
TRACE: 2017/05/09 15:12:51 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/09 15:12:51 QuestionList.go:18: fundamental
TRACE: 2017/05/09 15:12:51 QuestionList.go:19: evQHWPwFEDjeJfWbfoJH
TRACE: 2017/05/09 15:12:51 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/09 15:12:51 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/09 15:12:51 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/09 15:12:51 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/09 15:12:53 authenticatetokenimpl.go:47: evQHWPwFEDjeJfWbfoJH
TRACE: 2017/05/09 15:12:53 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/09 15:12:53 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/09 15:12:55 authenticatetokenimpl.go:51: evQHWPwFEDjeJfWbfoJH
TRACE: 2017/05/09 15:12:55 authenticatetokenimpl.go:59: Type is evQHWPwFEDjeJfWbfoJH
TRACE: 2017/05/09 15:12:55 aunthenticate.go:42: 2017-05-09 15:12:55
TRACE: 2017/05/09 15:12:55 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/09 15:12:57 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/09 15:12:57 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/09 15:12:59 authenticatetokenimpl.go:30: {0xc042296310 0xc042292640}
TRACE: 2017/05/09 15:12:59 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/09 15:12:59 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/09 15:12:59 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/09 15:12:59 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/09 15:12:59 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/09 15:12:59 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/09 15:12:59 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/09 15:13:01 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc04227f2c0 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/09 15:13:03 questionimpl.go:30: &{0xc042032770 0x718e40 0xc042009be0 false [] <nil> 0xc042007200}
TRACE: 2017/05/09 15:14:03 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/09 15:14:03 AnswerList.go:23: [{0 9 } {0 8 } {0 5 } {0 7 } {0 10 } {0 3 } {0 2 } {0 6 } {0 4 } {0 1 }]
TRACE: 2017/05/09 15:14:03 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/09 15:14:03 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/09 15:14:03 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/09 15:14:03 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/09 15:14:03 CalculateScore.go:30: answerList [{0 9 } {0 8 } {0 5 } {0 7 } {0 10 } {0 3 } {0 2 } {0 6 } {0 4 } {0 1 }]
TRACE: 2017/05/09 15:14:03 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/09 15:14:03 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/09 15:14:03 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/09 15:14:03 questionimpl.go:98: executing query and fetching answers 
TRACE: 2017/05/09 15:14:04 questionimpl.go:105: dial tcp 127.0.0.1:3306: connectex: No connection could be made because the target machine actively refused it.
TRACE: 2017/05/09 15:21:01 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/05/09 15:21:01 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/05/09 15:21:01 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/05/09 15:21:01 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/05/09 15:21:01 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/05/09 15:21:01 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/05/09 15:21:01 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/05/09 15:21:01 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/05/09 15:21:01 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/05/09 15:21:01 debug.go:45: [GIN-debug] Listening and serving HTTP on :8084
TRACE: 2017/05/09 15:21:07 Login.go:14: entering webservice.Login()
TRACE: 2017/05/09 15:21:07 Login.go:19: calling manager.Login()
TRACE: 2017/05/09 15:21:07 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/09 15:21:07 Login.go:16: entering manager.login
TRACE: 2017/05/09 15:21:07 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/09 15:21:07 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/09 15:21:07 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/09 15:21:11 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/09 15:21:11 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/09 15:21:11 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/09 15:21:13 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/09 15:21:13 loginimpl.go:81: executing query.....
TRACE: 2017/05/09 15:21:15 loginimpl.go:93: {0xc042032a80 0xc0420053c0}
TRACE: 2017/05/09 15:21:15 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/09 15:21:15 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/09 15:21:15 loginimpl.go:16: exntering in SaveToken() function {0 2 tcrwzsxJCXDOPvbPOxwv 2017-05-09 15:21:11.3142262 +0530 IST}
TRACE: 2017/05/09 15:21:15 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/09 15:21:17 loginimpl.go:20: token inserted
TRACE: 2017/05/09 15:21:17 loginimpl.go:21: {0 2 tcrwzsxJCXDOPvbPOxwv 2017-05-09 15:21:11.3142262 +0530 IST}
TRACE: 2017/05/09 15:21:18 loginimpl.go:33: {0xc0422aa070 0xc0422a6160}
TRACE: 2017/05/09 15:21:18 Login.go:48: {2 rakesh tcrwzsxJCXDOPvbPOxwv user}
TRACE: 2017/05/09 15:21:30 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/09 15:21:30 QuestionList.go:18: fundamental
TRACE: 2017/05/09 15:21:30 QuestionList.go:19: tcrwzsxJCXDOPvbPOxwv
TRACE: 2017/05/09 15:21:30 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/09 15:21:30 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/09 15:21:30 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/09 15:21:30 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/09 15:21:32 authenticatetokenimpl.go:47: tcrwzsxJCXDOPvbPOxwv
TRACE: 2017/05/09 15:21:32 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/09 15:21:32 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/09 15:21:34 authenticatetokenimpl.go:51: tcrwzsxJCXDOPvbPOxwv
TRACE: 2017/05/09 15:21:34 authenticatetokenimpl.go:59: Type is tcrwzsxJCXDOPvbPOxwv
TRACE: 2017/05/09 15:21:34 aunthenticate.go:42: 2017-05-09 15:21:34
TRACE: 2017/05/09 15:21:34 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/09 15:21:36 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/09 15:21:36 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/09 15:21:37 Login.go:14: entering webservice.Login()
TRACE: 2017/05/09 15:21:37 Login.go:19: calling manager.Login()
TRACE: 2017/05/09 15:21:37 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/09 15:21:37 Login.go:16: entering manager.login
TRACE: 2017/05/09 15:21:37 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/09 15:21:37 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/09 15:21:37 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/09 15:21:37 authenticatetokenimpl.go:30: {0xc042032e00 0xc042137cd0}
TRACE: 2017/05/09 15:21:37 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/09 15:21:37 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/09 15:21:37 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/09 15:21:37 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/09 15:21:37 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/09 15:21:37 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/09 15:21:37 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/09 15:21:40 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0422c7bc0 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/09 15:21:41 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/09 15:21:41 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/09 15:21:41 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/09 15:21:42 questionimpl.go:30: &{0xc0421beee0 0x718e40 0xc042380700 false [] <nil> 0xc0421455f0}
TRACE: 2017/05/09 15:21:43 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/09 15:21:43 loginimpl.go:81: executing query.....
TRACE: 2017/05/09 15:21:45 loginimpl.go:93: {0xc0422aa4d0 0xc0422a6b30}
TRACE: 2017/05/09 15:21:45 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/09 15:21:45 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/09 15:21:45 loginimpl.go:16: exntering in SaveToken() function {0 2 iryXnCHLqPCMHHtxGsBd 2017-05-09 15:21:41.7358484 +0530 IST}
TRACE: 2017/05/09 15:21:45 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/09 15:21:48 loginimpl.go:20: token inserted
TRACE: 2017/05/09 15:21:48 loginimpl.go:21: {0 2 iryXnCHLqPCMHHtxGsBd 2017-05-09 15:21:41.7358484 +0530 IST}
TRACE: 2017/05/09 15:21:50 loginimpl.go:33: {0xc0422aa930 0xc0422a7220}
TRACE: 2017/05/09 15:21:50 Login.go:48: {2 rakesh iryXnCHLqPCMHHtxGsBd user}
TRACE: 2017/05/09 15:21:59 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/09 15:21:59 QuestionList.go:18: fundamental
TRACE: 2017/05/09 15:21:59 QuestionList.go:19: iryXnCHLqPCMHHtxGsBd
TRACE: 2017/05/09 15:21:59 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/09 15:21:59 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/09 15:21:59 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/09 15:21:59 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/09 15:22:01 authenticatetokenimpl.go:47: iryXnCHLqPCMHHtxGsBd
TRACE: 2017/05/09 15:22:01 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/09 15:22:01 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/09 15:22:03 authenticatetokenimpl.go:51: iryXnCHLqPCMHHtxGsBd
TRACE: 2017/05/09 15:22:03 authenticatetokenimpl.go:59: Type is iryXnCHLqPCMHHtxGsBd
TRACE: 2017/05/09 15:22:03 aunthenticate.go:42: 2017-05-09 15:22:03
TRACE: 2017/05/09 15:22:03 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/09 15:22:05 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/09 15:22:05 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/09 15:22:06 authenticatetokenimpl.go:30: {0xc0422dad20 0xc0422a7d00}
TRACE: 2017/05/09 15:22:06 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/09 15:22:06 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/09 15:22:06 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/09 15:22:06 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/09 15:22:06 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/09 15:22:06 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/09 15:22:06 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/09 15:22:08 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0423c55c0 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/09 15:22:10 questionimpl.go:30: &{0xc0422dae70 0x718e40 0xc042359c80 false [] <nil> 0xc042301620}
TRACE: 2017/05/09 15:22:42 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/09 15:22:42 AnswerList.go:23: [{0 6 } {0 9 } {0 1 } {0 5 } {0 8 } {0 2 } {0 10 } {0 7 } {0 4 } {0 3 }]
TRACE: 2017/05/09 15:22:42 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/09 15:22:42 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/09 15:22:42 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/09 15:22:42 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/09 15:22:42 CalculateScore.go:30: answerList [{0 6 } {0 9 } {0 1 } {0 5 } {0 8 } {0 2 } {0 10 } {0 7 } {0 4 } {0 3 }]
TRACE: 2017/05/09 15:22:42 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/09 15:22:42 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/09 15:22:42 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/09 15:22:42 questionimpl.go:98: executing query and fetching answers 
TRACE: 2017/05/09 15:22:43 questionimpl.go:105: dial tcp 127.0.0.1:3306: connectex: No connection could be made because the target machine actively refused it.
TRACE: 2017/05/09 15:31:29 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/05/09 15:31:29 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/05/09 15:31:29 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/05/09 15:31:29 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/05/09 15:31:29 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/05/09 15:31:29 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/05/09 15:31:29 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/05/09 15:31:29 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/05/09 15:31:29 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/05/09 15:31:29 debug.go:45: [GIN-debug] Listening and serving HTTP on :8084
TRACE: 2017/05/09 15:31:36 Login.go:14: entering webservice.Login()
TRACE: 2017/05/09 15:31:36 Login.go:19: calling manager.Login()
TRACE: 2017/05/09 15:31:36 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/09 15:31:36 Login.go:16: entering manager.login
TRACE: 2017/05/09 15:31:36 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/09 15:31:36 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/09 15:31:36 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/09 15:31:40 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/09 15:31:40 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/09 15:31:40 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/09 15:31:42 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/09 15:31:42 loginimpl.go:81: executing query.....
TRACE: 2017/05/09 15:31:44 loginimpl.go:93: {0xc0421da850 0xc0421baee0}
TRACE: 2017/05/09 15:31:44 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/09 15:31:44 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/09 15:31:44 loginimpl.go:16: exntering in SaveToken() function {0 2 xzFFuhzFMNJNGyZywpgG 2017-05-09 15:31:40.2099926 +0530 IST}
TRACE: 2017/05/09 15:31:44 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/09 15:31:46 loginimpl.go:20: token inserted
TRACE: 2017/05/09 15:31:46 loginimpl.go:21: {0 2 xzFFuhzFMNJNGyZywpgG 2017-05-09 15:31:40.2099926 +0530 IST}
TRACE: 2017/05/09 15:31:48 loginimpl.go:33: {0xc0421daaf0 0xc0421bb1e0}
TRACE: 2017/05/09 15:31:48 Login.go:48: {2 rakesh xzFFuhzFMNJNGyZywpgG user}
TRACE: 2017/05/09 15:33:56 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/09 15:33:56 QuestionList.go:18: java
TRACE: 2017/05/09 15:33:56 QuestionList.go:19: xzFFuhzFMNJNGyZywpgG
TRACE: 2017/05/09 15:33:56 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/09 15:33:56 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/09 15:33:56 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/09 15:33:56 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/09 15:33:58 authenticatetokenimpl.go:47: xzFFuhzFMNJNGyZywpgG
TRACE: 2017/05/09 15:33:58 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/09 15:33:58 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/09 15:34:00 authenticatetokenimpl.go:51: xzFFuhzFMNJNGyZywpgG
TRACE: 2017/05/09 15:34:00 authenticatetokenimpl.go:59: Type is xzFFuhzFMNJNGyZywpgG
TRACE: 2017/05/09 15:34:00 aunthenticate.go:42: 2017-05-09 15:34:00
TRACE: 2017/05/09 15:34:00 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/09 15:34:02 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/09 15:34:02 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/09 15:34:03 authenticatetokenimpl.go:30: {0xc0421a2e00 0xc042338690}
TRACE: 2017/05/09 15:34:03 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/09 15:34:03 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/09 15:34:03 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/09 15:34:03 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/09 15:34:03 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/09 15:34:03 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/09 15:34:03 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/09 15:34:06 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc042316600 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/09 15:34:07 questionimpl.go:30: &{0xc0421a31f0 0x718e40 0xc0423304c0 false [] <nil> 0xc042125f80}
TRACE: 2017/05/09 15:35:08 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/09 15:35:08 AnswerList.go:23: [{0 21 } {0 29 } {0 34 } {0 18 } {0 26 } {0 13 } {0 25 } {0 17 } {0 12 } {0 11 } {0 22 } {0 15 } {0 30 } {0 32 } {0 16 } {0 31 } {0 23 } {0 24 } {0 27 } {0 35 } {0 14 } {0 33 } {0 19 } {0 28 } {0 20 }]
TRACE: 2017/05/09 15:35:08 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/09 15:35:08 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/09 15:35:08 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/09 15:35:08 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/09 15:35:08 CalculateScore.go:30: answerList [{0 21 } {0 29 } {0 34 } {0 18 } {0 26 } {0 13 } {0 25 } {0 17 } {0 12 } {0 11 } {0 22 } {0 15 } {0 30 } {0 32 } {0 16 } {0 31 } {0 23 } {0 24 } {0 27 } {0 35 } {0 14 } {0 33 } {0 19 } {0 28 } {0 20 }]
TRACE: 2017/05/09 15:35:08 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/09 15:35:08 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/09 15:35:08 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/09 15:35:08 questionimpl.go:98: executing query and fetching answers 
TRACE: 2017/05/09 15:35:09 questionimpl.go:105: dial tcp 127.0.0.1:3306: connectex: No connection could be made because the target machine actively refused it.
TRACE: 2017/05/09 15:58:09 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/05/09 15:58:09 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/05/09 15:58:09 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/05/09 15:58:09 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/05/09 15:58:09 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/05/09 15:58:09 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/05/09 15:58:09 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/05/09 15:58:09 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/05/09 15:58:09 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/05/09 15:58:09 debug.go:45: [GIN-debug] Listening and serving HTTP on :8084
TRACE: 2017/05/09 15:58:21 Login.go:14: entering webservice.Login()
TRACE: 2017/05/09 15:58:21 Login.go:19: calling manager.Login()
TRACE: 2017/05/09 15:58:21 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/09 15:58:21 Login.go:16: entering manager.login
TRACE: 2017/05/09 15:58:21 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/09 15:58:21 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/09 15:58:21 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/09 15:58:25 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/09 15:58:25 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/09 15:58:25 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/09 15:58:27 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/09 15:58:27 loginimpl.go:81: executing query.....
TRACE: 2017/05/09 15:58:29 loginimpl.go:93: {0xc04228c150 0xc0422cc0a0}
TRACE: 2017/05/09 15:58:29 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/09 15:58:29 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/09 15:58:29 loginimpl.go:16: exntering in SaveToken() function {0 2 ObKjmcKdfiqdMtlrEoGR 2017-05-09 15:58:25.5830791 +0530 IST}
TRACE: 2017/05/09 15:58:29 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/09 15:58:31 loginimpl.go:20: token inserted
TRACE: 2017/05/09 15:58:31 loginimpl.go:21: {0 2 ObKjmcKdfiqdMtlrEoGR 2017-05-09 15:58:25.5830791 +0530 IST}
TRACE: 2017/05/09 15:58:33 loginimpl.go:33: {0xc04228c1c0 0xc0421e8570}
TRACE: 2017/05/09 15:58:33 Login.go:48: {2 rakesh ObKjmcKdfiqdMtlrEoGR user}
TRACE: 2017/05/09 15:58:42 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/09 15:58:42 QuestionList.go:18: java
TRACE: 2017/05/09 15:58:42 QuestionList.go:19: ObKjmcKdfiqdMtlrEoGR
TRACE: 2017/05/09 15:58:42 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/09 15:58:42 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/09 15:58:42 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/09 15:58:42 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/09 15:58:44 authenticatetokenimpl.go:47: ObKjmcKdfiqdMtlrEoGR
TRACE: 2017/05/09 15:58:44 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/09 15:58:44 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/09 15:58:46 authenticatetokenimpl.go:51: ObKjmcKdfiqdMtlrEoGR
TRACE: 2017/05/09 15:58:46 authenticatetokenimpl.go:59: Type is ObKjmcKdfiqdMtlrEoGR
TRACE: 2017/05/09 15:58:46 aunthenticate.go:42: 2017-05-09 15:58:46
TRACE: 2017/05/09 15:58:46 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/09 15:58:48 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/09 15:58:48 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/09 15:58:50 authenticatetokenimpl.go:30: {0xc0421bef50 0xc0421e4600}
TRACE: 2017/05/09 15:58:50 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/09 15:58:50 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/09 15:58:50 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/09 15:58:50 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/09 15:58:50 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/09 15:58:50 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/09 15:58:50 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/09 15:58:52 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0421eb560 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/09 15:58:54 questionimpl.go:30: &{0xc04228ca10 0x718e40 0xc042338740 false [] <nil> 0xc0422915c0}
TRACE: 2017/05/09 16:01:42 Login.go:14: entering webservice.Login()
TRACE: 2017/05/09 16:01:42 Login.go:19: calling manager.Login()
TRACE: 2017/05/09 16:01:42 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/09 16:01:42 Login.go:16: entering manager.login
TRACE: 2017/05/09 16:01:42 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/09 16:01:42 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/09 16:01:42 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/09 16:01:46 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/09 16:01:46 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/09 16:01:46 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/09 16:01:48 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/09 16:01:48 loginimpl.go:81: executing query.....
TRACE: 2017/05/09 16:01:50 loginimpl.go:93: {0xc0422d05b0 0xc0422ccbb0}
TRACE: 2017/05/09 16:01:50 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/09 16:01:50 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/09 16:01:50 loginimpl.go:16: exntering in SaveToken() function {0 2 UJjwLIKYKXOAMpAdLWRy 2017-05-09 16:01:46.5126667 +0530 IST}
TRACE: 2017/05/09 16:01:50 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/09 16:01:52 loginimpl.go:20: token inserted
TRACE: 2017/05/09 16:01:52 loginimpl.go:21: {0 2 UJjwLIKYKXOAMpAdLWRy 2017-05-09 16:01:46.5126667 +0530 IST}
TRACE: 2017/05/09 16:01:54 loginimpl.go:33: {0xc04228d7a0 0xc042004c10}
TRACE: 2017/05/09 16:01:54 Login.go:48: {2 rakesh UJjwLIKYKXOAMpAdLWRy user}
TRACE: 2017/05/09 16:02:02 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/09 16:02:02 QuestionList.go:18: fundamental
TRACE: 2017/05/09 16:02:02 QuestionList.go:19: UJjwLIKYKXOAMpAdLWRy
TRACE: 2017/05/09 16:02:02 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/09 16:02:02 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/09 16:02:02 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/09 16:02:02 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/09 16:02:04 authenticatetokenimpl.go:47: UJjwLIKYKXOAMpAdLWRy
TRACE: 2017/05/09 16:02:04 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/09 16:02:04 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/09 16:02:06 authenticatetokenimpl.go:51: UJjwLIKYKXOAMpAdLWRy
TRACE: 2017/05/09 16:02:06 authenticatetokenimpl.go:59: Type is UJjwLIKYKXOAMpAdLWRy
TRACE: 2017/05/09 16:02:06 aunthenticate.go:42: 2017-05-09 16:02:06
TRACE: 2017/05/09 16:02:06 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/09 16:02:08 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/09 16:02:08 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/09 16:02:09 authenticatetokenimpl.go:30: {0xc042032a80 0xc042371c20}
TRACE: 2017/05/09 16:02:09 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/09 16:02:09 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/09 16:02:09 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/09 16:02:09 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/09 16:02:09 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/09 16:02:09 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/09 16:02:09 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/09 16:02:12 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0423aea20 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/09 16:02:13 questionimpl.go:30: &{0xc0421bf2d0 0x718e40 0xc0423b32c0 false [] <nil> 0xc0423580f0}
TRACE: 2017/05/09 16:05:41 Login.go:14: entering webservice.Login()
TRACE: 2017/05/09 16:05:41 Login.go:19: calling manager.Login()
TRACE: 2017/05/09 16:05:41 Login.go:20: {0    test@t.com 123 }
TRACE: 2017/05/09 16:05:41 Login.go:16: entering manager.login
TRACE: 2017/05/09 16:05:41 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/09 16:05:41 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/09 16:05:41 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/09 16:05:45 userimpl.go:109: Response user Obj :  {1 Sweta Vahia 9898989898   admin}
TRACE: 2017/05/09 16:05:45 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/09 16:05:45 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/09 16:05:48 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/09 16:05:48 loginimpl.go:81: executing query.....
TRACE: 2017/05/09 16:05:49 loginimpl.go:93: {0xc04228dd50 0xc04240a880}
TRACE: 2017/05/09 16:05:49 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/09 16:05:49 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/09 16:05:49 loginimpl.go:16: exntering in SaveToken() function {0 1 VVDRHSXzvAEHNlPTWtlO 2017-05-09 16:05:45.9349349 +0530 IST}
TRACE: 2017/05/09 16:05:49 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/09 16:05:52 loginimpl.go:20: token inserted
TRACE: 2017/05/09 16:05:52 loginimpl.go:21: {0 1 VVDRHSXzvAEHNlPTWtlO 2017-05-09 16:05:45.9349349 +0530 IST}
TRACE: 2017/05/09 16:05:53 loginimpl.go:33: {0xc0422d1730 0xc0423e4500}
TRACE: 2017/05/09 16:05:53 Login.go:48: {1 Sweta VVDRHSXzvAEHNlPTWtlO admin}
TRACE: 2017/05/09 16:06:31 Login.go:14: entering webservice.Login()
TRACE: 2017/05/09 16:06:31 Login.go:19: calling manager.Login()
TRACE: 2017/05/09 16:06:31 Login.go:20: {0    test@t.com 123 }
TRACE: 2017/05/09 16:06:31 Login.go:16: entering manager.login
TRACE: 2017/05/09 16:06:31 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/09 16:06:31 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/09 16:06:31 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/09 16:06:35 userimpl.go:109: Response user Obj :  {1 Sweta Vahia 9898989898   admin}
TRACE: 2017/05/09 16:06:35 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/09 16:06:35 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/09 16:06:37 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/09 16:06:37 loginimpl.go:81: executing query.....
TRACE: 2017/05/09 16:06:39 loginimpl.go:93: {0xc0421bfa40 0xc0421e5990}
TRACE: 2017/05/09 16:06:39 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/09 16:06:39 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/09 16:06:39 loginimpl.go:16: exntering in SaveToken() function {0 1 ewTFAJRsdUIvYWYqsdFY 2017-05-09 16:06:35.6085748 +0530 IST}
TRACE: 2017/05/09 16:06:39 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/09 16:06:41 loginimpl.go:20: token inserted
TRACE: 2017/05/09 16:06:41 loginimpl.go:21: {0 1 ewTFAJRsdUIvYWYqsdFY 2017-05-09 16:06:35.6085748 +0530 IST}
TRACE: 2017/05/09 16:06:43 loginimpl.go:33: {0xc0422d1880 0xc04240aff0}
TRACE: 2017/05/09 16:06:43 Login.go:48: {1 Sweta ewTFAJRsdUIvYWYqsdFY admin}
TRACE: 2017/05/09 16:11:55 Login.go:14: entering webservice.Login()
TRACE: 2017/05/09 16:11:55 Login.go:19: calling manager.Login()
TRACE: 2017/05/09 16:11:55 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/09 16:11:55 Login.go:16: entering manager.login
TRACE: 2017/05/09 16:11:55 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/09 16:11:55 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/09 16:11:55 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/09 16:11:59 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/09 16:11:59 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/09 16:11:59 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/09 16:11:59 Login.go:14: entering webservice.Login()
TRACE: 2017/05/09 16:11:59 Login.go:19: calling manager.Login()
TRACE: 2017/05/09 16:11:59 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/09 16:11:59 Login.go:16: entering manager.login
TRACE: 2017/05/09 16:11:59 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/09 16:11:59 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/09 16:11:59 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/09 16:12:01 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/09 16:12:01 loginimpl.go:81: executing query.....
TRACE: 2017/05/09 16:12:03 loginimpl.go:93: {0xc042138000 0xc0423701f0}
TRACE: 2017/05/09 16:12:03 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/09 16:12:03 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/09 16:12:03 loginimpl.go:16: exntering in SaveToken() function {0 2 YkjayKuFCmpVnCbCgtFr 2017-05-09 16:11:59.2049717 +0530 IST}
TRACE: 2017/05/09 16:12:03 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/09 16:12:03 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/09 16:12:03 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/09 16:12:03 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/09 16:12:05 loginimpl.go:20: token inserted
TRACE: 2017/05/09 16:12:05 loginimpl.go:21: {0 2 YkjayKuFCmpVnCbCgtFr 2017-05-09 16:11:59.2049717 +0530 IST}
TRACE: 2017/05/09 16:12:05 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/09 16:12:05 loginimpl.go:81: executing query.....
TRACE: 2017/05/09 16:12:07 loginimpl.go:33: {0xc042148700 0xc0421e8a30}
TRACE: 2017/05/09 16:12:07 Login.go:48: {2 rakesh YkjayKuFCmpVnCbCgtFr user}
TRACE: 2017/05/09 16:12:07 loginimpl.go:93: {0xc04228c4d0 0xc0421e8cc0}
TRACE: 2017/05/09 16:12:07 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/09 16:12:07 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/09 16:12:07 loginimpl.go:16: exntering in SaveToken() function {0 2 QtsdZlkWvrEHdHZXRYAZ 2017-05-09 16:12:03.6204946 +0530 IST}
TRACE: 2017/05/09 16:12:07 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/09 16:12:09 loginimpl.go:20: token inserted
TRACE: 2017/05/09 16:12:09 loginimpl.go:21: {0 2 QtsdZlkWvrEHdHZXRYAZ 2017-05-09 16:12:03.6204946 +0530 IST}
TRACE: 2017/05/09 16:12:11 loginimpl.go:33: {0xc042148a10 0xc042370b90}
TRACE: 2017/05/09 16:12:11 Login.go:48: {2 rakesh QtsdZlkWvrEHdHZXRYAZ user}
TRACE: 2017/05/09 16:12:24 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/09 16:12:24 QuestionList.go:18: fundamental
TRACE: 2017/05/09 16:12:24 QuestionList.go:19: QtsdZlkWvrEHdHZXRYAZ
TRACE: 2017/05/09 16:12:24 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/09 16:12:24 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/09 16:12:24 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/09 16:12:24 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/09 16:12:26 authenticatetokenimpl.go:47: QtsdZlkWvrEHdHZXRYAZ
TRACE: 2017/05/09 16:12:26 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/09 16:12:26 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/09 16:12:28 authenticatetokenimpl.go:51: QtsdZlkWvrEHdHZXRYAZ
TRACE: 2017/05/09 16:12:28 authenticatetokenimpl.go:59: Type is QtsdZlkWvrEHdHZXRYAZ
TRACE: 2017/05/09 16:12:28 aunthenticate.go:42: 2017-05-09 16:12:28
TRACE: 2017/05/09 16:12:28 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/09 16:12:30 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/09 16:12:30 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/09 16:12:32 authenticatetokenimpl.go:30: {0xc042128380 0xc042106760}
TRACE: 2017/05/09 16:12:32 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/09 16:12:32 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/09 16:12:32 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/09 16:12:32 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/09 16:12:32 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/09 16:12:32 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/09 16:12:32 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/09 16:12:34 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0423af8c0 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/09 16:12:36 questionimpl.go:30: &{0xc042128620 0x718e40 0xc042377060 false [] <nil> 0xc042145290}
TRACE: 2017/05/09 16:12:43 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/09 16:12:43 AnswerList.go:23: [{0 6 } {0 3 } {0 4 } {0 8 } {0 9 } {0 7 } {0 10 } {0 1 } {0 2 } {0 5 }]
TRACE: 2017/05/09 16:12:43 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/09 16:12:43 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/09 16:12:43 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/09 16:12:43 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/09 16:12:43 CalculateScore.go:30: answerList [{0 6 } {0 3 } {0 4 } {0 8 } {0 9 } {0 7 } {0 10 } {0 1 } {0 2 } {0 5 }]
TRACE: 2017/05/09 16:12:43 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/09 16:12:43 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/09 16:12:43 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/09 16:12:43 questionimpl.go:98: executing query and fetching answers 
TRACE: 2017/05/09 16:12:44 questionimpl.go:105: dial tcp 127.0.0.1:3306: connectex: No connection could be made because the target machine actively refused it.
TRACE: 2017/05/09 16:16:31 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/05/09 16:16:31 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/05/09 16:16:31 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/05/09 16:16:31 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/05/09 16:16:31 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/05/09 16:16:31 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/05/09 16:16:31 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/05/09 16:16:31 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/05/09 16:16:31 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/05/09 16:16:31 debug.go:45: [GIN-debug] Listening and serving HTTP on :8084
TRACE: 2017/05/09 16:17:44 Login.go:14: entering webservice.Login()
TRACE: 2017/05/09 16:17:44 Login.go:19: calling manager.Login()
TRACE: 2017/05/09 16:17:44 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/09 16:17:44 Login.go:16: entering manager.login
TRACE: 2017/05/09 16:17:44 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/09 16:17:44 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/09 16:17:44 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/09 16:17:48 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/09 16:17:48 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/09 16:17:48 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/09 16:17:51 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/09 16:17:51 loginimpl.go:81: executing query.....
TRACE: 2017/05/09 16:17:53 loginimpl.go:93: {0xc042272380 0xc0421be9c0}
TRACE: 2017/05/09 16:17:53 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/09 16:17:53 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/09 16:17:53 loginimpl.go:16: exntering in SaveToken() function {0 2 fanoyMOOEGoYSDTiDEYT 2017-05-09 16:17:48.7817 +0530 IST}
TRACE: 2017/05/09 16:17:53 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/09 16:17:55 loginimpl.go:20: token inserted
TRACE: 2017/05/09 16:17:55 loginimpl.go:21: {0 2 fanoyMOOEGoYSDTiDEYT 2017-05-09 16:17:48.7817 +0530 IST}
TRACE: 2017/05/09 16:17:57 loginimpl.go:33: {0xc0422c6150 0xc0422c2210}
TRACE: 2017/05/09 16:17:57 Login.go:48: {2 rakesh fanoyMOOEGoYSDTiDEYT user}
TRACE: 2017/05/09 16:18:05 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/09 16:18:05 QuestionList.go:18: java
TRACE: 2017/05/09 16:18:05 QuestionList.go:19: fanoyMOOEGoYSDTiDEYT
TRACE: 2017/05/09 16:18:05 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/09 16:18:05 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/09 16:18:05 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/09 16:18:05 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/09 16:18:07 authenticatetokenimpl.go:47: fanoyMOOEGoYSDTiDEYT
TRACE: 2017/05/09 16:18:07 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/09 16:18:07 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/09 16:18:09 authenticatetokenimpl.go:51: fanoyMOOEGoYSDTiDEYT
TRACE: 2017/05/09 16:18:09 authenticatetokenimpl.go:59: Type is fanoyMOOEGoYSDTiDEYT
TRACE: 2017/05/09 16:18:09 aunthenticate.go:42: 2017-05-09 16:18:09
TRACE: 2017/05/09 16:18:09 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/09 16:18:11 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/09 16:18:11 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/09 16:18:13 authenticatetokenimpl.go:30: {0xc0422c6690 0xc0421d1250}
TRACE: 2017/05/09 16:18:13 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/09 16:18:13 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/09 16:18:13 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/09 16:18:13 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/09 16:18:13 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/09 16:18:13 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/09 16:18:13 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/09 16:18:16 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc04232ac60 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/09 16:18:18 questionimpl.go:30: &{0xc0421a33b0 0x718e40 0xc042338300 false [] <nil> 0xc0422e43f0}
TRACE: 2017/05/09 16:18:24 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/09 16:18:24 AnswerList.go:23: [{0 15 } {0 31 } {0 25 } {0 32 } {0 13 } {0 14 } {0 27 } {0 16 } {0 26 } {0 19 } {0 35 } {0 33 } {0 28 } {0 17 } {0 34 } {0 21 } {0 23 } {0 22 } {0 18 } {0 24 } {0 30 } {0 20 } {0 29 } {0 12 } {0 11 }]
TRACE: 2017/05/09 16:18:24 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/09 16:18:24 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/09 16:18:24 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/09 16:18:24 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/09 16:18:24 CalculateScore.go:30: answerList [{0 15 } {0 31 } {0 25 } {0 32 } {0 13 } {0 14 } {0 27 } {0 16 } {0 26 } {0 19 } {0 35 } {0 33 } {0 28 } {0 17 } {0 34 } {0 21 } {0 23 } {0 22 } {0 18 } {0 24 } {0 30 } {0 20 } {0 29 } {0 12 } {0 11 }]
TRACE: 2017/05/09 16:18:24 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/09 16:18:24 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/09 16:18:24 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/09 16:18:24 questionimpl.go:98: executing query and fetching answers 
TRACE: 2017/05/09 16:18:25 questionimpl.go:105: dial tcp 127.0.0.1:3306: connectex: No connection could be made because the target machine actively refused it.
TRACE: 2017/05/09 16:19:30 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/05/09 16:19:30 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/05/09 16:19:30 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/05/09 16:19:30 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/05/09 16:19:30 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/05/09 16:19:30 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/05/09 16:19:30 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/05/09 16:19:30 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/05/09 16:19:30 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/05/09 16:19:30 debug.go:45: [GIN-debug] Listening and serving HTTP on :8084
TRACE: 2017/05/09 16:19:32 Login.go:14: entering webservice.Login()
TRACE: 2017/05/09 16:19:32 Login.go:19: calling manager.Login()
TRACE: 2017/05/09 16:19:32 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/09 16:19:32 Login.go:16: entering manager.login
TRACE: 2017/05/09 16:19:32 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/09 16:19:32 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/09 16:19:32 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/09 16:19:37 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/09 16:19:37 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/09 16:19:37 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/09 16:19:39 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/09 16:19:39 loginimpl.go:81: executing query.....
TRACE: 2017/05/09 16:19:42 loginimpl.go:93: {0xc042032460 0xc042004670}
TRACE: 2017/05/09 16:19:42 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/09 16:19:42 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/09 16:19:42 loginimpl.go:16: exntering in SaveToken() function {0 2 BvmVJaxKYFtSxlHWEveb 2017-05-09 16:19:37.449782 +0530 IST}
TRACE: 2017/05/09 16:19:42 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/09 16:19:44 loginimpl.go:20: token inserted
TRACE: 2017/05/09 16:19:44 loginimpl.go:21: {0 2 BvmVJaxKYFtSxlHWEveb 2017-05-09 16:19:37.449782 +0530 IST}
TRACE: 2017/05/09 16:19:46 loginimpl.go:33: {0xc042032700 0xc042004aa0}
TRACE: 2017/05/09 16:19:46 Login.go:48: {2 rakesh BvmVJaxKYFtSxlHWEveb user}
TRACE: 2017/05/09 16:19:59 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/09 16:19:59 QuestionList.go:18: language
TRACE: 2017/05/09 16:19:59 QuestionList.go:19: BvmVJaxKYFtSxlHWEveb
TRACE: 2017/05/09 16:19:59 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/09 16:19:59 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/09 16:19:59 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/09 16:19:59 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/09 16:20:01 authenticatetokenimpl.go:47: BvmVJaxKYFtSxlHWEveb
TRACE: 2017/05/09 16:20:01 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/09 16:20:01 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/09 16:20:03 authenticatetokenimpl.go:51: BvmVJaxKYFtSxlHWEveb
TRACE: 2017/05/09 16:20:03 authenticatetokenimpl.go:59: Type is BvmVJaxKYFtSxlHWEveb
TRACE: 2017/05/09 16:20:03 aunthenticate.go:42: 2017-05-09 16:20:03
TRACE: 2017/05/09 16:20:03 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/09 16:20:05 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/09 16:20:05 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/09 16:20:07 authenticatetokenimpl.go:30: {0xc0421beee0 0xc04230ef60}
TRACE: 2017/05/09 16:20:07 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/09 16:20:07 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/09 16:20:07 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/09 16:20:07 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/09 16:20:07 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/09 16:20:07 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/09 16:20:07 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/09 16:20:10 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0422d9200 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/09 16:20:12 questionimpl.go:30: &{0xc042200540 0x718e40 0xc0421fb480 false [] <nil> 0xc0421fc690}
TRACE: 2017/05/09 16:20:26 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/09 16:20:26 AnswerList.go:23: [{0 37 } {0 43 } {0 41 } {0 38 } {0 39 } {0 36 } {0 40 } {0 42 }]
TRACE: 2017/05/09 16:20:26 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/09 16:20:26 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/09 16:20:26 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/09 16:20:26 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/09 16:20:26 CalculateScore.go:30: answerList [{0 37 } {0 43 } {0 41 } {0 38 } {0 39 } {0 36 } {0 40 } {0 42 }]
TRACE: 2017/05/09 16:20:26 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/09 16:20:26 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/09 16:20:26 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/09 16:20:26 questionimpl.go:98: executing query and fetching answers 
TRACE: 2017/05/09 16:20:27 questionimpl.go:105: dial tcp 127.0.0.1:3306: connectex: No connection could be made because the target machine actively refused it.
TRACE: 2017/05/09 16:23:42 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/05/09 16:23:42 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/05/09 16:23:42 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/05/09 16:23:42 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/05/09 16:23:42 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/05/09 16:23:42 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/05/09 16:23:42 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/05/09 16:23:42 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/05/09 16:23:42 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/05/09 16:23:42 debug.go:45: [GIN-debug] Listening and serving HTTP on :8084
TRACE: 2017/05/09 16:23:44 Login.go:14: entering webservice.Login()
TRACE: 2017/05/09 16:23:44 Login.go:19: calling manager.Login()
TRACE: 2017/05/09 16:23:44 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/09 16:23:44 Login.go:16: entering manager.login
TRACE: 2017/05/09 16:23:44 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/09 16:23:44 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/09 16:23:44 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/09 16:23:48 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/09 16:23:48 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/09 16:23:48 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/09 16:23:50 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/09 16:23:50 loginimpl.go:81: executing query.....
TRACE: 2017/05/09 16:23:52 loginimpl.go:93: {0xc0421bf180 0xc0421e0c50}
TRACE: 2017/05/09 16:23:52 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/09 16:23:52 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/09 16:23:52 loginimpl.go:16: exntering in SaveToken() function {0 2 oDAtpZQxxwQhlZJEgedw 2017-05-09 16:23:48.2547341 +0530 IST}
TRACE: 2017/05/09 16:23:52 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/09 16:23:54 loginimpl.go:20: token inserted
TRACE: 2017/05/09 16:23:54 loginimpl.go:21: {0 2 oDAtpZQxxwQhlZJEgedw 2017-05-09 16:23:48.2547341 +0530 IST}
TRACE: 2017/05/09 16:23:55 loginimpl.go:33: {0xc042032230 0xc0421e0e60}
TRACE: 2017/05/09 16:23:55 Login.go:48: {2 rakesh oDAtpZQxxwQhlZJEgedw user}
TRACE: 2017/05/09 16:24:06 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/09 16:24:06 QuestionList.go:18: fundamental
TRACE: 2017/05/09 16:24:06 QuestionList.go:19: oDAtpZQxxwQhlZJEgedw
TRACE: 2017/05/09 16:24:06 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/09 16:24:06 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/09 16:24:06 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/09 16:24:06 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/09 16:24:08 authenticatetokenimpl.go:47: oDAtpZQxxwQhlZJEgedw
TRACE: 2017/05/09 16:24:08 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/09 16:24:08 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/09 16:24:10 authenticatetokenimpl.go:51: oDAtpZQxxwQhlZJEgedw
TRACE: 2017/05/09 16:24:10 authenticatetokenimpl.go:59: Type is oDAtpZQxxwQhlZJEgedw
TRACE: 2017/05/09 16:24:10 aunthenticate.go:42: 2017-05-09 16:24:10
TRACE: 2017/05/09 16:24:10 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/09 16:24:12 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/09 16:24:12 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/09 16:24:14 authenticatetokenimpl.go:30: {0xc042308540 0xc0423049e0}
TRACE: 2017/05/09 16:24:14 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/09 16:24:14 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/09 16:24:14 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/09 16:24:14 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/09 16:24:14 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/09 16:24:14 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/09 16:24:14 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/09 16:24:16 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc042313560 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/09 16:24:18 questionimpl.go:30: &{0xc0421bf730 0x718e40 0xc0422ed180 false [] <nil> 0xc0422d8a50}
TRACE: 2017/05/09 16:24:23 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/09 16:24:23 AnswerList.go:23: [{0 4 } {0 7 } {0 2 } {0 8 } {0 10 } {0 5 } {0 9 } {0 3 } {0 6 } {0 1 }]
TRACE: 2017/05/09 16:24:23 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/09 16:24:23 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/09 16:24:23 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/09 16:24:23 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/09 16:24:23 CalculateScore.go:30: answerList [{0 4 } {0 7 } {0 2 } {0 8 } {0 10 } {0 5 } {0 9 } {0 3 } {0 6 } {0 1 }]
TRACE: 2017/05/09 16:24:23 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/09 16:24:23 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/09 16:24:23 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/09 16:24:23 questionimpl.go:98: executing query and fetching answers 
TRACE: 2017/05/09 16:24:24 questionimpl.go:105: dial tcp 127.0.0.1:3306: connectex: No connection could be made because the target machine actively refused it.
TRACE: 2017/05/09 16:25:32 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/05/09 16:25:32 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/05/09 16:25:32 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/05/09 16:25:32 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/05/09 16:25:32 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/05/09 16:25:32 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/05/09 16:25:32 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/05/09 16:25:32 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/05/09 16:25:32 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/05/09 16:25:32 debug.go:45: [GIN-debug] Listening and serving HTTP on :8084
TRACE: 2017/05/09 16:26:10 Login.go:14: entering webservice.Login()
TRACE: 2017/05/09 16:26:10 Login.go:19: calling manager.Login()
TRACE: 2017/05/09 16:26:10 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/09 16:26:10 Login.go:16: entering manager.login
TRACE: 2017/05/09 16:26:10 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/09 16:26:10 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/09 16:26:10 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/09 16:26:14 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/09 16:26:14 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/09 16:26:14 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/09 16:26:16 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/09 16:26:16 loginimpl.go:81: executing query.....
TRACE: 2017/05/09 16:26:18 loginimpl.go:93: {0xc0421befc0 0xc0421e26e0}
TRACE: 2017/05/09 16:26:18 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/09 16:26:18 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/09 16:26:18 loginimpl.go:16: exntering in SaveToken() function {0 2 EQsirCNVQVbIsBxdVXec 2017-05-09 16:26:14.7965688 +0530 IST}
TRACE: 2017/05/09 16:26:18 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/09 16:26:20 loginimpl.go:20: token inserted
TRACE: 2017/05/09 16:26:20 loginimpl.go:21: {0 2 EQsirCNVQVbIsBxdVXec 2017-05-09 16:26:14.7965688 +0530 IST}
TRACE: 2017/05/09 16:26:22 loginimpl.go:33: {0xc04230a0e0 0xc0422be190}
TRACE: 2017/05/09 16:26:22 Login.go:48: {2 rakesh EQsirCNVQVbIsBxdVXec user}
TRACE: 2017/05/09 16:26:30 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/09 16:26:30 QuestionList.go:18: language
TRACE: 2017/05/09 16:26:30 QuestionList.go:19: EQsirCNVQVbIsBxdVXec
TRACE: 2017/05/09 16:26:30 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/09 16:26:30 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/09 16:26:30 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/09 16:26:30 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/09 16:26:32 authenticatetokenimpl.go:47: EQsirCNVQVbIsBxdVXec
TRACE: 2017/05/09 16:26:32 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/09 16:26:32 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/09 16:26:34 authenticatetokenimpl.go:51: EQsirCNVQVbIsBxdVXec
TRACE: 2017/05/09 16:26:34 authenticatetokenimpl.go:59: Type is EQsirCNVQVbIsBxdVXec
TRACE: 2017/05/09 16:26:34 aunthenticate.go:42: 2017-05-09 16:26:34
TRACE: 2017/05/09 16:26:34 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/09 16:26:36 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/09 16:26:36 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/09 16:26:38 authenticatetokenimpl.go:30: {0xc0420323f0 0xc042004980}
TRACE: 2017/05/09 16:26:38 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/09 16:26:38 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/09 16:26:38 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/09 16:26:38 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/09 16:26:38 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/09 16:26:38 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/09 16:26:38 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/09 16:26:40 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0422ebce0 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/09 16:26:41 questionimpl.go:30: &{0xc0422a8c40 0x718e40 0xc04234cde0 false [] <nil> 0xc042296ff0}
TRACE: 2017/05/09 16:26:45 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/09 16:26:45 AnswerList.go:23: [{0 39 } {0 43 } {0 40 } {0 41 } {0 42 } {0 38 } {0 37 } {0 36 }]
TRACE: 2017/05/09 16:26:45 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/09 16:26:45 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/09 16:26:45 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/09 16:26:45 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/09 16:26:45 CalculateScore.go:30: answerList [{0 39 } {0 43 } {0 40 } {0 41 } {0 42 } {0 38 } {0 37 } {0 36 }]
TRACE: 2017/05/09 16:26:45 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/09 16:26:45 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/09 16:26:45 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/09 16:26:45 questionimpl.go:98: executing query and fetching answers 
TRACE: 2017/05/09 16:26:46 questionimpl.go:105: dial tcp 127.0.0.1:3306: connectex: No connection could be made because the target machine actively refused it.
TRACE: 2017/05/09 16:28:24 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/05/09 16:28:24 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/05/09 16:28:24 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/05/09 16:28:24 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/05/09 16:28:24 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/05/09 16:28:24 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/05/09 16:28:24 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/05/09 16:28:24 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/05/09 16:28:24 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/05/09 16:28:24 debug.go:45: [GIN-debug] Listening and serving HTTP on :8084
TRACE: 2017/05/09 16:29:29 Login.go:14: entering webservice.Login()
TRACE: 2017/05/09 16:29:29 Login.go:19: calling manager.Login()
TRACE: 2017/05/09 16:29:29 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/09 16:29:29 Login.go:16: entering manager.login
TRACE: 2017/05/09 16:29:29 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/09 16:29:29 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/09 16:29:29 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/09 16:29:34 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/09 16:29:34 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/09 16:29:34 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/09 16:29:36 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/09 16:29:36 loginimpl.go:81: executing query.....
TRACE: 2017/05/09 16:29:38 loginimpl.go:93: {0xc0421da0e0 0xc0422b4670}
TRACE: 2017/05/09 16:29:38 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/09 16:29:38 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/09 16:29:38 loginimpl.go:16: exntering in SaveToken() function {0 2 OKYeKEjWzomJnjMVonKe 2017-05-09 16:29:34.7283711 +0530 IST}
TRACE: 2017/05/09 16:29:38 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/09 16:29:40 loginimpl.go:20: token inserted
TRACE: 2017/05/09 16:29:40 loginimpl.go:21: {0 2 OKYeKEjWzomJnjMVonKe 2017-05-09 16:29:34.7283711 +0530 IST}
TRACE: 2017/05/09 16:29:42 loginimpl.go:33: {0xc0421da1c0 0xc0421dc6b0}
TRACE: 2017/05/09 16:29:42 Login.go:48: {2 rakesh OKYeKEjWzomJnjMVonKe user}
TRACE: 2017/05/09 16:29:57 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/09 16:29:57 QuestionList.go:18: fundamental
TRACE: 2017/05/09 16:29:57 QuestionList.go:19: OKYeKEjWzomJnjMVonKe
TRACE: 2017/05/09 16:29:57 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/09 16:29:57 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/09 16:29:57 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/09 16:29:57 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/09 16:29:59 authenticatetokenimpl.go:47: OKYeKEjWzomJnjMVonKe
TRACE: 2017/05/09 16:29:59 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/09 16:29:59 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/09 16:30:01 authenticatetokenimpl.go:51: OKYeKEjWzomJnjMVonKe
TRACE: 2017/05/09 16:30:01 authenticatetokenimpl.go:59: Type is OKYeKEjWzomJnjMVonKe
TRACE: 2017/05/09 16:30:01 aunthenticate.go:42: 2017-05-09 16:30:01
TRACE: 2017/05/09 16:30:01 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/09 16:30:03 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/09 16:30:03 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/09 16:30:05 authenticatetokenimpl.go:30: {0xc04219d340 0xc0422b4bc0}
TRACE: 2017/05/09 16:30:05 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/09 16:30:05 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/09 16:30:05 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/09 16:30:05 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/09 16:30:05 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/09 16:30:05 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/09 16:30:05 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/09 16:30:07 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0422d1da0 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/09 16:30:09 questionimpl.go:30: &{0xc04219d3b0 0x718e40 0xc042348580 false [] <nil> 0xc04234a330}
TRACE: 2017/05/09 16:30:49 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/09 16:30:49 AnswerList.go:23: [{0 8 } {0 7 } {0 10 } {0 2 } {0 9 } {0 1 } {0 3 } {0 4 } {0 6 } {0 5 }]
TRACE: 2017/05/09 16:30:49 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/09 16:30:49 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/09 16:30:49 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/09 16:30:49 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/09 16:30:49 CalculateScore.go:30: answerList [{0 8 } {0 7 } {0 10 } {0 2 } {0 9 } {0 1 } {0 3 } {0 4 } {0 6 } {0 5 }]
TRACE: 2017/05/09 16:30:49 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/09 16:30:49 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/09 16:30:49 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/09 16:30:49 questionimpl.go:98: executing query and fetching answers 
TRACE: 2017/05/09 16:30:50 questionimpl.go:105: dial tcp 127.0.0.1:3306: connectex: No connection could be made because the target machine actively refused it.
TRACE: 2017/05/09 16:31:22 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/05/09 16:31:22 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/05/09 16:31:22 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/05/09 16:31:22 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/05/09 16:31:22 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/05/09 16:31:22 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/05/09 16:31:22 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/05/09 16:31:22 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/05/09 16:31:22 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/05/09 16:31:22 debug.go:45: [GIN-debug] Listening and serving HTTP on :8084
TRACE: 2017/05/09 16:31:53 Login.go:14: entering webservice.Login()
TRACE: 2017/05/09 16:31:53 Login.go:19: calling manager.Login()
TRACE: 2017/05/09 16:31:53 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/09 16:31:53 Login.go:16: entering manager.login
TRACE: 2017/05/09 16:31:53 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/09 16:31:53 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/09 16:31:53 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/09 16:31:57 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/09 16:31:57 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/09 16:31:57 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/09 16:31:59 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/09 16:31:59 loginimpl.go:81: executing query.....
TRACE: 2017/05/09 16:32:01 loginimpl.go:93: {0xc042032690 0xc042004cb0}
TRACE: 2017/05/09 16:32:01 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/09 16:32:01 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/09 16:32:01 loginimpl.go:16: exntering in SaveToken() function {0 2 xwzObgLDcjTTqwAtKTnD 2017-05-09 16:31:57.526085 +0530 IST}
TRACE: 2017/05/09 16:32:01 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/09 16:32:03 loginimpl.go:20: token inserted
TRACE: 2017/05/09 16:32:03 loginimpl.go:21: {0 2 xwzObgLDcjTTqwAtKTnD 2017-05-09 16:31:57.526085 +0530 IST}
TRACE: 2017/05/09 16:32:05 loginimpl.go:33: {0xc0422aa2a0 0xc0422022f0}
TRACE: 2017/05/09 16:32:05 Login.go:48: {2 rakesh xwzObgLDcjTTqwAtKTnD user}
TRACE: 2017/05/09 16:32:16 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/09 16:32:16 QuestionList.go:18: fundamental
TRACE: 2017/05/09 16:32:16 QuestionList.go:19: xwzObgLDcjTTqwAtKTnD
TRACE: 2017/05/09 16:32:16 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/09 16:32:16 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/09 16:32:16 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/09 16:32:16 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/09 16:32:18 authenticatetokenimpl.go:47: xwzObgLDcjTTqwAtKTnD
TRACE: 2017/05/09 16:32:18 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/09 16:32:18 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/09 16:32:20 authenticatetokenimpl.go:51: xwzObgLDcjTTqwAtKTnD
TRACE: 2017/05/09 16:32:20 authenticatetokenimpl.go:59: Type is xwzObgLDcjTTqwAtKTnD
TRACE: 2017/05/09 16:32:20 aunthenticate.go:42: 2017-05-09 16:32:20
TRACE: 2017/05/09 16:32:20 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/09 16:32:22 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/09 16:32:22 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/09 16:32:24 authenticatetokenimpl.go:30: {0xc0422aa4d0 0xc04229cbb0}
TRACE: 2017/05/09 16:32:24 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/09 16:32:24 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/09 16:32:24 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/09 16:32:24 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/09 16:32:24 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/09 16:32:24 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/09 16:32:24 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/09 16:32:26 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc04229b620 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/09 16:32:28 questionimpl.go:30: &{0xc0422aa540 0x718e40 0xc0422f1c20 false [] <nil> 0xc0422ac900}
TRACE: 2017/05/09 16:32:35 Login.go:14: entering webservice.Login()
TRACE: 2017/05/09 16:32:35 Login.go:19: calling manager.Login()
TRACE: 2017/05/09 16:32:35 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/09 16:32:35 Login.go:16: entering manager.login
TRACE: 2017/05/09 16:32:35 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/09 16:32:35 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/09 16:32:35 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/09 16:32:40 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/09 16:32:40 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/09 16:32:40 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/09 16:32:41 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/09 16:32:41 loginimpl.go:81: executing query.....
TRACE: 2017/05/09 16:32:43 loginimpl.go:93: {0xc0422aaa80 0xc0422ee3a0}
TRACE: 2017/05/09 16:32:43 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/09 16:32:43 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/09 16:32:43 loginimpl.go:16: exntering in SaveToken() function {0 2 sPiKaTORRldCtqpeWGgL 2017-05-09 16:32:40.0449588 +0530 IST}
TRACE: 2017/05/09 16:32:43 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/09 16:32:45 loginimpl.go:20: token inserted
TRACE: 2017/05/09 16:32:45 loginimpl.go:21: {0 2 sPiKaTORRldCtqpeWGgL 2017-05-09 16:32:40.0449588 +0530 IST}
TRACE: 2017/05/09 16:32:47 loginimpl.go:33: {0xc0421bd490 0xc042203540}
TRACE: 2017/05/09 16:32:47 Login.go:48: {2 rakesh sPiKaTORRldCtqpeWGgL user}
TRACE: 2017/05/09 16:33:01 Login.go:14: entering webservice.Login()
TRACE: 2017/05/09 16:33:01 Login.go:19: calling manager.Login()
TRACE: 2017/05/09 16:33:01 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/09 16:33:01 Login.go:16: entering manager.login
TRACE: 2017/05/09 16:33:01 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/09 16:33:01 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/09 16:33:01 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/09 16:33:05 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/09 16:33:05 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/09 16:33:05 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/09 16:33:07 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/09 16:33:07 loginimpl.go:81: executing query.....
TRACE: 2017/05/09 16:33:08 loginimpl.go:93: {0xc042390850 0xc04229d650}
TRACE: 2017/05/09 16:33:08 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/09 16:33:08 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/09 16:33:08 loginimpl.go:16: exntering in SaveToken() function {0 2 ExHvYifWIZtBKOXEvkuc 2017-05-09 16:33:05.064384 +0530 IST}
TRACE: 2017/05/09 16:33:08 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/09 16:33:09 Login.go:14: entering webservice.Login()
TRACE: 2017/05/09 16:33:09 Login.go:19: calling manager.Login()
TRACE: 2017/05/09 16:33:09 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/09 16:33:09 Login.go:16: entering manager.login
TRACE: 2017/05/09 16:33:09 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/09 16:33:09 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/09 16:33:09 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/09 16:33:10 loginimpl.go:20: token inserted
TRACE: 2017/05/09 16:33:10 loginimpl.go:21: {0 2 ExHvYifWIZtBKOXEvkuc 2017-05-09 16:33:05.064384 +0530 IST}
TRACE: 2017/05/09 16:33:12 loginimpl.go:33: {0xc042033c70 0xc04235b6d0}
TRACE: 2017/05/09 16:33:12 Login.go:48: {2 rakesh ExHvYifWIZtBKOXEvkuc user}
TRACE: 2017/05/09 16:33:13 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/09 16:33:13 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/09 16:33:13 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/09 16:33:15 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/09 16:33:15 loginimpl.go:81: executing query.....
TRACE: 2017/05/09 16:33:17 loginimpl.go:93: {0xc0422ab030 0xc04235bf40}
TRACE: 2017/05/09 16:33:17 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/09 16:33:17 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/09 16:33:17 loginimpl.go:16: exntering in SaveToken() function {0 2 AKVjUVCJHYaixsIWSKwa 2017-05-09 16:33:13.1784417 +0530 IST}
TRACE: 2017/05/09 16:33:17 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/09 16:33:19 loginimpl.go:20: token inserted
TRACE: 2017/05/09 16:33:19 loginimpl.go:21: {0 2 AKVjUVCJHYaixsIWSKwa 2017-05-09 16:33:13.1784417 +0530 IST}
TRACE: 2017/05/09 16:33:21 loginimpl.go:33: {0xc0421bd960 0xc04229ddc0}
TRACE: 2017/05/09 16:33:21 Login.go:48: {2 rakesh AKVjUVCJHYaixsIWSKwa user}
TRACE: 2017/05/09 16:33:27 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/09 16:33:27 QuestionList.go:18: fundamental
TRACE: 2017/05/09 16:33:27 QuestionList.go:19: AKVjUVCJHYaixsIWSKwa
TRACE: 2017/05/09 16:33:27 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/09 16:33:27 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/09 16:33:27 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/09 16:33:27 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/09 16:33:29 authenticatetokenimpl.go:47: AKVjUVCJHYaixsIWSKwa
TRACE: 2017/05/09 16:33:29 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/09 16:33:29 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/09 16:33:31 authenticatetokenimpl.go:51: AKVjUVCJHYaixsIWSKwa
TRACE: 2017/05/09 16:33:31 authenticatetokenimpl.go:59: Type is AKVjUVCJHYaixsIWSKwa
TRACE: 2017/05/09 16:33:31 aunthenticate.go:42: 2017-05-09 16:33:31
TRACE: 2017/05/09 16:33:31 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/09 16:33:33 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/09 16:33:33 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/09 16:33:34 authenticatetokenimpl.go:30: {0xc042408770 0xc042410a90}
TRACE: 2017/05/09 16:33:34 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/09 16:33:34 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/09 16:33:34 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/09 16:33:34 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/09 16:33:34 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/09 16:33:34 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/09 16:33:34 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/09 16:33:37 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0423db800 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/09 16:33:38 questionimpl.go:30: &{0xc0422ab3b0 0x718e40 0xc042413c40 false [] <nil> 0xc0422ada40}
TRACE: 2017/05/09 17:15:31 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/09 17:15:31 AnswerList.go:23: [{0 8 } {0 3 } {0 5 } {0 6 } {0 1 } {0 7 } {0 2 } {0 9 } {0 10 } {0 4 }]
TRACE: 2017/05/09 17:15:31 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/09 17:15:31 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/09 17:15:31 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/09 17:15:31 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/09 17:15:31 CalculateScore.go:30: answerList [{0 8 } {0 3 } {0 5 } {0 6 } {0 1 } {0 7 } {0 2 } {0 9 } {0 10 } {0 4 }]
TRACE: 2017/05/09 17:15:31 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/09 17:15:31 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/09 17:15:31 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/09 17:15:31 questionimpl.go:98: executing query and fetching answers 
TRACE: 2017/05/09 17:15:32 questionimpl.go:105: dial tcp 127.0.0.1:3306: connectex: No connection could be made because the target machine actively refused it.
TRACE: 2017/05/09 18:23:37 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/05/09 18:23:37 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/05/09 18:23:37 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/05/09 18:23:37 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/05/09 18:23:37 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/05/09 18:23:37 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/05/09 18:23:37 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/05/09 18:23:37 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/05/09 18:23:37 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/05/09 18:23:37 debug.go:45: [GIN-debug] Listening and serving HTTP on :8084
TRACE: 2017/05/09 18:24:41 Login.go:14: entering webservice.Login()
TRACE: 2017/05/09 18:24:41 Login.go:19: calling manager.Login()
TRACE: 2017/05/09 18:24:41 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/09 18:24:41 Login.go:16: entering manager.login
TRACE: 2017/05/09 18:24:41 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/09 18:24:41 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/09 18:24:41 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/09 18:24:46 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/09 18:24:46 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/09 18:24:46 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/09 18:24:48 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/09 18:24:48 loginimpl.go:81: executing query.....
TRACE: 2017/05/09 18:24:50 loginimpl.go:93: {0xc0422d60e0 0xc0422be1a0}
TRACE: 2017/05/09 18:24:50 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/09 18:24:50 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/09 18:24:50 loginimpl.go:16: exntering in SaveToken() function {0 2 hnSEvHhtCAUMXNVFMwes 2017-05-09 18:24:46.2004431 +0530 IST}
TRACE: 2017/05/09 18:24:50 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/09 18:24:52 loginimpl.go:20: token inserted
TRACE: 2017/05/09 18:24:52 loginimpl.go:21: {0 2 hnSEvHhtCAUMXNVFMwes 2017-05-09 18:24:46.2004431 +0530 IST}
TRACE: 2017/05/09 18:24:53 loginimpl.go:33: {0xc0420324d0 0xc042004bc0}
TRACE: 2017/05/09 18:24:53 Login.go:48: {2 rakesh hnSEvHhtCAUMXNVFMwes user}
TRACE: 2017/05/09 18:25:01 Login.go:14: entering webservice.Login()
TRACE: 2017/05/09 18:25:01 Login.go:19: calling manager.Login()
TRACE: 2017/05/09 18:25:01 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/09 18:25:01 Login.go:16: entering manager.login
TRACE: 2017/05/09 18:25:01 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/09 18:25:01 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/09 18:25:01 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/09 18:25:05 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/09 18:25:05 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/09 18:25:05 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/09 18:25:07 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/09 18:25:07 loginimpl.go:81: executing query.....
TRACE: 2017/05/09 18:25:09 loginimpl.go:93: {0xc042032f50 0xc042005ec0}
TRACE: 2017/05/09 18:25:09 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/09 18:25:09 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/09 18:25:09 loginimpl.go:16: exntering in SaveToken() function {0 2 AqvXjXOFVltWnBJUHQbq 2017-05-09 18:25:05.2881782 +0530 IST}
TRACE: 2017/05/09 18:25:09 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/09 18:25:11 loginimpl.go:20: token inserted
TRACE: 2017/05/09 18:25:11 loginimpl.go:21: {0 2 AqvXjXOFVltWnBJUHQbq 2017-05-09 18:25:05.2881782 +0530 IST}
TRACE: 2017/05/09 18:25:13 loginimpl.go:33: {0xc04232c150 0xc0422a43b0}
TRACE: 2017/05/09 18:25:13 Login.go:48: {2 rakesh AqvXjXOFVltWnBJUHQbq user}
TRACE: 2017/05/09 18:25:20 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/09 18:25:20 QuestionList.go:18: fundamental
TRACE: 2017/05/09 18:25:20 QuestionList.go:19: AqvXjXOFVltWnBJUHQbq
TRACE: 2017/05/09 18:25:20 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/09 18:25:20 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/09 18:25:20 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/09 18:25:20 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/09 18:25:22 authenticatetokenimpl.go:47: AqvXjXOFVltWnBJUHQbq
TRACE: 2017/05/09 18:25:22 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/09 18:25:22 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/09 18:25:23 authenticatetokenimpl.go:51: AqvXjXOFVltWnBJUHQbq
TRACE: 2017/05/09 18:25:23 authenticatetokenimpl.go:59: Type is AqvXjXOFVltWnBJUHQbq
TRACE: 2017/05/09 18:25:23 aunthenticate.go:42: 2017-05-09 18:25:23
TRACE: 2017/05/09 18:25:23 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/09 18:25:25 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/09 18:25:25 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/09 18:25:27 authenticatetokenimpl.go:30: {0xc0422d6620 0xc0422be810}
TRACE: 2017/05/09 18:25:27 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/09 18:25:27 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/09 18:25:27 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/09 18:25:27 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/09 18:25:27 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/09 18:25:27 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/09 18:25:27 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/09 18:25:29 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc04237c780 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/09 18:25:31 questionimpl.go:30: &{0xc0422d6a10 0x718e40 0xc0423466a0 false [] <nil> 0xc0422d8b40}
TRACE: 2017/05/09 18:26:32 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/09 18:26:32 AnswerList.go:23: [{0 2 } {0 3 } {0 8 } {0 10 } {0 7 } {0 5 } {0 4 } {0 9 } {0 6 } {0 1 }]
TRACE: 2017/05/09 18:26:32 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/09 18:26:32 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/09 18:26:32 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/09 18:26:32 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/09 18:26:32 CalculateScore.go:30: answerList [{0 2 } {0 3 } {0 8 } {0 10 } {0 7 } {0 5 } {0 4 } {0 9 } {0 6 } {0 1 }]
TRACE: 2017/05/09 18:26:32 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/09 18:26:32 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/09 18:26:32 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/09 18:26:32 questionimpl.go:98: executing query and fetching answers 
TRACE: 2017/05/09 18:26:33 questionimpl.go:105: dial tcp 127.0.0.1:3306: connectex: No connection could be made because the target machine actively refused it.
TRACE: 2017/05/09 19:21:31 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/05/09 19:21:31 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/05/09 19:21:31 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/05/09 19:21:31 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/05/09 19:21:31 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/05/09 19:21:31 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/05/09 19:21:31 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/05/09 19:21:31 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/05/09 19:21:31 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/05/09 19:21:31 debug.go:45: [GIN-debug] Listening and serving HTTP on :8084
TRACE: 2017/05/09 19:24:39 Login.go:14: entering webservice.Login()
TRACE: 2017/05/09 19:24:39 Login.go:19: calling manager.Login()
TRACE: 2017/05/09 19:24:39 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/09 19:24:39 Login.go:16: entering manager.login
TRACE: 2017/05/09 19:24:39 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/09 19:24:39 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/09 19:24:39 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/09 19:24:43 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/09 19:24:43 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/09 19:24:43 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/09 19:24:45 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/09 19:24:45 loginimpl.go:81: executing query.....
TRACE: 2017/05/09 19:24:47 loginimpl.go:93: {0xc0421bebd0 0xc042316090}
TRACE: 2017/05/09 19:24:47 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/09 19:24:47 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/09 19:24:47 loginimpl.go:16: exntering in SaveToken() function {0 2 UZRjfuARsJYHLGNcchJw 2017-05-09 19:24:43.2244522 +0530 IST}
TRACE: 2017/05/09 19:24:47 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/09 19:24:49 loginimpl.go:20: token inserted
TRACE: 2017/05/09 19:24:49 loginimpl.go:21: {0 2 UZRjfuARsJYHLGNcchJw 2017-05-09 19:24:43.2244522 +0530 IST}
TRACE: 2017/05/09 19:24:50 loginimpl.go:33: {0xc0422ce460 0xc0422c07a0}
TRACE: 2017/05/09 19:24:50 Login.go:48: {2 rakesh UZRjfuARsJYHLGNcchJw user}
TRACE: 2017/05/09 19:24:58 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/09 19:24:58 QuestionList.go:18: fundamental
TRACE: 2017/05/09 19:24:58 QuestionList.go:19: UZRjfuARsJYHLGNcchJw
TRACE: 2017/05/09 19:24:58 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/09 19:24:58 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/09 19:24:58 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/09 19:24:58 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/09 19:25:00 authenticatetokenimpl.go:47: UZRjfuARsJYHLGNcchJw
TRACE: 2017/05/09 19:25:00 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/09 19:25:00 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/09 19:25:02 authenticatetokenimpl.go:51: 
TRACE: 2017/05/09 19:25:02 authenticatetokenimpl.go:54: No uid with that token.
TRACE: 2017/05/09 19:26:30 Login.go:14: entering webservice.Login()
TRACE: 2017/05/09 19:26:30 Login.go:19: calling manager.Login()
TRACE: 2017/05/09 19:26:30 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/09 19:26:30 Login.go:16: entering manager.login
TRACE: 2017/05/09 19:26:30 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/09 19:26:30 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/09 19:26:30 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/09 19:26:34 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/09 19:26:34 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/09 19:26:34 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/09 19:26:36 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/09 19:26:36 loginimpl.go:81: executing query.....
TRACE: 2017/05/09 19:26:38 loginimpl.go:93: {0xc0422ce850 0xc0422c1170}
TRACE: 2017/05/09 19:26:38 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/09 19:26:38 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/09 19:26:38 loginimpl.go:16: exntering in SaveToken() function {0 2 BUybyUJmqTDpVJHFBXBd 2017-05-09 19:26:34.6446742 +0530 IST}
TRACE: 2017/05/09 19:26:38 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/09 19:26:40 loginimpl.go:20: token inserted
TRACE: 2017/05/09 19:26:40 loginimpl.go:21: {0 2 BUybyUJmqTDpVJHFBXBd 2017-05-09 19:26:34.6446742 +0530 IST}
TRACE: 2017/05/09 19:26:42 loginimpl.go:33: {0xc042032af0 0xc042005470}
TRACE: 2017/05/09 19:26:42 Login.go:48: {2 rakesh BUybyUJmqTDpVJHFBXBd user}
TRACE: 2017/05/09 19:26:53 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/09 19:26:53 QuestionList.go:18: fundamental
TRACE: 2017/05/09 19:26:53 QuestionList.go:19: BUybyUJmqTDpVJHFBXBd
TRACE: 2017/05/09 19:26:53 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/09 19:26:53 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/09 19:26:53 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/09 19:26:53 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/09 19:26:55 authenticatetokenimpl.go:47: BUybyUJmqTDpVJHFBXBd
TRACE: 2017/05/09 19:26:55 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/09 19:26:55 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/09 19:26:57 authenticatetokenimpl.go:51: BUybyUJmqTDpVJHFBXBd
TRACE: 2017/05/09 19:26:57 authenticatetokenimpl.go:59: Type is BUybyUJmqTDpVJHFBXBd
TRACE: 2017/05/09 19:26:57 aunthenticate.go:42: 2017-05-09 19:26:57
TRACE: 2017/05/09 19:26:57 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/09 19:26:59 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/09 19:26:59 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/09 19:27:01 authenticatetokenimpl.go:30: {0xc0421bef50 0xc0423167f0}
TRACE: 2017/05/09 19:27:01 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/09 19:27:01 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/09 19:27:01 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/09 19:27:01 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/09 19:27:01 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/09 19:27:01 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/09 19:27:01 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/09 19:27:03 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc042325500 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/09 19:27:05 questionimpl.go:30: &{0xc042032f50 0x718e40 0xc04234dd40 false [] <nil> 0xc042007860}
TRACE: 2017/05/09 19:27:09 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/09 19:27:09 AnswerList.go:23: [{0 5 } {0 8 } {0 1 } {0 6 } {0 4 } {0 2 } {0 10 } {0 7 } {0 3 } {0 9 }]
TRACE: 2017/05/09 19:27:09 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/09 19:27:09 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/09 19:27:09 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/09 19:27:09 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/09 19:27:09 CalculateScore.go:30: answerList [{0 5 } {0 8 } {0 1 } {0 6 } {0 4 } {0 2 } {0 10 } {0 7 } {0 3 } {0 9 }]
TRACE: 2017/05/09 19:27:09 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/09 19:27:09 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/09 19:27:09 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/09 19:27:09 questionimpl.go:98: executing query and fetching answers 
TRACE: 2017/05/09 19:27:10 questionimpl.go:105: dial tcp 127.0.0.1:3306: connectex: No connection could be made because the target machine actively refused it.
TRACE: 2017/05/09 19:32:13 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/05/09 19:32:13 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/05/09 19:32:13 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/05/09 19:32:13 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/05/09 19:32:13 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/05/09 19:32:13 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/05/09 19:32:13 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/05/09 19:32:13 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/05/09 19:32:13 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/05/09 19:32:13 debug.go:45: [GIN-debug] Listening and serving HTTP on :8084
TRACE: 2017/05/09 19:32:24 Login.go:14: entering webservice.Login()
TRACE: 2017/05/09 19:32:24 Login.go:19: calling manager.Login()
TRACE: 2017/05/09 19:32:24 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/09 19:32:24 Login.go:16: entering manager.login
TRACE: 2017/05/09 19:32:24 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/09 19:32:24 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/09 19:32:24 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/09 19:32:28 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/09 19:32:28 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/09 19:32:28 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/09 19:32:30 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/09 19:32:30 loginimpl.go:81: executing query.....
TRACE: 2017/05/09 19:32:32 loginimpl.go:93: {0xc0420327e0 0xc042004ca0}
TRACE: 2017/05/09 19:32:32 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/09 19:32:32 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/09 19:32:32 loginimpl.go:16: exntering in SaveToken() function {0 2 yQIzbAZYsTxUcyjSReZb 2017-05-09 19:32:28.2293275 +0530 IST}
TRACE: 2017/05/09 19:32:32 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/09 19:32:34 loginimpl.go:20: token inserted
TRACE: 2017/05/09 19:32:34 loginimpl.go:21: {0 2 yQIzbAZYsTxUcyjSReZb 2017-05-09 19:32:28.2293275 +0530 IST}
TRACE: 2017/05/09 19:32:35 loginimpl.go:33: {0xc0421bec40 0xc0422f8210}
TRACE: 2017/05/09 19:32:35 Login.go:48: {2 rakesh yQIzbAZYsTxUcyjSReZb user}
TRACE: 2017/05/09 19:37:27 Login.go:14: entering webservice.Login()
TRACE: 2017/05/09 19:37:27 Login.go:19: calling manager.Login()
TRACE: 2017/05/09 19:37:27 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/09 19:37:27 Login.go:16: entering manager.login
TRACE: 2017/05/09 19:37:27 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/09 19:37:27 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/09 19:37:27 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/09 19:37:31 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/09 19:37:31 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/09 19:37:31 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/09 19:37:33 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/09 19:37:33 loginimpl.go:81: executing query.....
TRACE: 2017/05/09 19:37:35 loginimpl.go:93: {0xc042328460 0xc04230c7f0}
TRACE: 2017/05/09 19:37:35 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/09 19:37:35 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/09 19:37:35 loginimpl.go:16: exntering in SaveToken() function {0 2 rTeORTGUmeGRmEPWgzBQ 2017-05-09 19:37:31.6089396 +0530 IST}
TRACE: 2017/05/09 19:37:35 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/09 19:37:37 loginimpl.go:20: token inserted
TRACE: 2017/05/09 19:37:37 loginimpl.go:21: {0 2 rTeORTGUmeGRmEPWgzBQ 2017-05-09 19:37:31.6089396 +0530 IST}
TRACE: 2017/05/09 19:37:39 loginimpl.go:33: {0xc042032c40 0xc04230ced0}
TRACE: 2017/05/09 19:37:39 Login.go:48: {2 rakesh rTeORTGUmeGRmEPWgzBQ user}
TRACE: 2017/05/09 19:37:47 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/09 19:37:47 QuestionList.go:18: fundamental
TRACE: 2017/05/09 19:37:47 QuestionList.go:19: rTeORTGUmeGRmEPWgzBQ
TRACE: 2017/05/09 19:37:47 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/09 19:37:47 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/09 19:37:47 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/09 19:37:47 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/09 19:37:49 authenticatetokenimpl.go:47: rTeORTGUmeGRmEPWgzBQ
TRACE: 2017/05/09 19:37:49 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/09 19:37:49 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/09 19:37:51 authenticatetokenimpl.go:51: rTeORTGUmeGRmEPWgzBQ
TRACE: 2017/05/09 19:37:51 authenticatetokenimpl.go:59: Type is rTeORTGUmeGRmEPWgzBQ
TRACE: 2017/05/09 19:37:51 aunthenticate.go:42: 2017-05-09 19:37:51
TRACE: 2017/05/09 19:37:51 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/09 19:37:54 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/09 19:37:54 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/09 19:37:56 authenticatetokenimpl.go:30: {0xc042032ee0 0xc04230d9d0}
TRACE: 2017/05/09 19:37:56 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/09 19:37:56 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/09 19:37:56 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/09 19:37:56 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/09 19:37:56 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/09 19:37:56 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/09 19:37:56 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/09 19:37:58 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0423159e0 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/09 19:37:59 questionimpl.go:30: &{0xc0423290a0 0x718e40 0xc042361dc0 false [] <nil> 0xc04232d980}
TRACE: 2017/05/09 19:38:03 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/09 19:38:03 AnswerList.go:23: [{0 10 } {0 8 } {0 5 } {0 3 } {0 9 } {0 7 } {0 2 } {0 1 } {0 6 } {0 4 }]
TRACE: 2017/05/09 19:38:03 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/09 19:38:03 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/09 19:38:03 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/09 19:38:03 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/09 19:38:03 CalculateScore.go:30: answerList [{0 10 } {0 8 } {0 5 } {0 3 } {0 9 } {0 7 } {0 2 } {0 1 } {0 6 } {0 4 }]
TRACE: 2017/05/09 19:38:03 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/09 19:38:03 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/09 19:38:03 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/09 19:38:03 questionimpl.go:98: executing query and fetching answers 
TRACE: 2017/05/09 19:38:04 questionimpl.go:105: dial tcp 127.0.0.1:3306: connectex: No connection could be made because the target machine actively refused it.
TRACE: 2017/05/09 19:38:59 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/05/09 19:38:59 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/05/09 19:38:59 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/05/09 19:38:59 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/05/09 19:38:59 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/05/09 19:38:59 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/05/09 19:38:59 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/05/09 19:38:59 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/05/09 19:38:59 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/05/09 19:38:59 debug.go:45: [GIN-debug] Listening and serving HTTP on :8084
TRACE: 2017/05/09 19:39:04 Login.go:14: entering webservice.Login()
TRACE: 2017/05/09 19:39:04 Login.go:19: calling manager.Login()
TRACE: 2017/05/09 19:39:04 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/09 19:39:04 Login.go:16: entering manager.login
TRACE: 2017/05/09 19:39:04 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/09 19:39:04 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/09 19:39:04 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/09 19:39:08 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/09 19:39:08 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/09 19:39:08 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/09 19:39:10 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/09 19:39:10 loginimpl.go:81: executing query.....
TRACE: 2017/05/09 19:39:12 loginimpl.go:93: {0xc0421f44d0 0xc0422c80c0}
TRACE: 2017/05/09 19:39:12 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/09 19:39:12 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/09 19:39:12 loginimpl.go:16: exntering in SaveToken() function {0 2 SPBAbPhuEgvmucTxKfrk 2017-05-09 19:39:08.3050031 +0530 IST}
TRACE: 2017/05/09 19:39:12 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/09 19:39:14 loginimpl.go:20: token inserted
TRACE: 2017/05/09 19:39:14 loginimpl.go:21: {0 2 SPBAbPhuEgvmucTxKfrk 2017-05-09 19:39:08.3050031 +0530 IST}
TRACE: 2017/05/09 19:39:15 loginimpl.go:33: {0xc0422ec1c0 0xc0422c8340}
TRACE: 2017/05/09 19:39:15 Login.go:48: {2 rakesh SPBAbPhuEgvmucTxKfrk user}
TRACE: 2017/05/09 19:39:26 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/09 19:39:26 QuestionList.go:18: fundamental
TRACE: 2017/05/09 19:39:26 QuestionList.go:19: SPBAbPhuEgvmucTxKfrk
TRACE: 2017/05/09 19:39:26 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/09 19:39:26 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/09 19:39:26 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/09 19:39:26 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/09 19:39:28 authenticatetokenimpl.go:47: SPBAbPhuEgvmucTxKfrk
TRACE: 2017/05/09 19:39:28 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/09 19:39:28 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/09 19:39:29 authenticatetokenimpl.go:51: SPBAbPhuEgvmucTxKfrk
TRACE: 2017/05/09 19:39:29 authenticatetokenimpl.go:59: Type is SPBAbPhuEgvmucTxKfrk
TRACE: 2017/05/09 19:39:29 aunthenticate.go:42: 2017-05-09 19:39:29
TRACE: 2017/05/09 19:39:29 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/09 19:39:31 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/09 19:39:31 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/09 19:39:33 authenticatetokenimpl.go:30: {0xc0421f4a80 0xc0421e6440}
TRACE: 2017/05/09 19:39:33 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/09 19:39:33 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/09 19:39:33 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/09 19:39:33 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/09 19:39:33 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/09 19:39:33 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/09 19:39:33 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/09 19:39:35 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0423500c0 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/09 19:39:37 questionimpl.go:30: &{0xc0421a3180 0x718e40 0xc0421b9520 false [] <nil> 0xc042125fb0}
TRACE: 2017/05/09 19:39:41 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/09 19:39:41 AnswerList.go:23: [{0 7 } {0 3 } {0 5 } {0 1 } {0 8 } {0 10 } {0 9 } {0 4 } {0 6 } {0 2 }]
TRACE: 2017/05/09 19:39:41 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/09 19:39:41 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/09 19:39:41 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/09 19:39:41 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/09 19:39:41 CalculateScore.go:30: answerList [{0 7 } {0 3 } {0 5 } {0 1 } {0 8 } {0 10 } {0 9 } {0 4 } {0 6 } {0 2 }]
TRACE: 2017/05/09 19:39:41 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/09 19:39:41 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/09 19:39:41 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/09 19:39:41 questionimpl.go:98: executing query and fetching answers 
TRACE: 2017/05/09 19:39:42 questionimpl.go:105: dial tcp 127.0.0.1:3306: connectex: No connection could be made because the target machine actively refused it.
TRACE: 2017/05/09 19:44:52 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/05/09 19:44:52 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/05/09 19:44:52 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/05/09 19:44:52 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/05/09 19:44:52 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/05/09 19:44:52 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/05/09 19:44:52 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/05/09 19:44:52 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/05/09 19:44:52 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/05/09 19:44:52 debug.go:45: [GIN-debug] Listening and serving HTTP on :8084
TRACE: 2017/05/09 19:44:55 Login.go:14: entering webservice.Login()
TRACE: 2017/05/09 19:44:55 Login.go:19: calling manager.Login()
TRACE: 2017/05/09 19:44:55 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/09 19:44:55 Login.go:16: entering manager.login
TRACE: 2017/05/09 19:44:55 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/09 19:44:55 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/09 19:44:55 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/09 19:44:59 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/09 19:44:59 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/09 19:44:59 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/09 19:45:01 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/09 19:45:01 loginimpl.go:81: executing query.....
TRACE: 2017/05/09 19:45:03 loginimpl.go:93: {0xc042032070 0xc0421e0c00}
TRACE: 2017/05/09 19:45:03 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/09 19:45:03 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/09 19:45:03 loginimpl.go:16: exntering in SaveToken() function {0 2 IpsyPijqlSowbdrQTggx 2017-05-09 19:44:59.6960192 +0530 IST}
TRACE: 2017/05/09 19:45:03 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/09 19:45:05 loginimpl.go:20: token inserted
TRACE: 2017/05/09 19:45:05 loginimpl.go:21: {0 2 IpsyPijqlSowbdrQTggx 2017-05-09 19:44:59.6960192 +0530 IST}
TRACE: 2017/05/09 19:45:07 loginimpl.go:33: {0xc0422be1c0 0xc0422985c0}
TRACE: 2017/05/09 19:45:07 Login.go:48: {2 rakesh IpsyPijqlSowbdrQTggx user}
TRACE: 2017/05/09 19:45:17 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/09 19:45:17 QuestionList.go:18: java
TRACE: 2017/05/09 19:45:17 QuestionList.go:19: IpsyPijqlSowbdrQTggx
TRACE: 2017/05/09 19:45:17 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/09 19:45:17 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/09 19:45:17 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/09 19:45:17 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/09 19:45:19 authenticatetokenimpl.go:47: IpsyPijqlSowbdrQTggx
TRACE: 2017/05/09 19:45:19 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/09 19:45:19 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/09 19:45:21 authenticatetokenimpl.go:51: IpsyPijqlSowbdrQTggx
TRACE: 2017/05/09 19:45:21 authenticatetokenimpl.go:59: Type is IpsyPijqlSowbdrQTggx
TRACE: 2017/05/09 19:45:21 aunthenticate.go:42: 2017-05-09 19:45:21
TRACE: 2017/05/09 19:45:21 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/09 19:45:23 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/09 19:45:23 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/09 19:45:24 authenticatetokenimpl.go:30: {0xc0422be620 0xc0422991d0}
TRACE: 2017/05/09 19:45:24 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/09 19:45:24 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/09 19:45:24 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/09 19:45:24 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/09 19:45:24 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/09 19:45:24 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/09 19:45:24 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/09 19:45:27 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc042342420 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/09 19:45:29 questionimpl.go:30: &{0xc0422bea10 0x718e40 0xc042340800 false [] <nil> 0xc04229f6b0}
TRACE: 2017/05/09 19:45:36 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/09 19:45:36 AnswerList.go:23: [{0 23 } {0 35 } {0 16 } {0 22 } {0 27 } {0 33 } {0 24 } {0 29 } {0 30 } {0 13 } {0 18 } {0 19 } {0 17 } {0 26 } {0 11 } {0 15 } {0 14 } {0 25 } {0 20 } {0 21 } {0 28 } {0 12 } {0 34 } {0 32 } {0 31 }]
TRACE: 2017/05/09 19:45:36 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/09 19:45:36 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/09 19:45:36 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/09 19:45:36 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/09 19:45:36 CalculateScore.go:30: answerList [{0 23 } {0 35 } {0 16 } {0 22 } {0 27 } {0 33 } {0 24 } {0 29 } {0 30 } {0 13 } {0 18 } {0 19 } {0 17 } {0 26 } {0 11 } {0 15 } {0 14 } {0 25 } {0 20 } {0 21 } {0 28 } {0 12 } {0 34 } {0 32 } {0 31 }]
TRACE: 2017/05/09 19:45:36 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/09 19:45:36 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/09 19:45:36 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/09 19:45:36 questionimpl.go:98: executing query and fetching answers 
TRACE: 2017/05/09 19:45:37 questionimpl.go:105: dial tcp 127.0.0.1:3306: connectex: No connection could be made because the target machine actively refused it.
TRACE: 2017/05/09 19:50:28 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/05/09 19:50:28 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/05/09 19:50:28 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/05/09 19:50:28 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/05/09 19:50:28 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/05/09 19:50:28 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/05/09 19:50:28 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/05/09 19:50:28 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/05/09 19:50:28 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/05/09 19:50:28 debug.go:45: [GIN-debug] Listening and serving HTTP on :8084
TRACE: 2017/05/09 19:50:41 Login.go:14: entering webservice.Login()
TRACE: 2017/05/09 19:50:41 Login.go:19: calling manager.Login()
TRACE: 2017/05/09 19:50:41 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/09 19:50:41 Login.go:16: entering manager.login
TRACE: 2017/05/09 19:50:41 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/09 19:50:41 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/09 19:50:41 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/09 19:50:45 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/09 19:50:45 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/09 19:50:45 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/09 19:50:47 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/09 19:50:47 loginimpl.go:81: executing query.....
TRACE: 2017/05/09 19:50:49 loginimpl.go:93: {0xc0422122a0 0xc0421ea590}
TRACE: 2017/05/09 19:50:49 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/09 19:50:49 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/09 19:50:49 loginimpl.go:16: exntering in SaveToken() function {0 2 YODHgBzMxaGAuGcCXggM 2017-05-09 19:50:45.3541275 +0530 IST}
TRACE: 2017/05/09 19:50:49 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/09 19:50:51 loginimpl.go:20: token inserted
TRACE: 2017/05/09 19:50:51 loginimpl.go:21: {0 2 YODHgBzMxaGAuGcCXggM 2017-05-09 19:50:45.3541275 +0530 IST}
TRACE: 2017/05/09 19:50:52 loginimpl.go:33: {0xc0421becb0 0xc0422b0280}
TRACE: 2017/05/09 19:50:52 Login.go:48: {2 rakesh YODHgBzMxaGAuGcCXggM user}
TRACE: 2017/05/09 19:51:01 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/09 19:51:01 QuestionList.go:18: fundamental
TRACE: 2017/05/09 19:51:01 QuestionList.go:19: YODHgBzMxaGAuGcCXggM
TRACE: 2017/05/09 19:51:01 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/09 19:51:01 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/09 19:51:01 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/09 19:51:01 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/09 19:51:03 authenticatetokenimpl.go:47: YODHgBzMxaGAuGcCXggM
TRACE: 2017/05/09 19:51:03 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/09 19:51:03 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/09 19:51:05 authenticatetokenimpl.go:51: YODHgBzMxaGAuGcCXggM
TRACE: 2017/05/09 19:51:05 authenticatetokenimpl.go:59: Type is YODHgBzMxaGAuGcCXggM
TRACE: 2017/05/09 19:51:05 aunthenticate.go:42: 2017-05-09 19:51:05
TRACE: 2017/05/09 19:51:05 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/09 19:51:07 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/09 19:51:07 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/09 19:51:08 authenticatetokenimpl.go:30: {0xc0422d05b0 0xc0422bac30}
TRACE: 2017/05/09 19:51:08 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/09 19:51:08 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/09 19:51:08 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/09 19:51:08 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/09 19:51:08 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/09 19:51:08 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/09 19:51:08 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/09 19:51:10 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0421f56e0 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/09 19:51:12 questionimpl.go:30: &{0xc042032460 0x718e40 0xc04235e040 false [] <nil> 0xc0420068a0}
TRACE: 2017/05/09 19:51:17 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/09 19:51:17 AnswerList.go:23: [{0 5 } {0 9 } {0 1 } {0 2 } {0 10 } {0 8 } {0 4 } {0 3 } {0 6 } {0 7 }]
TRACE: 2017/05/09 19:51:17 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/09 19:51:17 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/09 19:51:17 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/09 19:51:17 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/09 19:51:17 CalculateScore.go:30: answerList [{0 5 } {0 9 } {0 1 } {0 2 } {0 10 } {0 8 } {0 4 } {0 3 } {0 6 } {0 7 }]
TRACE: 2017/05/09 19:51:17 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/09 19:51:17 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/09 19:51:17 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/09 19:51:17 questionimpl.go:98: executing query and fetching answers 
TRACE: 2017/05/09 19:51:18 questionimpl.go:105: dial tcp 127.0.0.1:3306: connectex: No connection could be made because the target machine actively refused it.
TRACE: 2017/05/09 19:58:30 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/05/09 19:58:30 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/05/09 19:58:30 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/05/09 19:58:30 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/05/09 19:58:30 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/05/09 19:58:30 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/05/09 19:58:30 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/05/09 19:58:30 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/05/09 19:58:30 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/05/09 19:58:30 debug.go:45: [GIN-debug] Listening and serving HTTP on :8084
TRACE: 2017/05/09 19:58:31 Login.go:14: entering webservice.Login()
TRACE: 2017/05/09 19:58:31 Login.go:19: calling manager.Login()
TRACE: 2017/05/09 19:58:31 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/09 19:58:31 Login.go:16: entering manager.login
TRACE: 2017/05/09 19:58:31 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/09 19:58:31 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/09 19:58:31 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/09 19:58:36 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/09 19:58:36 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/09 19:58:36 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/09 19:58:38 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/09 19:58:38 loginimpl.go:81: executing query.....
TRACE: 2017/05/09 19:58:40 loginimpl.go:93: {0xc042294540 0xc042290950}
TRACE: 2017/05/09 19:58:40 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/09 19:58:40 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/09 19:58:40 loginimpl.go:16: exntering in SaveToken() function {0 2 LaQKJqSoGunKeNwIOApg 2017-05-09 19:58:36.2270247 +0530 IST}
TRACE: 2017/05/09 19:58:40 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/09 19:58:43 loginimpl.go:20: token inserted
TRACE: 2017/05/09 19:58:43 loginimpl.go:21: {0 2 LaQKJqSoGunKeNwIOApg 2017-05-09 19:58:36.2270247 +0530 IST}
TRACE: 2017/05/09 19:58:45 loginimpl.go:33: {0xc042032070 0xc042004210}
TRACE: 2017/05/09 19:58:45 Login.go:48: {2 rakesh LaQKJqSoGunKeNwIOApg user}
TRACE: 2017/05/09 19:58:53 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/09 19:58:53 QuestionList.go:18: fundamental
TRACE: 2017/05/09 19:58:53 QuestionList.go:19: LaQKJqSoGunKeNwIOApg
TRACE: 2017/05/09 19:58:53 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/09 19:58:53 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/09 19:58:53 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/09 19:58:53 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/09 19:58:55 authenticatetokenimpl.go:47: LaQKJqSoGunKeNwIOApg
TRACE: 2017/05/09 19:58:55 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/09 19:58:55 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/09 19:58:57 authenticatetokenimpl.go:51: LaQKJqSoGunKeNwIOApg
TRACE: 2017/05/09 19:58:57 authenticatetokenimpl.go:59: Type is LaQKJqSoGunKeNwIOApg
TRACE: 2017/05/09 19:58:57 aunthenticate.go:42: 2017-05-09 19:58:57
TRACE: 2017/05/09 19:58:57 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/09 19:59:00 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/09 19:59:00 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/09 19:59:02 authenticatetokenimpl.go:30: {0xc042294e00 0xc0422919c0}
TRACE: 2017/05/09 19:59:02 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/09 19:59:02 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/09 19:59:02 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/09 19:59:02 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/09 19:59:02 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/09 19:59:02 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/09 19:59:02 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/09 19:59:04 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0422ac1e0 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/09 19:59:06 questionimpl.go:30: &{0xc0422951f0 0x718e40 0xc0422a81e0 false [] <nil> 0xc0422998f0}
TRACE: 2017/05/09 19:59:09 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/09 19:59:09 AnswerList.go:23: [{0 2 } {0 7 } {0 10 } {0 6 } {0 4 } {0 3 } {0 8 } {0 5 } {0 1 } {0 9 }]
TRACE: 2017/05/09 19:59:09 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/09 19:59:09 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/09 19:59:09 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/09 19:59:09 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/09 19:59:09 CalculateScore.go:30: answerList [{0 2 } {0 7 } {0 10 } {0 6 } {0 4 } {0 3 } {0 8 } {0 5 } {0 1 } {0 9 }]
TRACE: 2017/05/09 19:59:09 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/09 19:59:09 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/09 19:59:09 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/09 19:59:09 questionimpl.go:98: executing query and fetching answers 
TRACE: 2017/05/09 19:59:10 questionimpl.go:105: dial tcp 127.0.0.1:3306: connectex: No connection could be made because the target machine actively refused it.
TRACE: 2017/05/09 20:02:29 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/05/09 20:02:29 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/05/09 20:02:29 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/05/09 20:02:29 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/05/09 20:02:29 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/05/09 20:02:29 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/05/09 20:02:29 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/05/09 20:02:29 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/05/09 20:02:29 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/05/09 20:02:29 debug.go:45: [GIN-debug] Listening and serving HTTP on :8084
TRACE: 2017/05/09 20:02:29 Login.go:14: entering webservice.Login()
TRACE: 2017/05/09 20:02:29 Login.go:19: calling manager.Login()
TRACE: 2017/05/09 20:02:29 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/09 20:02:29 Login.go:16: entering manager.login
TRACE: 2017/05/09 20:02:29 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/09 20:02:29 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/09 20:02:29 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/09 20:02:33 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/09 20:02:33 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/09 20:02:33 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/09 20:02:36 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/09 20:02:36 loginimpl.go:81: executing query.....
TRACE: 2017/05/09 20:02:38 loginimpl.go:93: {0xc0422d84d0 0xc0422c8990}
TRACE: 2017/05/09 20:02:38 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/09 20:02:38 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/09 20:02:38 loginimpl.go:16: exntering in SaveToken() function {0 2 BgpphGmOVHtiEkwazXSh 2017-05-09 20:02:33.7710473 +0530 IST}
TRACE: 2017/05/09 20:02:38 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/09 20:02:40 loginimpl.go:20: token inserted
TRACE: 2017/05/09 20:02:40 loginimpl.go:21: {0 2 BgpphGmOVHtiEkwazXSh 2017-05-09 20:02:33.7710473 +0530 IST}
TRACE: 2017/05/09 20:02:54 Login.go:14: entering webservice.Login()
TRACE: 2017/05/09 20:02:54 Login.go:19: calling manager.Login()
TRACE: 2017/05/09 20:02:54 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/09 20:02:54 Login.go:16: entering manager.login
TRACE: 2017/05/09 20:02:54 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/09 20:02:54 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/09 20:02:54 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/09 20:03:12 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/05/09 20:03:12 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/05/09 20:03:12 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/05/09 20:03:12 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/05/09 20:03:12 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/05/09 20:03:12 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/05/09 20:03:12 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/05/09 20:03:12 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/05/09 20:03:12 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/05/09 20:03:12 debug.go:45: [GIN-debug] Listening and serving HTTP on :8084
TRACE: 2017/05/09 20:06:17 Login.go:14: entering webservice.Login()
TRACE: 2017/05/09 20:06:17 Login.go:19: calling manager.Login()
TRACE: 2017/05/09 20:06:17 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/09 20:06:17 Login.go:16: entering manager.login
TRACE: 2017/05/09 20:06:17 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/09 20:06:17 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/09 20:06:17 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/09 20:06:22 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/09 20:06:22 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/09 20:06:22 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/09 20:06:24 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/09 20:06:24 loginimpl.go:81: executing query.....
TRACE: 2017/05/09 20:06:26 loginimpl.go:93: {0xc0422cc0e0 0xc0422b4490}
TRACE: 2017/05/09 20:06:26 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/09 20:06:26 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/09 20:06:26 loginimpl.go:16: exntering in SaveToken() function {0 2 QbyjVvrpTQMAYgMsKyvA 2017-05-09 20:06:22.0635219 +0530 IST}
TRACE: 2017/05/09 20:06:26 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/09 20:06:28 loginimpl.go:20: token inserted
TRACE: 2017/05/09 20:06:28 loginimpl.go:21: {0 2 QbyjVvrpTQMAYgMsKyvA 2017-05-09 20:06:22.0635219 +0530 IST}
TRACE: 2017/05/09 20:06:30 loginimpl.go:33: {0xc0421bf110 0xc0422b0630}
TRACE: 2017/05/09 20:06:30 Login.go:48: {2 rakesh QbyjVvrpTQMAYgMsKyvA user}
TRACE: 2017/05/09 20:06:38 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/09 20:06:38 QuestionList.go:18: fundamental
TRACE: 2017/05/09 20:06:38 QuestionList.go:19: QbyjVvrpTQMAYgMsKyvA
TRACE: 2017/05/09 20:06:38 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/09 20:06:38 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/09 20:06:38 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/09 20:06:38 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/09 20:06:40 authenticatetokenimpl.go:47: QbyjVvrpTQMAYgMsKyvA
TRACE: 2017/05/09 20:06:40 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/09 20:06:40 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/09 20:06:42 authenticatetokenimpl.go:51: QbyjVvrpTQMAYgMsKyvA
TRACE: 2017/05/09 20:06:42 authenticatetokenimpl.go:59: Type is QbyjVvrpTQMAYgMsKyvA
TRACE: 2017/05/09 20:06:42 aunthenticate.go:42: 2017-05-09 20:06:42
TRACE: 2017/05/09 20:06:42 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/09 20:06:44 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/09 20:06:44 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/09 20:06:46 authenticatetokenimpl.go:30: {0xc042032930 0xc0422b0ef0}
TRACE: 2017/05/09 20:06:46 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/09 20:06:46 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/09 20:06:46 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/09 20:06:46 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/09 20:06:46 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/09 20:06:46 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/09 20:06:46 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/09 20:06:48 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc042327da0 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/09 20:06:49 questionimpl.go:30: &{0xc042032a80 0x718e40 0xc04234a680 false [] <nil> 0xc042007380}
TRACE: 2017/05/09 20:06:53 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/09 20:06:53 AnswerList.go:23: [{0 6 } {0 5 } {0 2 } {0 1 } {0 7 } {0 8 } {0 10 } {0 3 } {0 4 } {0 9 }]
TRACE: 2017/05/09 20:06:53 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/09 20:06:53 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/09 20:06:53 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/09 20:06:53 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/09 20:06:53 CalculateScore.go:30: answerList [{0 6 } {0 5 } {0 2 } {0 1 } {0 7 } {0 8 } {0 10 } {0 3 } {0 4 } {0 9 }]
TRACE: 2017/05/09 20:06:53 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/09 20:06:53 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/09 20:06:53 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/09 20:06:53 questionimpl.go:98: executing query and fetching answers 
TRACE: 2017/05/09 20:06:54 questionimpl.go:105: dial tcp 127.0.0.1:3306: connectex: No connection could be made because the target machine actively refused it.
TRACE: 2017/05/09 20:08:47 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/05/09 20:08:47 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/05/09 20:08:47 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/05/09 20:08:47 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/05/09 20:08:47 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/05/09 20:08:47 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/05/09 20:08:47 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/05/09 20:08:47 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/05/09 20:08:47 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/05/09 20:08:47 debug.go:45: [GIN-debug] Listening and serving HTTP on :8084
TRACE: 2017/05/09 20:09:00 Login.go:14: entering webservice.Login()
TRACE: 2017/05/09 20:09:00 Login.go:19: calling manager.Login()
TRACE: 2017/05/09 20:09:00 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/09 20:09:00 Login.go:16: entering manager.login
TRACE: 2017/05/09 20:09:00 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/09 20:09:00 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/09 20:09:00 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/09 20:09:04 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/09 20:09:04 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/09 20:09:04 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/09 20:09:06 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/09 20:09:06 loginimpl.go:81: executing query.....
TRACE: 2017/05/09 20:09:08 loginimpl.go:93: {0xc0422cc0e0 0xc0422bc3e0}
TRACE: 2017/05/09 20:09:08 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/09 20:09:08 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/09 20:09:08 loginimpl.go:16: exntering in SaveToken() function {0 2 swLrduCRiVyEUePKCEvM 2017-05-09 20:09:04.4090238 +0530 IST}
TRACE: 2017/05/09 20:09:08 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/09 20:09:10 loginimpl.go:20: token inserted
TRACE: 2017/05/09 20:09:10 loginimpl.go:21: {0 2 swLrduCRiVyEUePKCEvM 2017-05-09 20:09:04.4090238 +0530 IST}
TRACE: 2017/05/09 20:09:12 loginimpl.go:33: {0xc0421bf180 0xc0422bc8f0}
TRACE: 2017/05/09 20:09:12 Login.go:48: {2 rakesh swLrduCRiVyEUePKCEvM user}
TRACE: 2017/05/09 20:15:42 Login.go:14: entering webservice.Login()
TRACE: 2017/05/09 20:15:42 Login.go:19: calling manager.Login()
TRACE: 2017/05/09 20:15:42 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/09 20:15:42 Login.go:16: entering manager.login
TRACE: 2017/05/09 20:15:42 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/09 20:15:42 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/09 20:15:42 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/09 20:15:46 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/09 20:15:46 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/09 20:15:46 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/09 20:15:48 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/09 20:15:48 loginimpl.go:81: executing query.....
TRACE: 2017/05/09 20:15:50 loginimpl.go:93: {0xc042032b60 0xc0422a6780}
TRACE: 2017/05/09 20:15:50 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/09 20:15:50 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/09 20:15:50 loginimpl.go:16: exntering in SaveToken() function {0 2 fjEfmJjpAYMUvpBqArca 2017-05-09 20:15:46.7439753 +0530 IST}
TRACE: 2017/05/09 20:15:50 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/09 20:15:52 loginimpl.go:20: token inserted
TRACE: 2017/05/09 20:15:52 loginimpl.go:21: {0 2 fjEfmJjpAYMUvpBqArca 2017-05-09 20:15:46.7439753 +0530 IST}
TRACE: 2017/05/09 20:15:54 loginimpl.go:33: {0xc0421bf3b0 0xc0422bd260}
TRACE: 2017/05/09 20:15:54 Login.go:48: {2 rakesh fjEfmJjpAYMUvpBqArca user}
TRACE: 2017/05/09 20:16:05 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/09 20:16:05 QuestionList.go:18: java
TRACE: 2017/05/09 20:16:05 QuestionList.go:19: fjEfmJjpAYMUvpBqArca
TRACE: 2017/05/09 20:16:05 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/09 20:16:05 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/09 20:16:05 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/09 20:16:05 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/09 20:16:07 authenticatetokenimpl.go:47: fjEfmJjpAYMUvpBqArca
TRACE: 2017/05/09 20:16:07 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/09 20:16:07 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/09 20:16:08 authenticatetokenimpl.go:51: fjEfmJjpAYMUvpBqArca
TRACE: 2017/05/09 20:16:08 authenticatetokenimpl.go:59: Type is fjEfmJjpAYMUvpBqArca
TRACE: 2017/05/09 20:16:08 aunthenticate.go:42: 2017-05-09 20:16:08
TRACE: 2017/05/09 20:16:08 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/09 20:16:10 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/09 20:16:10 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/09 20:16:12 authenticatetokenimpl.go:30: {0xc0421bfb20 0xc0423905f0}
TRACE: 2017/05/09 20:16:12 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/09 20:16:12 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/09 20:16:12 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/09 20:16:12 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/09 20:16:12 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/09 20:16:12 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/09 20:16:12 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/09 20:16:14 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc04231d6e0 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/09 20:16:16 questionimpl.go:30: &{0xc042033030 0x718e40 0xc0422a97c0 false [] <nil> 0xc042007b90}
TRACE: 2017/05/09 20:16:25 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/09 20:16:25 AnswerList.go:23: [{0 31 } {0 34 } {0 30 } {0 21 } {0 17 } {0 27 } {0 23 } {0 14 } {0 28 } {0 16 } {0 11 } {0 13 } {0 32 } {0 18 } {0 26 } {0 29 } {0 35 } {0 20 } {0 19 } {0 25 } {0 22 } {0 12 } {0 24 } {0 33 } {0 15 }]
TRACE: 2017/05/09 20:16:25 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/09 20:16:25 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/09 20:16:25 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/09 20:16:25 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/09 20:16:25 CalculateScore.go:30: answerList [{0 31 } {0 34 } {0 30 } {0 21 } {0 17 } {0 27 } {0 23 } {0 14 } {0 28 } {0 16 } {0 11 } {0 13 } {0 32 } {0 18 } {0 26 } {0 29 } {0 35 } {0 20 } {0 19 } {0 25 } {0 22 } {0 12 } {0 24 } {0 33 } {0 15 }]
TRACE: 2017/05/09 20:16:25 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/09 20:16:25 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/09 20:16:25 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/09 20:16:25 questionimpl.go:98: executing query and fetching answers 
TRACE: 2017/05/09 20:16:26 questionimpl.go:105: dial tcp 127.0.0.1:3306: connectex: No connection could be made because the target machine actively refused it.
TRACE: 2017/05/10 09:30:12 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/05/10 09:30:12 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/05/10 09:30:12 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/05/10 09:30:12 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/05/10 09:30:12 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/05/10 09:30:12 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/05/10 09:30:12 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/05/10 09:30:12 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/05/10 09:30:12 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/05/10 09:30:12 debug.go:45: [GIN-debug] Listening and serving HTTP on :8084
TRACE: 2017/05/10 09:30:21 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 09:30:21 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 09:30:21 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/10 09:30:21 Login.go:16: entering manager.login
TRACE: 2017/05/10 09:30:21 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 09:30:21 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 09:30:21 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 09:30:26 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/10 09:30:26 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/10 09:30:26 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/10 09:30:28 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/10 09:30:28 loginimpl.go:81: executing query.....
TRACE: 2017/05/10 09:30:31 loginimpl.go:93: {0xc0422be1c0 0xc0421f42c0}
TRACE: 2017/05/10 09:30:31 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/10 09:30:31 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/10 09:30:31 loginimpl.go:16: exntering in SaveToken() function {0 2 ColuHZfqLyFOtGzhvcYT 2017-05-10 09:30:26.2261047 +0530 IST}
TRACE: 2017/05/10 09:30:31 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/10 09:30:33 loginimpl.go:20: token inserted
TRACE: 2017/05/10 09:30:33 loginimpl.go:21: {0 2 ColuHZfqLyFOtGzhvcYT 2017-05-10 09:30:26.2261047 +0530 IST}
TRACE: 2017/05/10 09:30:35 loginimpl.go:33: {0xc0422ac540 0xc0422a8820}
TRACE: 2017/05/10 09:30:35 Login.go:48: {2 rakesh ColuHZfqLyFOtGzhvcYT user}
TRACE: 2017/05/10 09:30:47 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 09:30:47 QuestionList.go:18: java
TRACE: 2017/05/10 09:30:47 QuestionList.go:19: ColuHZfqLyFOtGzhvcYT
TRACE: 2017/05/10 09:30:47 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 09:30:47 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 09:30:47 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 09:30:47 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 09:30:51 authenticatetokenimpl.go:47: ColuHZfqLyFOtGzhvcYT
TRACE: 2017/05/10 09:30:51 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 09:30:51 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 09:30:53 authenticatetokenimpl.go:51: ColuHZfqLyFOtGzhvcYT
TRACE: 2017/05/10 09:30:53 authenticatetokenimpl.go:59: Type is ColuHZfqLyFOtGzhvcYT
TRACE: 2017/05/10 09:30:53 aunthenticate.go:42: 2017-05-10 09:30:53
TRACE: 2017/05/10 09:30:53 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 09:30:57 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 09:30:57 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 09:30:59 authenticatetokenimpl.go:30: {0xc0422be5b0 0xc0422a95c0}
TRACE: 2017/05/10 09:30:59 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 09:30:59 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 09:30:59 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 09:30:59 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 09:30:59 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 09:30:59 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 09:30:59 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 09:31:02 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc042358a20 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 09:31:06 questionimpl.go:30: &{0xc0422ace70 0x718e40 0xc04233d600 false [] <nil> 0xc0422d76e0}
TRACE: 2017/05/10 09:31:20 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/10 09:31:20 AnswerList.go:23: [{0 14 } {0 23 } {0 19 } {0 28 } {0 30 } {0 12 } {0 33 } {0 27 } {0 29 } {0 18 } {0 32 } {0 17 } {0 20 } {0 15 } {0 24 } {0 35 } {0 26 } {0 22 } {0 11 } {0 21 } {0 34 } {0 31 } {0 25 } {0 16 } {0 13 }]
TRACE: 2017/05/10 09:31:20 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/10 09:31:20 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/10 09:31:20 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/10 09:31:20 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/10 09:31:20 CalculateScore.go:30: answerList [{0 14 } {0 23 } {0 19 } {0 28 } {0 30 } {0 12 } {0 33 } {0 27 } {0 29 } {0 18 } {0 32 } {0 17 } {0 20 } {0 15 } {0 24 } {0 35 } {0 26 } {0 22 } {0 11 } {0 21 } {0 34 } {0 31 } {0 25 } {0 16 } {0 13 }]
TRACE: 2017/05/10 09:31:20 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 09:31:20 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 09:31:20 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 09:31:20 questionimpl.go:98: executing query and fetching answers 
TRACE: 2017/05/10 09:31:21 questionimpl.go:105: dial tcp 127.0.0.1:3306: connectex: No connection could be made because the target machine actively refused it.
TRACE: 2017/05/10 09:53:40 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/05/10 09:53:40 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/05/10 09:53:40 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/05/10 09:53:40 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/05/10 09:53:40 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/05/10 09:53:40 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/05/10 09:53:40 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/05/10 09:53:40 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/05/10 09:53:40 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/05/10 09:53:40 debug.go:45: [GIN-debug] Listening and serving HTTP on :8084
TRACE: 2017/05/10 09:53:40 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 09:53:40 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 09:53:40 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/10 09:53:40 Login.go:16: entering manager.login
TRACE: 2017/05/10 09:53:40 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 09:53:40 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 09:53:40 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 09:53:43 userimpl.go:95: EOF
TRACE: 2017/05/10 09:54:31 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/05/10 09:54:31 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/05/10 09:54:31 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/05/10 09:54:31 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/05/10 09:54:31 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/05/10 09:54:31 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/05/10 09:54:31 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/05/10 09:54:31 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/05/10 09:54:31 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/05/10 09:54:31 debug.go:45: [GIN-debug] Listening and serving HTTP on :8084
TRACE: 2017/05/10 09:54:41 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 09:54:41 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 09:54:41 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/10 09:54:41 Login.go:16: entering manager.login
TRACE: 2017/05/10 09:54:41 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 09:54:41 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 09:54:41 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 09:54:46 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/10 09:54:46 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/10 09:54:46 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/10 09:54:48 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/10 09:54:48 loginimpl.go:81: executing query.....
TRACE: 2017/05/10 09:54:50 loginimpl.go:93: {0xc0422a64d0 0xc0421e0560}
TRACE: 2017/05/10 09:54:50 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/10 09:54:50 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/10 09:54:50 loginimpl.go:16: exntering in SaveToken() function {0 2 sbFsRuMdHjIZciFZzdXq 2017-05-10 09:54:46.8009425 +0530 IST}
TRACE: 2017/05/10 09:54:50 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/10 09:54:52 loginimpl.go:20: token inserted
TRACE: 2017/05/10 09:54:52 loginimpl.go:21: {0 2 sbFsRuMdHjIZciFZzdXq 2017-05-10 09:54:46.8009425 +0530 IST}
TRACE: 2017/05/10 09:54:54 loginimpl.go:33: {0xc0422a67e0 0xc042292ff0}
TRACE: 2017/05/10 09:54:54 Login.go:48: {2 rakesh sbFsRuMdHjIZciFZzdXq user}
TRACE: 2017/05/10 09:55:03 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 09:55:03 QuestionList.go:18: fundamental
TRACE: 2017/05/10 09:55:03 QuestionList.go:19: sbFsRuMdHjIZciFZzdXq
TRACE: 2017/05/10 09:55:03 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 09:55:03 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 09:55:03 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 09:55:03 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 09:55:05 authenticatetokenimpl.go:47: sbFsRuMdHjIZciFZzdXq
TRACE: 2017/05/10 09:55:05 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 09:55:05 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 09:55:07 authenticatetokenimpl.go:51: sbFsRuMdHjIZciFZzdXq
TRACE: 2017/05/10 09:55:07 authenticatetokenimpl.go:59: Type is sbFsRuMdHjIZciFZzdXq
TRACE: 2017/05/10 09:55:07 aunthenticate.go:42: 2017-05-10 09:55:07
TRACE: 2017/05/10 09:55:07 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 09:55:09 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 09:55:09 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 09:55:11 authenticatetokenimpl.go:30: {0xc0422a6d90 0xc042312150}
TRACE: 2017/05/10 09:55:11 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 09:55:11 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 09:55:11 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 09:55:11 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 09:55:11 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 09:55:11 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 09:55:11 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 09:55:13 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc04227e960 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 09:55:15 questionimpl.go:30: &{0xc042336310 0x718e40 0xc04230af40 false [] <nil> 0xc04230c570}
TRACE: 2017/05/10 09:55:43 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/10 09:55:43 AnswerList.go:23: [{0 10 } {0 6 } {0 9 } {0 3 } {0 1 } {0 7 } {0 4 } {0 2 } {0 5 } {0 8 }]
TRACE: 2017/05/10 09:55:43 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/10 09:55:43 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/10 09:55:43 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/10 09:55:43 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/10 09:55:43 CalculateScore.go:30: answerList [{0 10 } {0 6 } {0 9 } {0 3 } {0 1 } {0 7 } {0 4 } {0 2 } {0 5 } {0 8 }]
TRACE: 2017/05/10 09:55:43 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 09:55:43 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 09:55:43 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 09:55:43 questionimpl.go:98: executing query and fetching answers 
TRACE: 2017/05/10 09:55:44 questionimpl.go:105: dial tcp 127.0.0.1:3306: connectex: No connection could be made because the target machine actively refused it.
TRACE: 2017/05/10 10:01:38 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/05/10 10:01:38 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/05/10 10:01:38 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/05/10 10:01:38 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/05/10 10:01:38 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/05/10 10:01:38 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/05/10 10:01:38 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/05/10 10:01:38 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/05/10 10:01:38 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/05/10 10:01:38 debug.go:45: [GIN-debug] Listening and serving HTTP on :8084
TRACE: 2017/05/10 10:01:42 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 10:01:42 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 10:01:42 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/10 10:01:42 Login.go:16: entering manager.login
TRACE: 2017/05/10 10:01:42 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 10:01:42 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 10:01:42 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 10:01:46 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/10 10:01:46 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/10 10:01:46 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/10 10:01:48 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/10 10:01:48 loginimpl.go:81: executing query.....
TRACE: 2017/05/10 10:01:50 loginimpl.go:93: {0xc042292620 0xc042004180}
TRACE: 2017/05/10 10:01:50 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/10 10:01:50 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/10 10:01:50 loginimpl.go:16: exntering in SaveToken() function {0 2 hAecJEJhVnitpumZEXBd 2017-05-10 10:01:46.7369255 +0530 IST}
TRACE: 2017/05/10 10:01:50 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/10 10:01:52 loginimpl.go:20: token inserted
TRACE: 2017/05/10 10:01:52 loginimpl.go:21: {0 2 hAecJEJhVnitpumZEXBd 2017-05-10 10:01:46.7369255 +0530 IST}
TRACE: 2017/05/10 10:01:54 loginimpl.go:33: {0xc042292690 0xc04228e850}
TRACE: 2017/05/10 10:01:54 Login.go:48: {2 rakesh hAecJEJhVnitpumZEXBd user}
TRACE: 2017/05/10 10:03:06 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 10:03:06 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 10:03:06 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/10 10:03:06 Login.go:16: entering manager.login
TRACE: 2017/05/10 10:03:06 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 10:03:06 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 10:03:06 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 10:03:11 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/10 10:03:11 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/10 10:03:11 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/10 10:03:13 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/10 10:03:13 loginimpl.go:81: executing query.....
TRACE: 2017/05/10 10:03:15 loginimpl.go:93: {0xc042316460 0xc042310710}
TRACE: 2017/05/10 10:03:15 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/10 10:03:15 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/10 10:03:15 loginimpl.go:16: exntering in SaveToken() function {0 2 gVRxboxsTMndhypzDAky 2017-05-10 10:03:11.0813864 +0530 IST}
TRACE: 2017/05/10 10:03:15 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/10 10:03:17 loginimpl.go:20: token inserted
TRACE: 2017/05/10 10:03:17 loginimpl.go:21: {0 2 gVRxboxsTMndhypzDAky 2017-05-10 10:03:11.0813864 +0530 IST}
TRACE: 2017/05/10 10:03:18 loginimpl.go:33: {0xc042292a80 0xc04228ef90}
TRACE: 2017/05/10 10:03:18 Login.go:48: {2 rakesh gVRxboxsTMndhypzDAky user}
TRACE: 2017/05/10 10:03:35 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 10:03:35 QuestionList.go:18: fundamental
TRACE: 2017/05/10 10:03:35 QuestionList.go:19: gVRxboxsTMndhypzDAky
TRACE: 2017/05/10 10:03:35 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 10:03:35 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 10:03:35 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 10:03:35 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 10:03:37 authenticatetokenimpl.go:47: gVRxboxsTMndhypzDAky
TRACE: 2017/05/10 10:03:37 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 10:03:37 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 10:03:39 authenticatetokenimpl.go:51: gVRxboxsTMndhypzDAky
TRACE: 2017/05/10 10:03:39 authenticatetokenimpl.go:59: Type is gVRxboxsTMndhypzDAky
TRACE: 2017/05/10 10:03:39 aunthenticate.go:42: 2017-05-10 10:03:39
TRACE: 2017/05/10 10:03:39 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 10:03:41 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 10:03:41 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 10:03:43 authenticatetokenimpl.go:30: {0xc0423169a0 0xc042310fa0}
TRACE: 2017/05/10 10:03:43 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 10:03:43 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 10:03:43 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 10:03:43 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 10:03:43 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 10:03:43 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 10:03:43 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 10:03:45 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0422e4f00 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 10:03:47 questionimpl.go:30: &{0xc042032690 0x718e40 0xc042009520 false [] <nil> 0xc042006b40}
TRACE: 2017/05/10 10:04:01 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/10 10:04:01 AnswerList.go:23: [{0 3 } {0 5 } {0 6 } {0 8 } {0 1 } {0 10 } {0 2 } {0 7 } {0 4 } {0 9 }]
TRACE: 2017/05/10 10:04:01 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/10 10:04:01 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/10 10:04:01 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/10 10:04:01 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/10 10:04:01 CalculateScore.go:30: answerList [{0 3 } {0 5 } {0 6 } {0 8 } {0 1 } {0 10 } {0 2 } {0 7 } {0 4 } {0 9 }]
TRACE: 2017/05/10 10:04:01 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 10:04:01 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 10:04:01 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 10:04:01 questionimpl.go:98: executing query and fetching answers 
TRACE: 2017/05/10 10:04:02 questionimpl.go:105: dial tcp 127.0.0.1:3306: connectex: No connection could be made because the target machine actively refused it.
TRACE: 2017/05/10 10:04:53 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/05/10 10:04:53 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/05/10 10:04:53 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/05/10 10:04:53 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/05/10 10:04:53 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/05/10 10:04:53 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/05/10 10:04:53 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/05/10 10:04:53 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/05/10 10:04:53 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/05/10 10:04:53 debug.go:45: [GIN-debug] Listening and serving HTTP on :8084
TRACE: 2017/05/10 10:04:56 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 10:04:56 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 10:04:56 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/10 10:04:56 Login.go:16: entering manager.login
TRACE: 2017/05/10 10:04:56 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 10:04:56 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 10:04:56 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 10:05:00 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/10 10:05:00 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/10 10:05:00 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/10 10:05:02 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/10 10:05:02 loginimpl.go:81: executing query.....
TRACE: 2017/05/10 10:05:03 loginimpl.go:93: {0xc0421e6310 0xc042004760}
TRACE: 2017/05/10 10:05:03 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/10 10:05:03 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/10 10:05:03 loginimpl.go:16: exntering in SaveToken() function {0 2 nIjlGZSzsjyKuENeSdpt 2017-05-10 10:05:00.1208255 +0530 IST}
TRACE: 2017/05/10 10:05:03 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/10 10:05:05 loginimpl.go:20: token inserted
TRACE: 2017/05/10 10:05:05 loginimpl.go:21: {0 2 nIjlGZSzsjyKuENeSdpt 2017-05-10 10:05:00.1208255 +0530 IST}
TRACE: 2017/05/10 10:05:07 loginimpl.go:33: {0xc0421bef50 0xc042004ca0}
TRACE: 2017/05/10 10:05:07 Login.go:48: {2 rakesh nIjlGZSzsjyKuENeSdpt user}
TRACE: 2017/05/10 10:05:17 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 10:05:17 QuestionList.go:18: fundamental
TRACE: 2017/05/10 10:05:17 QuestionList.go:19: nIjlGZSzsjyKuENeSdpt
TRACE: 2017/05/10 10:05:17 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 10:05:17 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 10:05:17 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 10:05:17 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 10:05:19 authenticatetokenimpl.go:47: nIjlGZSzsjyKuENeSdpt
TRACE: 2017/05/10 10:05:19 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 10:05:19 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 10:05:21 authenticatetokenimpl.go:51: nIjlGZSzsjyKuENeSdpt
TRACE: 2017/05/10 10:05:21 authenticatetokenimpl.go:59: Type is nIjlGZSzsjyKuENeSdpt
TRACE: 2017/05/10 10:05:21 aunthenticate.go:42: 2017-05-10 10:05:21
TRACE: 2017/05/10 10:05:21 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 10:05:23 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 10:05:23 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 10:05:24 authenticatetokenimpl.go:30: {0xc0421bf2d0 0xc042005210}
TRACE: 2017/05/10 10:05:24 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 10:05:24 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 10:05:24 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 10:05:24 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 10:05:24 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 10:05:24 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 10:05:24 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 10:05:26 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc042320300 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 10:05:28 questionimpl.go:30: &{0xc042032bd0 0x718e40 0xc0423070e0 false [] <nil> 0xc0420075f0}
TRACE: 2017/05/10 10:05:33 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/10 10:05:33 AnswerList.go:23: [{0 9 } {0 10 } {0 4 } {0 5 } {0 1 } {0 3 } {0 8 } {0 2 } {0 7 } {0 6 }]
TRACE: 2017/05/10 10:05:33 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/10 10:05:33 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/10 10:05:33 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/10 10:05:33 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/10 10:05:33 CalculateScore.go:30: answerList [{0 9 } {0 10 } {0 4 } {0 5 } {0 1 } {0 3 } {0 8 } {0 2 } {0 7 } {0 6 }]
TRACE: 2017/05/10 10:05:33 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 10:05:33 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 10:05:33 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 10:05:33 questionimpl.go:98: executing query and fetching answers 
TRACE: 2017/05/10 10:05:34 questionimpl.go:105: dial tcp 127.0.0.1:3306: connectex: No connection could be made because the target machine actively refused it.
TRACE: 2017/05/10 10:06:05 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/05/10 10:06:05 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/05/10 10:06:05 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/05/10 10:06:05 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/05/10 10:06:05 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/05/10 10:06:05 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/05/10 10:06:05 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/05/10 10:06:05 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/05/10 10:06:05 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/05/10 10:06:05 debug.go:45: [GIN-debug] Listening and serving HTTP on :8084
TRACE: 2017/05/10 10:12:45 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 10:12:45 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 10:12:45 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/10 10:12:45 Login.go:16: entering manager.login
TRACE: 2017/05/10 10:12:45 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 10:12:45 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 10:12:45 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 10:12:49 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/10 10:12:49 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/10 10:12:49 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/10 10:12:51 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/10 10:12:51 loginimpl.go:81: executing query.....
TRACE: 2017/05/10 10:12:53 loginimpl.go:93: {0xc0420322a0 0xc042004400}
TRACE: 2017/05/10 10:12:53 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/10 10:12:53 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/10 10:12:53 loginimpl.go:16: exntering in SaveToken() function {0 2 GTMFcbnluteGHStkjnYp 2017-05-10 10:12:49.6799003 +0530 IST}
TRACE: 2017/05/10 10:12:53 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/10 10:12:55 loginimpl.go:20: token inserted
TRACE: 2017/05/10 10:12:55 loginimpl.go:21: {0 2 GTMFcbnluteGHStkjnYp 2017-05-10 10:12:49.6799003 +0530 IST}
TRACE: 2017/05/10 10:12:57 loginimpl.go:33: {0xc042032690 0xc042004be0}
TRACE: 2017/05/10 10:12:57 Login.go:48: {2 rakesh GTMFcbnluteGHStkjnYp user}
TRACE: 2017/05/10 10:13:27 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 10:13:27 QuestionList.go:18: fundamental
TRACE: 2017/05/10 10:13:27 QuestionList.go:19: GTMFcbnluteGHStkjnYp
TRACE: 2017/05/10 10:13:27 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 10:13:27 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 10:13:27 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 10:13:27 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 10:13:29 authenticatetokenimpl.go:47: GTMFcbnluteGHStkjnYp
TRACE: 2017/05/10 10:13:29 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 10:13:29 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 10:13:30 authenticatetokenimpl.go:51: GTMFcbnluteGHStkjnYp
TRACE: 2017/05/10 10:13:30 authenticatetokenimpl.go:59: Type is GTMFcbnluteGHStkjnYp
TRACE: 2017/05/10 10:13:30 aunthenticate.go:42: 2017-05-10 10:13:30
TRACE: 2017/05/10 10:13:30 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 10:13:32 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 10:13:32 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 10:13:34 authenticatetokenimpl.go:30: {0xc0421c0e70 0xc0420057c0}
TRACE: 2017/05/10 10:13:34 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 10:13:34 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 10:13:34 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 10:13:34 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 10:13:34 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 10:13:34 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 10:13:34 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 10:13:36 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0423607e0 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 10:13:39 questionimpl.go:30: &{0xc04228c4d0 0x718e40 0xc0422a0fe0 false [] <nil> 0xc04228e780}
TRACE: 2017/05/10 10:14:01 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/10 10:14:01 AnswerList.go:23: [{0 2 } {0 6 } {0 5 } {0 3 } {0 1 } {0 10 } {0 9 } {0 4 } {0 8 } {0 7 }]
TRACE: 2017/05/10 10:14:01 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/10 10:14:01 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/10 10:14:01 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/10 10:14:01 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/10 10:14:01 CalculateScore.go:30: answerList [{0 2 } {0 6 } {0 5 } {0 3 } {0 1 } {0 10 } {0 9 } {0 4 } {0 8 } {0 7 }]
TRACE: 2017/05/10 10:14:01 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 10:14:01 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 10:14:01 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 10:14:01 questionimpl.go:98: executing query and fetching answers 
TRACE: 2017/05/10 10:14:02 questionimpl.go:105: dial tcp 127.0.0.1:3306: connectex: No connection could be made because the target machine actively refused it.
TRACE: 2017/05/10 10:14:22 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/05/10 10:14:22 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/05/10 10:14:22 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/05/10 10:14:22 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/05/10 10:14:22 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/05/10 10:14:22 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/05/10 10:14:22 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/05/10 10:14:22 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/05/10 10:14:22 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/05/10 10:14:22 debug.go:45: [GIN-debug] Listening and serving HTTP on :8084
TRACE: 2017/05/10 10:14:29 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 10:14:29 QuestionList.go:18: language
TRACE: 2017/05/10 10:14:29 QuestionList.go:19: GTMFcbnluteGHStkjnYp
TRACE: 2017/05/10 10:14:29 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 10:14:29 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 10:14:29 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 10:14:29 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 10:14:31 authenticatetokenimpl.go:47: GTMFcbnluteGHStkjnYp
TRACE: 2017/05/10 10:14:31 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 10:14:31 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 10:14:33 authenticatetokenimpl.go:51: GTMFcbnluteGHStkjnYp
TRACE: 2017/05/10 10:14:33 authenticatetokenimpl.go:59: Type is GTMFcbnluteGHStkjnYp
TRACE: 2017/05/10 10:14:33 aunthenticate.go:42: 2017-05-10 10:14:33
TRACE: 2017/05/10 10:14:33 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 10:14:35 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 10:14:35 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 10:14:37 authenticatetokenimpl.go:30: {0xc042032150 0xc04229c380}
TRACE: 2017/05/10 10:14:37 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 10:14:37 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 10:14:37 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 10:14:37 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 10:14:37 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 10:14:37 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 10:14:37 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 10:14:39 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0422a6840 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 10:14:40 questionimpl.go:30: &{0xc042032380 0x718e40 0xc0422901c0 false [] <nil> 0xc0420066c0}
TRACE: 2017/05/10 10:15:11 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 10:15:11 QuestionList.go:18: fundamental
TRACE: 2017/05/10 10:15:11 QuestionList.go:19: GTMFcbnluteGHStkjnYp
TRACE: 2017/05/10 10:15:11 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 10:15:11 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 10:15:11 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 10:15:11 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 10:15:13 authenticatetokenimpl.go:47: GTMFcbnluteGHStkjnYp
TRACE: 2017/05/10 10:15:13 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 10:15:13 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 10:15:15 authenticatetokenimpl.go:51: GTMFcbnluteGHStkjnYp
TRACE: 2017/05/10 10:15:15 authenticatetokenimpl.go:59: Type is GTMFcbnluteGHStkjnYp
TRACE: 2017/05/10 10:15:15 aunthenticate.go:42: 2017-05-10 10:15:15
TRACE: 2017/05/10 10:15:15 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 10:15:17 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 10:15:17 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 10:15:19 authenticatetokenimpl.go:30: {0xc042292460 0xc04228efb0}
TRACE: 2017/05/10 10:15:19 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 10:15:19 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 10:15:19 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 10:15:19 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 10:15:19 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 10:15:19 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 10:15:19 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 10:15:21 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0422c7380 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 10:15:24 questionimpl.go:30: &{0xc0420328c0 0x718e40 0xc04234aac0 false [] <nil> 0xc042006ed0}
TRACE: 2017/05/10 10:15:38 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 10:15:38 QuestionList.go:18: java
TRACE: 2017/05/10 10:15:38 QuestionList.go:19: GTMFcbnluteGHStkjnYp
TRACE: 2017/05/10 10:15:38 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 10:15:38 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 10:15:38 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 10:15:38 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 10:15:40 authenticatetokenimpl.go:47: GTMFcbnluteGHStkjnYp
TRACE: 2017/05/10 10:15:40 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 10:15:40 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 10:15:42 authenticatetokenimpl.go:51: GTMFcbnluteGHStkjnYp
TRACE: 2017/05/10 10:15:42 authenticatetokenimpl.go:59: Type is GTMFcbnluteGHStkjnYp
TRACE: 2017/05/10 10:15:42 aunthenticate.go:42: 2017-05-10 10:15:42
TRACE: 2017/05/10 10:15:42 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 10:15:44 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 10:15:44 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 10:15:46 authenticatetokenimpl.go:30: {0xc0421bf5e0 0xc0421e34c0}
TRACE: 2017/05/10 10:15:46 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 10:15:46 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 10:15:46 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 10:15:46 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 10:15:46 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 10:15:46 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 10:15:46 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 10:15:48 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc042377380 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 10:15:52 questionimpl.go:30: &{0xc0421bf9d0 0x718e40 0xc0423a4400 false [] <nil> 0xc042384840}
TRACE: 2017/05/10 10:20:47 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 10:20:47 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 10:20:47 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/10 10:20:47 Login.go:16: entering manager.login
TRACE: 2017/05/10 10:20:47 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 10:20:47 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 10:20:47 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 10:20:51 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/10 10:20:51 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/10 10:20:51 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/10 10:20:53 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/10 10:20:53 loginimpl.go:81: executing query.....
TRACE: 2017/05/10 10:20:55 loginimpl.go:93: {0xc042292770 0xc04228f770}
TRACE: 2017/05/10 10:20:55 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/10 10:20:55 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/10 10:20:55 loginimpl.go:16: exntering in SaveToken() function {0 2 xXrAMcIMJsVHxTBOJfYa 2017-05-10 10:20:51.7457036 +0530 IST}
TRACE: 2017/05/10 10:20:55 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/10 10:20:57 loginimpl.go:20: token inserted
TRACE: 2017/05/10 10:20:57 loginimpl.go:21: {0 2 xXrAMcIMJsVHxTBOJfYa 2017-05-10 10:20:51.7457036 +0530 IST}
TRACE: 2017/05/10 10:20:59 loginimpl.go:33: {0xc042292a10 0xc04228fa80}
TRACE: 2017/05/10 10:20:59 Login.go:48: {2 rakesh xXrAMcIMJsVHxTBOJfYa user}
TRACE: 2017/05/10 10:21:17 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 10:21:17 QuestionList.go:18: fundamental
TRACE: 2017/05/10 10:21:17 QuestionList.go:19: xXrAMcIMJsVHxTBOJfYa
TRACE: 2017/05/10 10:21:17 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 10:21:17 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 10:21:17 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 10:21:17 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 10:21:19 authenticatetokenimpl.go:47: xXrAMcIMJsVHxTBOJfYa
TRACE: 2017/05/10 10:21:19 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 10:21:19 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 10:21:21 authenticatetokenimpl.go:51: xXrAMcIMJsVHxTBOJfYa
TRACE: 2017/05/10 10:21:21 authenticatetokenimpl.go:59: Type is xXrAMcIMJsVHxTBOJfYa
TRACE: 2017/05/10 10:21:21 aunthenticate.go:42: 2017-05-10 10:21:21
TRACE: 2017/05/10 10:21:21 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 10:21:23 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 10:21:23 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 10:21:24 authenticatetokenimpl.go:30: {0xc042033490 0xc042392ea0}
TRACE: 2017/05/10 10:21:24 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 10:21:24 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 10:21:24 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 10:21:24 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 10:21:24 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 10:21:24 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 10:21:24 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 10:21:26 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0423d9020 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 10:21:28 questionimpl.go:30: &{0xc0423cc690 0x718e40 0xc042400e80 false [] <nil> 0xc0423b90b0}
TRACE: 2017/05/10 10:21:36 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/10 10:21:36 AnswerList.go:23: [{0 3 } {0 1 } {0 10 } {0 7 } {0 8 } {0 9 } {0 6 } {0 4 } {0 2 } {0 5 }]
TRACE: 2017/05/10 10:21:36 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/10 10:21:36 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/10 10:21:36 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/10 10:21:36 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/10 10:21:36 CalculateScore.go:30: answerList [{0 3 } {0 1 } {0 10 } {0 7 } {0 8 } {0 9 } {0 6 } {0 4 } {0 2 } {0 5 }]
TRACE: 2017/05/10 10:21:36 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 10:21:36 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 10:21:36 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 10:21:36 questionimpl.go:98: executing query and fetching answers 
TRACE: 2017/05/10 10:21:37 questionimpl.go:105: dial tcp 127.0.0.1:3306: connectex: No connection could be made because the target machine actively refused it.
TRACE: 2017/05/10 10:24:50 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/05/10 10:24:50 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/05/10 10:24:50 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/05/10 10:24:50 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/05/10 10:24:50 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/05/10 10:24:50 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/05/10 10:24:50 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/05/10 10:24:50 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/05/10 10:24:50 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/05/10 10:24:50 debug.go:45: [GIN-debug] Listening and serving HTTP on :8084
TRACE: 2017/05/10 10:24:56 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 10:24:56 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 10:24:56 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/10 10:24:56 Login.go:16: entering manager.login
TRACE: 2017/05/10 10:24:56 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 10:24:56 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 10:24:56 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 10:25:00 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/10 10:25:00 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/10 10:25:00 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/10 10:25:02 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/10 10:25:02 loginimpl.go:81: executing query.....
TRACE: 2017/05/10 10:25:03 loginimpl.go:93: {0xc0422b41c0 0xc0422a64f0}
TRACE: 2017/05/10 10:25:03 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/10 10:25:03 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/10 10:25:03 loginimpl.go:16: exntering in SaveToken() function {0 2 DiEoLVraraEEzmCYiLNm 2017-05-10 10:25:00.2023277 +0530 IST}
TRACE: 2017/05/10 10:25:03 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/10 10:25:06 loginimpl.go:20: token inserted
TRACE: 2017/05/10 10:25:06 loginimpl.go:21: {0 2 DiEoLVraraEEzmCYiLNm 2017-05-10 10:25:00.2023277 +0530 IST}
TRACE: 2017/05/10 10:25:07 loginimpl.go:33: {0xc0422b4620 0xc0422a6d50}
TRACE: 2017/05/10 10:25:07 Login.go:48: {2 rakesh DiEoLVraraEEzmCYiLNm user}
TRACE: 2017/05/10 10:25:17 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 10:25:17 QuestionList.go:18: fundamental
TRACE: 2017/05/10 10:25:17 QuestionList.go:19: DiEoLVraraEEzmCYiLNm
TRACE: 2017/05/10 10:25:17 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 10:25:17 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 10:25:17 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 10:25:17 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 10:25:19 authenticatetokenimpl.go:47: DiEoLVraraEEzmCYiLNm
TRACE: 2017/05/10 10:25:19 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 10:25:19 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 10:25:21 authenticatetokenimpl.go:51: DiEoLVraraEEzmCYiLNm
TRACE: 2017/05/10 10:25:21 authenticatetokenimpl.go:59: Type is DiEoLVraraEEzmCYiLNm
TRACE: 2017/05/10 10:25:21 aunthenticate.go:42: 2017-05-10 10:25:21
TRACE: 2017/05/10 10:25:21 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 10:25:23 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 10:25:23 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 10:25:25 authenticatetokenimpl.go:30: {0xc042032770 0xc0422c28f0}
TRACE: 2017/05/10 10:25:25 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 10:25:25 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 10:25:25 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 10:25:25 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 10:25:25 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 10:25:25 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 10:25:25 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 10:25:27 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0422c9e00 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 10:25:29 questionimpl.go:30: &{0xc04233c150 0x718e40 0xc04232e260 false [] <nil> 0xc042346120}
TRACE: 2017/05/10 10:25:37 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/10 10:25:37 AnswerList.go:23: [{0 5 } {0 8 } {0 4 } {0 7 } {0 9 } {0 10 } {0 6 } {0 3 } {0 2 } {0 1 }]
TRACE: 2017/05/10 10:25:37 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/10 10:25:37 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/10 10:25:37 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/10 10:25:37 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/10 10:25:37 CalculateScore.go:30: answerList [{0 5 } {0 8 } {0 4 } {0 7 } {0 9 } {0 10 } {0 6 } {0 3 } {0 2 } {0 1 }]
TRACE: 2017/05/10 10:25:37 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 10:25:37 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 10:25:37 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 10:25:37 questionimpl.go:98: executing query and fetching answers 
TRACE: 2017/05/10 10:25:38 questionimpl.go:105: dial tcp 127.0.0.1:3306: connectex: No connection could be made because the target machine actively refused it.
TRACE: 2017/05/10 10:25:51 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/05/10 10:25:51 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/05/10 10:25:51 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/05/10 10:25:51 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/05/10 10:25:51 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/05/10 10:25:51 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/05/10 10:25:51 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/05/10 10:25:51 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/05/10 10:25:51 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/05/10 10:25:51 debug.go:45: [GIN-debug] Listening and serving HTTP on :8084
TRACE: 2017/05/10 10:26:02 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 10:26:02 QuestionList.go:18: java
TRACE: 2017/05/10 10:26:02 QuestionList.go:19: DiEoLVraraEEzmCYiLNm
TRACE: 2017/05/10 10:26:02 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 10:26:02 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 10:26:02 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 10:26:02 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 10:26:04 authenticatetokenimpl.go:47: DiEoLVraraEEzmCYiLNm
TRACE: 2017/05/10 10:26:04 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 10:26:04 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 10:26:06 authenticatetokenimpl.go:51: DiEoLVraraEEzmCYiLNm
TRACE: 2017/05/10 10:26:06 authenticatetokenimpl.go:59: Type is DiEoLVraraEEzmCYiLNm
TRACE: 2017/05/10 10:26:06 aunthenticate.go:42: 2017-05-10 10:26:06
TRACE: 2017/05/10 10:26:06 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 10:26:08 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 10:26:08 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 10:26:10 authenticatetokenimpl.go:30: {0xc04229e150 0xc0421f0440}
TRACE: 2017/05/10 10:26:10 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 10:26:10 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 10:26:10 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 10:26:10 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 10:26:10 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 10:26:10 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 10:26:10 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 10:26:12 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0421e3a40 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 10:26:14 questionimpl.go:30: &{0xc0422c2150 0x718e40 0xc0422c01c0 false [] <nil> 0xc0423140f0}
TRACE: 2017/05/10 10:31:23 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 10:31:23 QuestionList.go:18: fundamental
TRACE: 2017/05/10 10:31:23 QuestionList.go:19: DiEoLVraraEEzmCYiLNm
TRACE: 2017/05/10 10:31:23 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 10:31:23 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 10:31:23 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 10:31:23 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 10:31:25 authenticatetokenimpl.go:47: DiEoLVraraEEzmCYiLNm
TRACE: 2017/05/10 10:31:25 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 10:31:25 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 10:31:26 authenticatetokenimpl.go:51: DiEoLVraraEEzmCYiLNm
TRACE: 2017/05/10 10:31:26 authenticatetokenimpl.go:59: Type is DiEoLVraraEEzmCYiLNm
TRACE: 2017/05/10 10:31:26 aunthenticate.go:42: 2017-05-10 10:31:26
TRACE: 2017/05/10 10:31:26 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 10:31:28 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 10:31:28 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 10:31:30 authenticatetokenimpl.go:30: {0xc0421beb60 0xc042374040}
TRACE: 2017/05/10 10:31:30 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 10:31:30 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 10:31:30 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 10:31:30 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 10:31:30 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 10:31:30 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 10:31:30 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 10:31:32 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc042299da0 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 10:31:34 questionimpl.go:30: &{0xc0421bef50 0x718e40 0xc04234d660 false [] <nil> 0xc0421459e0}
TRACE: 2017/05/10 10:35:29 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 10:35:29 QuestionList.go:18: java
TRACE: 2017/05/10 10:35:29 QuestionList.go:19: DiEoLVraraEEzmCYiLNm
TRACE: 2017/05/10 10:35:29 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 10:35:29 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 10:35:29 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 10:35:29 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 10:35:31 authenticatetokenimpl.go:47: DiEoLVraraEEzmCYiLNm
TRACE: 2017/05/10 10:35:31 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 10:35:31 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 10:35:33 authenticatetokenimpl.go:51: DiEoLVraraEEzmCYiLNm
TRACE: 2017/05/10 10:35:33 authenticatetokenimpl.go:59: Type is DiEoLVraraEEzmCYiLNm
TRACE: 2017/05/10 10:35:33 aunthenticate.go:42: 2017-05-10 10:35:33
TRACE: 2017/05/10 10:35:33 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 10:35:35 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 10:35:35 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 10:35:37 authenticatetokenimpl.go:30: {0xc0422c30a0 0xc04238ce80}
TRACE: 2017/05/10 10:35:37 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 10:35:37 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 10:35:37 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 10:35:37 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 10:35:37 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 10:35:37 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 10:35:37 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 10:35:39 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0423a8120 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 10:35:41 questionimpl.go:30: &{0xc04229ea80 0x718e40 0xc0423966a0 false [] <nil> 0xc042297260}
TRACE: 2017/05/10 10:45:37 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 10:45:37 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 10:45:37 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/10 10:45:37 Login.go:16: entering manager.login
TRACE: 2017/05/10 10:45:37 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 10:45:37 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 10:45:37 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 10:45:41 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/10 10:45:41 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/10 10:45:41 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/10 10:45:43 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/10 10:45:43 loginimpl.go:81: executing query.....
TRACE: 2017/05/10 10:45:45 loginimpl.go:93: {0xc0421befc0 0xc042374900}
TRACE: 2017/05/10 10:45:45 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/10 10:45:45 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/10 10:45:45 loginimpl.go:16: exntering in SaveToken() function {0 2 AabTbSKsPdiZAdkbAhbR 2017-05-10 10:45:41.6903127 +0530 IST}
TRACE: 2017/05/10 10:45:45 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/10 10:45:47 loginimpl.go:20: token inserted
TRACE: 2017/05/10 10:45:47 loginimpl.go:21: {0 2 AabTbSKsPdiZAdkbAhbR 2017-05-10 10:45:41.6903127 +0530 IST}
TRACE: 2017/05/10 10:45:49 loginimpl.go:33: {0xc04229f6c0 0xc042004fe0}
TRACE: 2017/05/10 10:45:49 Login.go:48: {2 rakesh AabTbSKsPdiZAdkbAhbR user}
TRACE: 2017/05/10 10:45:57 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 10:45:57 QuestionList.go:18: fundamental
TRACE: 2017/05/10 10:45:57 QuestionList.go:19: AabTbSKsPdiZAdkbAhbR
TRACE: 2017/05/10 10:45:57 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 10:45:57 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 10:45:57 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 10:45:57 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 10:45:59 authenticatetokenimpl.go:47: AabTbSKsPdiZAdkbAhbR
TRACE: 2017/05/10 10:45:59 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 10:45:59 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 10:46:01 authenticatetokenimpl.go:51: AabTbSKsPdiZAdkbAhbR
TRACE: 2017/05/10 10:46:01 authenticatetokenimpl.go:59: Type is AabTbSKsPdiZAdkbAhbR
TRACE: 2017/05/10 10:46:01 aunthenticate.go:42: 2017-05-10 10:46:01
TRACE: 2017/05/10 10:46:01 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 10:46:03 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 10:46:03 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 10:46:05 authenticatetokenimpl.go:30: {0xc0421bf650 0xc042005950}
TRACE: 2017/05/10 10:46:05 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 10:46:05 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 10:46:05 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 10:46:05 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 10:46:05 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 10:46:05 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 10:46:05 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 10:46:07 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc04241f740 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 10:46:09 questionimpl.go:30: &{0xc042032ee0 0x718e40 0xc04243a260 false [] <nil> 0xc042007c80}
TRACE: 2017/05/10 10:46:18 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/10 10:46:18 AnswerList.go:23: [{0 8 } {0 9 } {0 4 } {0 5 } {0 1 } {0 3 } {0 2 } {0 10 } {0 6 } {0 7 }]
TRACE: 2017/05/10 10:46:18 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/10 10:46:18 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/10 10:46:18 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/10 10:46:18 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/10 10:46:18 CalculateScore.go:30: answerList [{0 8 } {0 9 } {0 4 } {0 5 } {0 1 } {0 3 } {0 2 } {0 10 } {0 6 } {0 7 }]
TRACE: 2017/05/10 10:46:18 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 10:46:18 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 10:46:18 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 10:46:18 questionimpl.go:98: executing query and fetching answers 
TRACE: 2017/05/10 10:46:19 questionimpl.go:105: dial tcp 127.0.0.1:3306: connectex: No connection could be made because the target machine actively refused it.
TRACE: 2017/05/10 10:46:49 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/05/10 10:46:49 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/05/10 10:46:49 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/05/10 10:46:49 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/05/10 10:46:49 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/05/10 10:46:49 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/05/10 10:46:49 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/05/10 10:46:49 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/05/10 10:46:49 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/05/10 10:46:49 debug.go:45: [GIN-debug] Listening and serving HTTP on :8084
TRACE: 2017/05/10 10:50:17 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 10:50:17 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 10:50:17 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/10 10:50:17 Login.go:16: entering manager.login
TRACE: 2017/05/10 10:50:17 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 10:50:17 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 10:50:17 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 10:50:21 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/10 10:50:21 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/10 10:50:21 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/10 10:50:23 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/10 10:50:23 loginimpl.go:81: executing query.....
TRACE: 2017/05/10 10:50:25 loginimpl.go:93: {0xc0420325b0 0xc042004b30}
TRACE: 2017/05/10 10:50:25 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/10 10:50:25 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/10 10:50:25 loginimpl.go:16: exntering in SaveToken() function {0 2 boumglAgNIOneFMKyHuT 2017-05-10 10:50:21.2746805 +0530 IST}
TRACE: 2017/05/10 10:50:25 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/10 10:50:27 loginimpl.go:20: token inserted
TRACE: 2017/05/10 10:50:27 loginimpl.go:21: {0 2 boumglAgNIOneFMKyHuT 2017-05-10 10:50:21.2746805 +0530 IST}
TRACE: 2017/05/10 10:50:28 loginimpl.go:33: {0xc042032770 0xc042004da0}
TRACE: 2017/05/10 10:50:28 Login.go:48: {2 rakesh boumglAgNIOneFMKyHuT user}
TRACE: 2017/05/10 10:50:49 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 10:50:49 QuestionList.go:18: fundamental
TRACE: 2017/05/10 10:50:49 QuestionList.go:19: boumglAgNIOneFMKyHuT
TRACE: 2017/05/10 10:50:49 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 10:50:49 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 10:50:49 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 10:50:49 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 10:50:51 authenticatetokenimpl.go:47: boumglAgNIOneFMKyHuT
TRACE: 2017/05/10 10:50:51 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 10:50:51 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 10:50:52 authenticatetokenimpl.go:51: boumglAgNIOneFMKyHuT
TRACE: 2017/05/10 10:50:52 authenticatetokenimpl.go:59: Type is boumglAgNIOneFMKyHuT
TRACE: 2017/05/10 10:50:52 aunthenticate.go:42: 2017-05-10 10:50:52
TRACE: 2017/05/10 10:50:52 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 10:50:54 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 10:50:54 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 10:50:56 authenticatetokenimpl.go:30: {0xc0421bf110 0xc042005ed0}
TRACE: 2017/05/10 10:50:56 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 10:50:56 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 10:50:56 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 10:50:56 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 10:50:56 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 10:50:56 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 10:50:56 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 10:50:58 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0421e5ec0 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 10:51:00 questionimpl.go:30: &{0xc0421bf420 0x718e40 0xc042317980 false [] <nil> 0xc042340450}
TRACE: 2017/05/10 10:51:08 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/10 10:51:08 AnswerList.go:23: [{0 7 } {0 8 } {0 4 } {0 5 } {0 9 } {0 3 } {0 6 } {0 10 } {0 2 } {0 1 }]
TRACE: 2017/05/10 10:51:08 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/10 10:51:08 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/10 10:51:08 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/10 10:51:08 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/10 10:51:08 CalculateScore.go:30: answerList [{0 7 } {0 8 } {0 4 } {0 5 } {0 9 } {0 3 } {0 6 } {0 10 } {0 2 } {0 1 }]
TRACE: 2017/05/10 10:51:08 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 10:51:08 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 10:51:08 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 10:51:08 questionimpl.go:98: executing query and fetching answers 
TRACE: 2017/05/10 10:51:09 questionimpl.go:105: dial tcp 127.0.0.1:3306: connectex: No connection could be made because the target machine actively refused it.
TRACE: 2017/05/10 10:51:26 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/05/10 10:51:26 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/05/10 10:51:26 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/05/10 10:51:26 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/05/10 10:51:26 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/05/10 10:51:26 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/05/10 10:51:26 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/05/10 10:51:26 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/05/10 10:51:26 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/05/10 10:51:26 debug.go:45: [GIN-debug] Listening and serving HTTP on :8084
TRACE: 2017/05/10 10:51:34 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 10:51:34 QuestionList.go:18: java
TRACE: 2017/05/10 10:51:34 QuestionList.go:19: boumglAgNIOneFMKyHuT
TRACE: 2017/05/10 10:51:34 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 10:51:34 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 10:51:34 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 10:51:34 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 10:51:37 authenticatetokenimpl.go:47: boumglAgNIOneFMKyHuT
TRACE: 2017/05/10 10:51:37 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 10:51:37 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 10:51:39 authenticatetokenimpl.go:51: boumglAgNIOneFMKyHuT
TRACE: 2017/05/10 10:51:39 authenticatetokenimpl.go:59: Type is boumglAgNIOneFMKyHuT
TRACE: 2017/05/10 10:51:39 aunthenticate.go:42: 2017-05-10 10:51:39
TRACE: 2017/05/10 10:51:39 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 10:51:41 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 10:51:41 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 10:51:43 authenticatetokenimpl.go:30: {0xc0421becb0 0xc0422bc510}
TRACE: 2017/05/10 10:51:43 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 10:51:43 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 10:51:43 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 10:51:43 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 10:51:43 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 10:51:43 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 10:51:43 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 10:51:45 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0422b6240 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 10:51:49 questionimpl.go:30: &{0xc0420325b0 0x718e40 0xc042009740 false [] <nil> 0xc042006a50}
TRACE: 2017/05/10 10:54:18 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 10:54:18 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 10:54:18 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/10 10:54:18 Login.go:16: entering manager.login
TRACE: 2017/05/10 10:54:18 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 10:54:18 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 10:54:18 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 10:54:22 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/10 10:54:22 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/10 10:54:22 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/10 10:54:24 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/10 10:54:24 loginimpl.go:81: executing query.....
TRACE: 2017/05/10 10:54:26 loginimpl.go:93: {0xc0420331f0 0xc04232a470}
TRACE: 2017/05/10 10:54:26 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/10 10:54:26 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/10 10:54:26 loginimpl.go:16: exntering in SaveToken() function {0 2 RVEODHqBLbElVraLCgSF 2017-05-10 10:54:22.2852866 +0530 IST}
TRACE: 2017/05/10 10:54:26 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/10 10:54:28 loginimpl.go:20: token inserted
TRACE: 2017/05/10 10:54:28 loginimpl.go:21: {0 2 RVEODHqBLbElVraLCgSF 2017-05-10 10:54:22.2852866 +0530 IST}
TRACE: 2017/05/10 10:54:29 loginimpl.go:33: {0xc04236e0e0 0xc0421f0290}
TRACE: 2017/05/10 10:54:29 Login.go:48: {2 rakesh RVEODHqBLbElVraLCgSF user}
TRACE: 2017/05/10 10:54:43 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 10:54:43 QuestionList.go:18: language
TRACE: 2017/05/10 10:54:43 QuestionList.go:19: RVEODHqBLbElVraLCgSF
TRACE: 2017/05/10 10:54:43 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 10:54:43 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 10:54:43 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 10:54:43 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 10:54:46 authenticatetokenimpl.go:47: RVEODHqBLbElVraLCgSF
TRACE: 2017/05/10 10:54:46 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 10:54:46 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 10:54:48 authenticatetokenimpl.go:51: RVEODHqBLbElVraLCgSF
TRACE: 2017/05/10 10:54:48 authenticatetokenimpl.go:59: Type is RVEODHqBLbElVraLCgSF
TRACE: 2017/05/10 10:54:48 aunthenticate.go:42: 2017-05-10 10:54:48
TRACE: 2017/05/10 10:54:48 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 10:54:50 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 10:54:50 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 10:54:51 authenticatetokenimpl.go:30: {0xc04236e5b0 0xc0421f0ea0}
TRACE: 2017/05/10 10:54:51 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 10:54:51 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 10:54:51 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 10:54:51 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 10:54:51 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 10:54:51 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 10:54:51 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 10:54:53 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0421f7e60 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 10:54:55 questionimpl.go:30: &{0xc0422a6690 0x718e40 0xc0422a52a0 false [] <nil> 0xc0422aa780}
TRACE: 2017/05/10 10:55:55 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/10 10:55:55 AnswerList.go:23: [{0 40 } {0 38 } {0 43 } {0 41 } {0 37 } {0 36 } {0 39 } {0 42 }]
TRACE: 2017/05/10 10:55:55 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/10 10:55:55 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/10 10:55:55 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/10 10:55:55 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/10 10:55:55 CalculateScore.go:30: answerList [{0 40 } {0 38 } {0 43 } {0 41 } {0 37 } {0 36 } {0 39 } {0 42 }]
TRACE: 2017/05/10 10:55:55 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 10:55:55 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 10:55:55 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 10:55:55 questionimpl.go:98: executing query and fetching answers 
TRACE: 2017/05/10 10:55:56 questionimpl.go:105: dial tcp 127.0.0.1:3306: connectex: No connection could be made because the target machine actively refused it.
TRACE: 2017/05/10 11:31:54 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/05/10 11:31:54 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/05/10 11:31:54 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/05/10 11:31:54 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/05/10 11:31:54 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/05/10 11:31:54 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/05/10 11:31:54 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/05/10 11:31:54 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/05/10 11:31:54 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/05/10 11:31:54 debug.go:45: [GIN-debug] Listening and serving HTTP on :8084
TRACE: 2017/05/10 11:33:11 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 11:33:11 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 11:33:11 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/10 11:33:11 Login.go:16: entering manager.login
TRACE: 2017/05/10 11:33:11 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 11:33:11 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 11:33:11 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 11:33:16 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/10 11:33:16 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/10 11:33:16 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/10 11:33:18 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/10 11:33:18 loginimpl.go:81: executing query.....
TRACE: 2017/05/10 11:33:20 loginimpl.go:93: {0xc042032690 0xc042004aa0}
TRACE: 2017/05/10 11:33:20 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/10 11:33:20 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/10 11:33:20 loginimpl.go:16: exntering in SaveToken() function {0 2 FOUIgzhAFkYbrPtCvBQh 2017-05-10 11:33:16.534354 +0530 IST}
TRACE: 2017/05/10 11:33:20 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/10 11:33:22 loginimpl.go:20: token inserted
TRACE: 2017/05/10 11:33:22 loginimpl.go:21: {0 2 FOUIgzhAFkYbrPtCvBQh 2017-05-10 11:33:16.534354 +0530 IST}
TRACE: 2017/05/10 11:33:24 loginimpl.go:33: {0xc04229e1c0 0xc042004cb0}
TRACE: 2017/05/10 11:33:24 Login.go:48: {2 rakesh FOUIgzhAFkYbrPtCvBQh user}
TRACE: 2017/05/10 11:33:35 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 11:33:35 QuestionList.go:18: fundamental
TRACE: 2017/05/10 11:33:35 QuestionList.go:19: FOUIgzhAFkYbrPtCvBQh
TRACE: 2017/05/10 11:33:35 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 11:33:35 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 11:33:35 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 11:33:35 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 11:33:37 authenticatetokenimpl.go:47: FOUIgzhAFkYbrPtCvBQh
TRACE: 2017/05/10 11:33:37 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 11:33:37 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 11:33:39 authenticatetokenimpl.go:51: FOUIgzhAFkYbrPtCvBQh
TRACE: 2017/05/10 11:33:39 authenticatetokenimpl.go:59: Type is FOUIgzhAFkYbrPtCvBQh
TRACE: 2017/05/10 11:33:39 aunthenticate.go:42: 2017-05-10 11:33:39
TRACE: 2017/05/10 11:33:39 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 11:33:41 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 11:33:41 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 11:33:44 authenticatetokenimpl.go:30: {0xc0421bf3b0 0xc0421f09a0}
TRACE: 2017/05/10 11:33:44 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 11:33:44 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 11:33:44 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 11:33:44 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 11:33:44 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 11:33:44 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 11:33:44 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 11:33:46 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0422998c0 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 11:33:47 questionimpl.go:30: &{0xc042032af0 0x718e40 0xc042321120 false [] <nil> 0xc042007350}
TRACE: 2017/05/10 11:42:25 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 11:42:25 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 11:42:25 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/10 11:42:25 Login.go:16: entering manager.login
TRACE: 2017/05/10 11:42:25 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 11:42:25 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 11:42:25 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 11:42:30 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/10 11:42:30 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/10 11:42:30 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/10 11:42:33 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/10 11:42:33 loginimpl.go:81: executing query.....
TRACE: 2017/05/10 11:42:35 loginimpl.go:93: {0xc042032ee0 0xc0420059e0}
TRACE: 2017/05/10 11:42:35 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/10 11:42:35 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/10 11:42:35 loginimpl.go:16: exntering in SaveToken() function {0 2 KzRiKCrdJCmturehPqAF 2017-05-10 11:42:30.8483993 +0530 IST}
TRACE: 2017/05/10 11:42:35 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/10 11:42:38 loginimpl.go:20: token inserted
TRACE: 2017/05/10 11:42:38 loginimpl.go:21: {0 2 KzRiKCrdJCmturehPqAF 2017-05-10 11:42:30.8483993 +0530 IST}
TRACE: 2017/05/10 11:42:40 loginimpl.go:33: {0xc0421bf8f0 0xc0422d1eb0}
TRACE: 2017/05/10 11:42:40 Login.go:48: {2 rakesh KzRiKCrdJCmturehPqAF user}
TRACE: 2017/05/10 11:43:41 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 11:43:41 QuestionList.go:18: fundamental
TRACE: 2017/05/10 11:43:41 QuestionList.go:19: KzRiKCrdJCmturehPqAF
TRACE: 2017/05/10 11:43:41 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 11:43:41 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 11:43:41 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 11:43:41 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 11:43:43 authenticatetokenimpl.go:47: KzRiKCrdJCmturehPqAF
TRACE: 2017/05/10 11:43:43 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 11:43:43 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 11:43:45 authenticatetokenimpl.go:51: KzRiKCrdJCmturehPqAF
TRACE: 2017/05/10 11:43:45 authenticatetokenimpl.go:59: Type is KzRiKCrdJCmturehPqAF
TRACE: 2017/05/10 11:43:45 aunthenticate.go:42: 2017-05-10 11:43:45
TRACE: 2017/05/10 11:43:45 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 11:43:47 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 11:43:47 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 11:43:49 authenticatetokenimpl.go:30: {0xc042033420 0xc04236e3e0}
TRACE: 2017/05/10 11:43:49 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 11:43:49 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 11:43:49 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 11:43:49 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 11:43:49 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 11:43:49 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 11:43:49 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 11:43:51 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc042392060 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 11:43:54 questionimpl.go:30: &{0xc0423a6000 0x718e40 0xc04239e0c0 false [] <nil> 0xc0423a4090}
TRACE: 2017/05/10 11:43:58 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/10 11:43:58 AnswerList.go:23: [{0 4 } {0 10 } {0 1 } {0 5 } {0 7 } {0 9 } {0 8 } {0 2 } {0 3 } {0 6 }]
TRACE: 2017/05/10 11:43:58 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/10 11:43:58 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/10 11:43:58 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/10 11:43:58 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/10 11:43:58 CalculateScore.go:30: answerList [{0 4 } {0 10 } {0 1 } {0 5 } {0 7 } {0 9 } {0 8 } {0 2 } {0 3 } {0 6 }]
TRACE: 2017/05/10 11:43:58 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 11:43:58 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 11:43:58 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 11:43:58 questionimpl.go:98: executing query and fetching answers 
TRACE: 2017/05/10 11:43:59 questionimpl.go:105: dial tcp 127.0.0.1:3306: connectex: No connection could be made because the target machine actively refused it.
TRACE: 2017/05/10 11:48:15 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/05/10 11:48:15 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/05/10 11:48:15 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/05/10 11:48:15 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/05/10 11:48:15 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/05/10 11:48:15 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/05/10 11:48:15 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/05/10 11:48:15 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/05/10 11:48:15 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/05/10 11:48:15 debug.go:45: [GIN-debug] Listening and serving HTTP on :8084
TRACE: 2017/05/10 12:21:07 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 12:21:07 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 12:21:07 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/10 12:21:07 Login.go:16: entering manager.login
TRACE: 2017/05/10 12:21:07 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 12:21:07 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 12:21:07 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 12:21:11 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/10 12:21:11 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/10 12:21:11 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/10 12:21:14 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/10 12:21:14 loginimpl.go:81: executing query.....
TRACE: 2017/05/10 12:21:16 loginimpl.go:93: {0xc04229a620 0xc0421e8a00}
TRACE: 2017/05/10 12:21:16 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/10 12:21:16 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/10 12:21:16 loginimpl.go:16: exntering in SaveToken() function {0 2 UBgiTgTnAovojdYPaohp 2017-05-10 12:21:11.6461449 +0530 IST}
TRACE: 2017/05/10 12:21:16 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/10 12:21:18 loginimpl.go:20: token inserted
TRACE: 2017/05/10 12:21:18 loginimpl.go:21: {0 2 UBgiTgTnAovojdYPaohp 2017-05-10 12:21:11.6461449 +0530 IST}
TRACE: 2017/05/10 12:21:20 loginimpl.go:33: {0xc0422ea150 0xc0421e2580}
TRACE: 2017/05/10 12:21:20 Login.go:48: {2 rakesh UBgiTgTnAovojdYPaohp user}
TRACE: 2017/05/10 12:21:36 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 12:21:36 QuestionList.go:18: fundamental
TRACE: 2017/05/10 12:21:36 QuestionList.go:19: UBgiTgTnAovojdYPaohp
TRACE: 2017/05/10 12:21:36 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 12:21:36 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 12:21:36 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 12:21:36 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 12:21:39 authenticatetokenimpl.go:47: UBgiTgTnAovojdYPaohp
TRACE: 2017/05/10 12:21:39 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 12:21:39 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 12:21:41 authenticatetokenimpl.go:51: UBgiTgTnAovojdYPaohp
TRACE: 2017/05/10 12:21:41 authenticatetokenimpl.go:59: Type is UBgiTgTnAovojdYPaohp
TRACE: 2017/05/10 12:21:41 aunthenticate.go:42: 2017-05-10 12:21:41
TRACE: 2017/05/10 12:21:41 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 12:21:43 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 12:21:43 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 12:21:44 authenticatetokenimpl.go:30: {0xc0422ea2a0 0xc0422d0580}
TRACE: 2017/05/10 12:21:44 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 12:21:44 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 12:21:44 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 12:21:44 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 12:21:44 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 12:21:44 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 12:21:44 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 12:21:46 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0423091a0 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 12:21:48 questionimpl.go:30: &{0xc04229ae00 0x718e40 0xc04231d6a0 false [] <nil> 0xc0422a70e0}
TRACE: 2017/05/10 12:21:54 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/10 12:21:54 AnswerList.go:23: [{0 9 } {0 5 } {0 10 } {0 7 } {0 4 } {0 2 } {0 8 } {0 3 } {0 6 } {0 1 }]
TRACE: 2017/05/10 12:21:54 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/10 12:21:54 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/10 12:21:54 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/10 12:21:54 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/10 12:21:54 CalculateScore.go:30: answerList [{0 9 } {0 5 } {0 10 } {0 7 } {0 4 } {0 2 } {0 8 } {0 3 } {0 6 } {0 1 }]
TRACE: 2017/05/10 12:21:54 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 12:21:54 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 12:21:54 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 12:21:54 questionimpl.go:98: executing query and fetching answers 
TRACE: 2017/05/10 12:21:55 questionimpl.go:105: dial tcp 127.0.0.1:3306: connectex: No connection could be made because the target machine actively refused it.
TRACE: 2017/05/10 12:22:11 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/05/10 12:22:11 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/05/10 12:22:11 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/05/10 12:22:11 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/05/10 12:22:11 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/05/10 12:22:11 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/05/10 12:22:11 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/05/10 12:22:11 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/05/10 12:22:11 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/05/10 12:22:11 debug.go:45: [GIN-debug] Listening and serving HTTP on :8084
TRACE: 2017/05/10 12:22:20 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 12:22:20 QuestionList.go:18: language
TRACE: 2017/05/10 12:22:20 QuestionList.go:19: UBgiTgTnAovojdYPaohp
TRACE: 2017/05/10 12:22:20 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 12:22:20 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 12:22:20 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 12:22:20 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 12:22:23 authenticatetokenimpl.go:47: UBgiTgTnAovojdYPaohp
TRACE: 2017/05/10 12:22:23 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 12:22:23 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 12:22:25 authenticatetokenimpl.go:51: UBgiTgTnAovojdYPaohp
TRACE: 2017/05/10 12:22:25 authenticatetokenimpl.go:59: Type is UBgiTgTnAovojdYPaohp
TRACE: 2017/05/10 12:22:25 aunthenticate.go:42: 2017-05-10 12:22:25
TRACE: 2017/05/10 12:22:25 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 12:22:27 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 12:22:27 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 12:22:30 authenticatetokenimpl.go:30: {0xc042290380 0xc0422a6060}
TRACE: 2017/05/10 12:22:30 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 12:22:30 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 12:22:30 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 12:22:30 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 12:22:30 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 12:22:30 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 12:22:30 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 12:22:32 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0422f0d20 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 12:22:41 questionimpl.go:30: &{0xc0421bcd20 0x718e40 0xc0421d6f60 false [] <nil> 0xc042145860}
TRACE: 2017/05/10 12:34:09 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 12:34:09 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 12:34:09 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/10 12:34:09 Login.go:16: entering manager.login
TRACE: 2017/05/10 12:34:09 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 12:34:09 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 12:34:09 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 12:34:16 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/10 12:34:16 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/10 12:34:16 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/10 12:34:20 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/10 12:34:20 loginimpl.go:81: executing query.....
TRACE: 2017/05/10 12:34:24 loginimpl.go:93: {0xc042032700 0xc042004d80}
TRACE: 2017/05/10 12:34:24 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/10 12:34:24 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/10 12:34:24 loginimpl.go:16: exntering in SaveToken() function {0 2 TOhdYFyYKzvUtpafUjwp 2017-05-10 12:34:16.5629818 +0530 IST}
TRACE: 2017/05/10 12:34:24 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/10 12:34:27 loginimpl.go:20: token inserted
TRACE: 2017/05/10 12:34:27 loginimpl.go:21: {0 2 TOhdYFyYKzvUtpafUjwp 2017-05-10 12:34:16.5629818 +0530 IST}
TRACE: 2017/05/10 12:34:33 loginimpl.go:33: {0xc0421bd650 0xc0421e3840}
TRACE: 2017/05/10 12:34:33 Login.go:48: {2 rakesh TOhdYFyYKzvUtpafUjwp user}
TRACE: 2017/05/10 12:37:02 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 12:37:02 QuestionList.go:18: fundamental
TRACE: 2017/05/10 12:37:02 QuestionList.go:19: TOhdYFyYKzvUtpafUjwp
TRACE: 2017/05/10 12:37:02 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 12:37:02 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 12:37:02 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 12:37:02 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 12:37:04 authenticatetokenimpl.go:47: TOhdYFyYKzvUtpafUjwp
TRACE: 2017/05/10 12:37:04 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 12:37:04 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 12:37:06 authenticatetokenimpl.go:51: 
TRACE: 2017/05/10 12:37:06 authenticatetokenimpl.go:54: No uid with that token.
TRACE: 2017/05/10 12:38:29 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 12:38:29 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 12:38:29 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/10 12:38:29 Login.go:16: entering manager.login
TRACE: 2017/05/10 12:38:29 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 12:38:29 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 12:38:29 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 12:38:48 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 12:38:48 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 12:38:48 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/10 12:38:48 Login.go:16: entering manager.login
TRACE: 2017/05/10 12:38:48 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 12:38:48 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 12:38:48 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 12:39:24 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/05/10 12:39:24 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/05/10 12:39:24 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/05/10 12:39:24 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/05/10 12:39:24 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/05/10 12:39:24 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/05/10 12:39:24 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/05/10 12:39:24 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/05/10 12:39:24 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/05/10 12:39:24 debug.go:45: [GIN-debug] Listening and serving HTTP on :8084
TRACE: 2017/05/10 12:39:24 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 12:39:24 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 12:39:24 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/10 12:39:24 Login.go:16: entering manager.login
TRACE: 2017/05/10 12:39:24 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 12:39:24 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 12:39:24 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 12:40:31 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/05/10 12:40:31 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/05/10 12:40:31 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/05/10 12:40:31 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/05/10 12:40:31 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/05/10 12:40:31 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/05/10 12:40:31 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/05/10 12:40:31 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/05/10 12:40:31 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/05/10 12:40:31 debug.go:45: [GIN-debug] Listening and serving HTTP on :8084
TRACE: 2017/05/10 12:44:27 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 12:44:27 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 12:44:27 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/10 12:44:27 Login.go:16: entering manager.login
TRACE: 2017/05/10 12:44:27 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 12:44:27 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 12:44:27 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 12:44:37 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/10 12:44:37 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/10 12:44:37 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/10 12:44:40 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/10 12:44:40 loginimpl.go:81: executing query.....
TRACE: 2017/05/10 12:44:45 loginimpl.go:93: {0xc0422e02a0 0xc0422ca560}
TRACE: 2017/05/10 12:44:45 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/10 12:44:45 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/10 12:44:45 loginimpl.go:16: exntering in SaveToken() function {0 2 rWsgIrAsSRiFYZjRCnDJ 2017-05-10 12:44:37.6951555 +0530 IST}
TRACE: 2017/05/10 12:44:45 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/10 12:44:49 loginimpl.go:20: token inserted
TRACE: 2017/05/10 12:44:49 loginimpl.go:21: {0 2 rWsgIrAsSRiFYZjRCnDJ 2017-05-10 12:44:37.6951555 +0530 IST}
TRACE: 2017/05/10 12:44:52 loginimpl.go:33: {0xc0421beee0 0xc0421e24b0}
TRACE: 2017/05/10 12:44:52 Login.go:48: {2 rakesh rWsgIrAsSRiFYZjRCnDJ user}
TRACE: 2017/05/10 12:45:02 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 12:45:02 QuestionList.go:18: fundamental
TRACE: 2017/05/10 12:45:02 QuestionList.go:19: rWsgIrAsSRiFYZjRCnDJ
TRACE: 2017/05/10 12:45:02 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 12:45:02 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 12:45:02 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 12:45:02 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 12:45:07 authenticatetokenimpl.go:47: rWsgIrAsSRiFYZjRCnDJ
TRACE: 2017/05/10 12:45:07 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 12:45:07 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 12:45:10 authenticatetokenimpl.go:51: rWsgIrAsSRiFYZjRCnDJ
TRACE: 2017/05/10 12:45:10 authenticatetokenimpl.go:59: Type is rWsgIrAsSRiFYZjRCnDJ
TRACE: 2017/05/10 12:45:10 aunthenticate.go:42: 2017-05-10 12:45:10
TRACE: 2017/05/10 12:45:10 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 12:45:14 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 12:45:14 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 12:45:17 authenticatetokenimpl.go:30: {0xc0420324d0 0xc042004990}
TRACE: 2017/05/10 12:45:17 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 12:45:17 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 12:45:17 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 12:45:17 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 12:45:17 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 12:45:17 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 12:45:17 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 12:45:20 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc042282ea0 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 12:45:24 questionimpl.go:30: &{0xc04229a9a0 0x718e40 0xc042360a60 false [] <nil> 0xc0422a8ed0}
TRACE: 2017/05/10 12:46:24 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/10 12:46:24 AnswerList.go:23: [{0 2 } {0 3 } {0 10 } {0 6 } {0 8 } {0 9 } {0 1 } {0 4 } {0 7 } {0 5 }]
TRACE: 2017/05/10 12:46:24 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/10 12:46:24 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/10 12:46:24 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/10 12:46:24 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/10 12:46:24 CalculateScore.go:30: answerList [{0 2 } {0 3 } {0 10 } {0 6 } {0 8 } {0 9 } {0 1 } {0 4 } {0 7 } {0 5 }]
TRACE: 2017/05/10 12:46:24 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 12:46:24 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 12:46:24 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 12:46:24 questionimpl.go:98: executing query and fetching answers 
TRACE: 2017/05/10 12:46:25 questionimpl.go:105: dial tcp 127.0.0.1:3306: connectex: No connection could be made because the target machine actively refused it.
TRACE: 2017/05/10 12:52:48 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/05/10 12:52:48 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/05/10 12:52:48 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/05/10 12:52:48 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/05/10 12:52:48 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/05/10 12:52:48 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/05/10 12:52:48 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/05/10 12:52:48 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/05/10 12:52:48 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/05/10 12:52:48 debug.go:45: [GIN-debug] Listening and serving HTTP on :8084
TRACE: 2017/05/10 12:52:58 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 12:52:58 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 12:52:58 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/10 12:52:58 Login.go:16: entering manager.login
TRACE: 2017/05/10 12:52:58 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 12:52:58 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 12:52:58 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 12:53:17 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/10 12:53:17 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/10 12:53:17 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/10 12:53:27 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/10 12:53:27 loginimpl.go:81: executing query.....
TRACE: 2017/05/10 12:53:33 loginimpl.go:93: {0xc042032700 0xc042004a70}
TRACE: 2017/05/10 12:53:33 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/10 12:53:33 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/10 12:53:33 loginimpl.go:16: exntering in SaveToken() function {0 2 rEkibkybLvKLEcQFGLjp 2017-05-10 12:53:17.9598148 +0530 IST}
TRACE: 2017/05/10 12:53:33 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/10 12:53:38 loginimpl.go:20: token inserted
TRACE: 2017/05/10 12:53:38 loginimpl.go:21: {0 2 rEkibkybLvKLEcQFGLjp 2017-05-10 12:53:17.9598148 +0530 IST}
TRACE: 2017/05/10 12:53:44 loginimpl.go:33: {0xc0422b8150 0xc042004fe0}
TRACE: 2017/05/10 12:53:44 Login.go:48: {2 rakesh rEkibkybLvKLEcQFGLjp user}
TRACE: 2017/05/10 12:53:54 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 12:53:54 QuestionList.go:18: fundamental
TRACE: 2017/05/10 12:53:54 QuestionList.go:19: rEkibkybLvKLEcQFGLjp
TRACE: 2017/05/10 12:53:54 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 12:53:54 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 12:53:54 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 12:53:54 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 12:54:04 authenticatetokenimpl.go:47: rEkibkybLvKLEcQFGLjp
TRACE: 2017/05/10 12:54:05 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 12:54:05 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 12:54:08 authenticatetokenimpl.go:51: rEkibkybLvKLEcQFGLjp
TRACE: 2017/05/10 12:54:08 authenticatetokenimpl.go:59: Type is rEkibkybLvKLEcQFGLjp
TRACE: 2017/05/10 12:54:08 aunthenticate.go:42: 2017-05-10 12:54:08
TRACE: 2017/05/10 12:54:08 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 12:54:12 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 12:54:12 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 12:54:15 authenticatetokenimpl.go:30: {0xc0421bf030 0xc0422d4cf0}
TRACE: 2017/05/10 12:54:15 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 12:54:15 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 12:54:15 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 12:54:15 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 12:54:15 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 12:54:15 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 12:54:15 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 12:54:20 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0421f55c0 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 12:54:30 questionimpl.go:30: &{0xc0422b8230 0x718e40 0xc0421f3e80 false [] <nil> 0xc0422e6270}
TRACE: 2017/05/10 12:54:35 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/10 12:54:35 AnswerList.go:23: [{0 2 } {0 6 } {0 10 } {0 7 } {0 1 } {0 3 } {0 8 } {0 9 } {0 5 } {0 4 }]
TRACE: 2017/05/10 12:54:35 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/10 12:54:35 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/10 12:54:35 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/10 12:54:35 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/10 12:54:35 CalculateScore.go:30: answerList [{0 2 } {0 6 } {0 10 } {0 7 } {0 1 } {0 3 } {0 8 } {0 9 } {0 5 } {0 4 }]
TRACE: 2017/05/10 12:54:35 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 12:54:35 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 12:54:35 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 12:54:35 questionimpl.go:98: executing query and fetching answers 
TRACE: 2017/05/10 12:54:36 questionimpl.go:105: dial tcp 127.0.0.1:3306: connectex: No connection could be made because the target machine actively refused it.
TRACE: 2017/05/10 12:58:55 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/05/10 12:58:55 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/05/10 12:58:55 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/05/10 12:58:55 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/05/10 12:58:55 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/05/10 12:58:55 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/05/10 12:58:55 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/05/10 12:58:55 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/05/10 12:58:55 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/05/10 12:58:55 debug.go:45: [GIN-debug] Listening and serving HTTP on :8084
TRACE: 2017/05/10 13:01:44 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 13:01:44 QuestionList.go:18: 
TRACE: 2017/05/10 13:01:44 QuestionList.go:19: 
TRACE: 2017/05/10 13:01:44 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 13:01:44 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 13:01:44 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 13:01:44 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 13:01:46 authenticatetokenimpl.go:47: 
TRACE: 2017/05/10 13:01:46 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 13:01:46 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 13:01:48 authenticatetokenimpl.go:51: 
TRACE: 2017/05/10 13:01:48 authenticatetokenimpl.go:54: No uid with that token.
TRACE: 2017/05/10 13:02:42 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 13:02:42 QuestionList.go:18: 
TRACE: 2017/05/10 13:02:42 QuestionList.go:19: 
TRACE: 2017/05/10 13:02:42 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 13:02:42 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 13:02:42 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 13:02:42 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 13:02:44 authenticatetokenimpl.go:47: 
TRACE: 2017/05/10 13:02:44 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 13:02:44 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 13:02:46 authenticatetokenimpl.go:51: 
TRACE: 2017/05/10 13:02:46 authenticatetokenimpl.go:54: No uid with that token.
TRACE: 2017/05/10 13:03:48 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 13:03:48 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 13:03:48 Login.go:20: {0    vinayphenix@gmail.com calyxN@143 }
TRACE: 2017/05/10 13:03:48 Login.go:16: entering manager.login
TRACE: 2017/05/10 13:03:48 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 13:03:48 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 13:03:48 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 13:03:53 userimpl.go:109: Response user Obj :  {201 vinay phenix 9666430037   }
TRACE: 2017/05/10 13:03:53 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/10 13:03:53 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/10 13:03:55 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/10 13:03:55 loginimpl.go:81: executing query.....
TRACE: 2017/05/10 13:03:57 loginimpl.go:93: {0xc0422a8230 0xc0422a45f0}
TRACE: 2017/05/10 13:03:57 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/10 13:03:57 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/10 13:03:57 loginimpl.go:16: exntering in SaveToken() function {0 201 RanxSagAjxspQdODyPXK 2017-05-10 13:03:53.0031455 +0530 IST}
TRACE: 2017/05/10 13:03:57 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/10 13:03:59 loginimpl.go:20: token inserted
TRACE: 2017/05/10 13:03:59 loginimpl.go:21: {0 201 RanxSagAjxspQdODyPXK 2017-05-10 13:03:53.0031455 +0530 IST}
TRACE: 2017/05/10 13:04:01 loginimpl.go:33: {0xc0421a3260 0xc0421ff0c0}
TRACE: 2017/05/10 13:04:01 Login.go:48: {201 vinay RanxSagAjxspQdODyPXK }
TRACE: 2017/05/10 13:04:10 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 13:04:10 QuestionList.go:18: fundamental
TRACE: 2017/05/10 13:04:10 QuestionList.go:19: RanxSagAjxspQdODyPXK
TRACE: 2017/05/10 13:04:10 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 13:04:10 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 13:04:10 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 13:04:10 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 13:04:12 authenticatetokenimpl.go:47: RanxSagAjxspQdODyPXK
TRACE: 2017/05/10 13:04:12 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 13:04:12 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 13:04:14 authenticatetokenimpl.go:51: RanxSagAjxspQdODyPXK
TRACE: 2017/05/10 13:04:14 authenticatetokenimpl.go:59: Type is RanxSagAjxspQdODyPXK
TRACE: 2017/05/10 13:04:14 aunthenticate.go:42: 2017-05-10 13:04:14
TRACE: 2017/05/10 13:04:14 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 13:04:59 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 13:04:59 QuestionList.go:18: java
TRACE: 2017/05/10 13:04:59 QuestionList.go:19: RanxSagAjxspQdODyPXK
TRACE: 2017/05/10 13:04:59 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 13:04:59 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 13:04:59 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 13:04:59 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 13:05:01 authenticatetokenimpl.go:47: RanxSagAjxspQdODyPXK
TRACE: 2017/05/10 13:05:01 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 13:05:01 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 13:05:03 authenticatetokenimpl.go:51: RanxSagAjxspQdODyPXK
TRACE: 2017/05/10 13:05:03 authenticatetokenimpl.go:59: Type is RanxSagAjxspQdODyPXK
TRACE: 2017/05/10 13:05:03 aunthenticate.go:42: 2017-05-10 13:05:03
TRACE: 2017/05/10 13:05:03 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 13:05:06 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 13:05:06 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 13:05:08 authenticatetokenimpl.go:30: {0xc042136460 0xc042005af0}
TRACE: 2017/05/10 13:05:08 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 13:05:08 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 13:05:08 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 13:05:08 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 13:05:08 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 13:05:08 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 13:05:08 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 13:05:10 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc04203ba40 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 13:05:12 questionimpl.go:30: &{0xc042136770 0x718e40 0xc0422a6560 false [] <nil> 0xc042125560}
TRACE: 2017/05/10 13:06:44 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 13:06:44 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 13:06:44 Login.go:20: {0    r@r.com 123 }
TRACE: 2017/05/10 13:06:44 Login.go:16: entering manager.login
TRACE: 2017/05/10 13:06:44 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 13:06:44 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 13:06:44 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 13:06:49 userimpl.go:109: Response user Obj :  {0      }
TRACE: 2017/05/10 13:11:29 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 13:11:29 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 13:11:29 Login.go:20: {0    r@r.com 123 }
TRACE: 2017/05/10 13:11:29 Login.go:16: entering manager.login
TRACE: 2017/05/10 13:11:29 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 13:11:29 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 13:11:29 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 13:11:33 userimpl.go:109: Response user Obj :  {0      }
TRACE: 2017/05/10 13:12:53 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 13:12:53 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 13:12:53 Login.go:20: {0    r@r.com Test123 }
TRACE: 2017/05/10 13:12:53 Login.go:16: entering manager.login
TRACE: 2017/05/10 13:12:53 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 13:12:53 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 13:12:53 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 13:12:58 userimpl.go:109: Response user Obj :  {199 risabh sharma 12121212121   }
TRACE: 2017/05/10 13:12:58 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/10 13:12:58 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/10 13:13:00 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/10 13:13:00 loginimpl.go:81: executing query.....
TRACE: 2017/05/10 13:13:02 loginimpl.go:93: {0xc042112540 0xc0420ee160}
TRACE: 2017/05/10 13:13:02 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/10 13:13:02 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/10 13:13:02 loginimpl.go:16: exntering in SaveToken() function {0 199 TicEUYCwuTWCbPJOlvrc 2017-05-10 13:12:58.3252392 +0530 IST}
TRACE: 2017/05/10 13:13:02 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/10 13:13:04 loginimpl.go:20: token inserted
TRACE: 2017/05/10 13:13:04 loginimpl.go:21: {0 199 TicEUYCwuTWCbPJOlvrc 2017-05-10 13:12:58.3252392 +0530 IST}
TRACE: 2017/05/10 13:13:06 loginimpl.go:33: {0xc0421363f0 0xc0421d4510}
TRACE: 2017/05/10 13:13:06 Login.go:48: {199 risabh TicEUYCwuTWCbPJOlvrc }
TRACE: 2017/05/10 13:13:35 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 13:13:35 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 13:13:35 Login.go:20: {0    r@r.com 123 }
TRACE: 2017/05/10 13:13:35 Login.go:16: entering manager.login
TRACE: 2017/05/10 13:13:35 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 13:13:35 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 13:13:35 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 13:19:07 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 13:19:07 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 13:19:07 Login.go:20: {0    r@r.com 123 }
TRACE: 2017/05/10 13:19:07 Login.go:16: entering manager.login
TRACE: 2017/05/10 13:19:07 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 13:19:07 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 13:19:07 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 13:19:14 userimpl.go:109: Response user Obj :  {0      }
TRACE: 2017/05/10 13:20:33 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 13:20:33 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 13:20:33 Login.go:20: {0    r@r.com 123 }
TRACE: 2017/05/10 13:20:33 Login.go:16: entering manager.login
TRACE: 2017/05/10 13:20:33 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 13:20:33 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 13:20:33 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 13:20:38 userimpl.go:109: Response user Obj :  {0      }
TRACE: 2017/05/10 13:20:55 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 13:20:55 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 13:20:55 Login.go:20: {0    r@r.com 123 }
TRACE: 2017/05/10 13:20:55 Login.go:16: entering manager.login
TRACE: 2017/05/10 13:20:55 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 13:20:55 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 13:20:55 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 13:20:59 userimpl.go:109: Response user Obj :  {0      }
TRACE: 2017/05/10 13:21:26 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 13:21:26 QuestionList.go:18: fundamental
TRACE: 2017/05/10 13:21:26 QuestionList.go:19: 
TRACE: 2017/05/10 13:21:26 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 13:21:26 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 13:21:26 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 13:21:26 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 13:21:28 authenticatetokenimpl.go:47: 
TRACE: 2017/05/10 13:21:28 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 13:21:28 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 13:21:30 authenticatetokenimpl.go:51: 
TRACE: 2017/05/10 13:21:30 authenticatetokenimpl.go:54: No uid with that token.
TRACE: 2017/05/10 13:23:09 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 13:23:09 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 13:23:09 Login.go:20: {0    r@r.com Test123 }
TRACE: 2017/05/10 13:23:09 Login.go:16: entering manager.login
TRACE: 2017/05/10 13:23:09 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 13:23:09 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 13:23:09 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 13:23:13 userimpl.go:109: Response user Obj :  {199 risabh sharma 12121212121   }
TRACE: 2017/05/10 13:23:13 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/10 13:23:13 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/10 13:23:16 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/10 13:23:16 loginimpl.go:81: executing query.....
TRACE: 2017/05/10 13:23:19 loginimpl.go:93: {0xc04210a4d0 0xc0422a4350}
TRACE: 2017/05/10 13:23:19 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/10 13:23:19 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/10 13:23:19 loginimpl.go:16: exntering in SaveToken() function {0 199 rMGOGMNbUvOgCLHVxbkG 2017-05-10 13:23:13.6384478 +0530 IST}
TRACE: 2017/05/10 13:23:19 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/10 13:23:22 loginimpl.go:20: token inserted
TRACE: 2017/05/10 13:23:22 loginimpl.go:21: {0 199 rMGOGMNbUvOgCLHVxbkG 2017-05-10 13:23:13.6384478 +0530 IST}
TRACE: 2017/05/10 13:23:24 loginimpl.go:33: {0xc042112690 0xc0421d4a90}
TRACE: 2017/05/10 13:23:24 Login.go:48: {199 risabh rMGOGMNbUvOgCLHVxbkG }
TRACE: 2017/05/10 13:27:20 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 13:27:20 QuestionList.go:18: "java"
TRACE: 2017/05/10 13:27:20 QuestionList.go:19: "rMGOGMNbUvOgCLHVxbkG"
TRACE: 2017/05/10 13:27:20 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 13:27:20 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 13:27:20 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 13:27:20 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 13:27:23 authenticatetokenimpl.go:47: "rMGOGMNbUvOgCLHVxbkG"
TRACE: 2017/05/10 13:27:23 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 13:27:23 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 13:27:25 authenticatetokenimpl.go:51: 
TRACE: 2017/05/10 13:27:25 authenticatetokenimpl.go:54: No uid with that token.
TRACE: 2017/05/10 13:27:47 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 13:27:47 QuestionList.go:18: "java"
TRACE: 2017/05/10 13:27:47 QuestionList.go:19: "rMGOGMNbUvOgCLHVxbkG"
TRACE: 2017/05/10 13:27:47 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 13:27:47 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 13:27:47 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 13:27:47 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 13:27:49 authenticatetokenimpl.go:47: "rMGOGMNbUvOgCLHVxbkG"
TRACE: 2017/05/10 13:27:49 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 13:27:49 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 13:27:51 authenticatetokenimpl.go:51: 
TRACE: 2017/05/10 13:27:51 authenticatetokenimpl.go:54: No uid with that token.
TRACE: 2017/05/10 13:32:44 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 13:32:44 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 13:32:44 Login.go:20: {0    r@r.com Test123 }
TRACE: 2017/05/10 13:32:44 Login.go:16: entering manager.login
TRACE: 2017/05/10 13:32:44 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 13:32:44 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 13:32:44 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 13:32:49 userimpl.go:109: Response user Obj :  {199 risabh sharma 12121212121   }
TRACE: 2017/05/10 13:32:49 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/10 13:32:49 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/10 13:32:51 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/10 13:32:51 loginimpl.go:81: executing query.....
TRACE: 2017/05/10 13:32:53 loginimpl.go:93: {0xc0421123f0 0xc0421d4570}
TRACE: 2017/05/10 13:32:53 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/10 13:32:53 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/10 13:32:53 loginimpl.go:16: exntering in SaveToken() function {0 199 GBFtLhxGTbgnaDEmvkfS 2017-05-10 13:32:49.2359685 +0530 IST}
TRACE: 2017/05/10 13:32:53 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/10 13:32:55 loginimpl.go:20: token inserted
TRACE: 2017/05/10 13:32:55 loginimpl.go:21: {0 199 GBFtLhxGTbgnaDEmvkfS 2017-05-10 13:32:49.2359685 +0530 IST}
TRACE: 2017/05/10 13:32:57 loginimpl.go:33: {0xc042122540 0xc0421d4cf0}
TRACE: 2017/05/10 13:32:57 Login.go:48: {199 risabh GBFtLhxGTbgnaDEmvkfS }
TRACE: 2017/05/10 13:34:36 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 13:34:36 QuestionList.go:18: "java"
TRACE: 2017/05/10 13:34:36 QuestionList.go:19: "GBFtLhxGTbgnaDEmvkfS"
TRACE: 2017/05/10 13:34:36 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 13:34:36 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 13:34:36 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 13:34:36 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 13:34:38 authenticatetokenimpl.go:47: "GBFtLhxGTbgnaDEmvkfS"
TRACE: 2017/05/10 13:34:38 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 13:34:38 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 13:34:40 authenticatetokenimpl.go:51: 
TRACE: 2017/05/10 13:34:40 authenticatetokenimpl.go:54: No uid with that token.
TRACE: 2017/05/10 13:40:58 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 13:40:58 QuestionList.go:18: "java"
TRACE: 2017/05/10 13:40:58 QuestionList.go:19: "GBFtLhxGTbgnaDEmvkfS"
TRACE: 2017/05/10 13:40:58 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 13:40:58 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 13:40:58 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 13:40:58 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 13:41:00 authenticatetokenimpl.go:47: "GBFtLhxGTbgnaDEmvkfS"
TRACE: 2017/05/10 13:41:00 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 13:41:00 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 13:41:02 authenticatetokenimpl.go:51: 
TRACE: 2017/05/10 13:41:02 authenticatetokenimpl.go:54: No uid with that token.
TRACE: 2017/05/10 14:20:37 RegisterUser.go:14: entering in webservice.RegisterUser
TRACE: 2017/05/10 14:20:37 RegisterUser.go:18: calling manager.Register function
TRACE: 2017/05/10 14:20:37 register.go:17: entering in  manager.Register() function
TRACE: 2017/05/10 14:20:37 register.go:19: calling register manager
TRACE: 2017/05/10 14:20:37 register.go:21: calling userDao.CheckUser function
TRACE: 2017/05/10 14:20:37 userimpl.go:50: entering in userDao.CheckUser()...
TRACE: 2017/05/10 14:20:37 userimpl.go:53: executing query and checking user exists
TRACE: 2017/05/10 14:20:41 register.go:33: calling userDao.SaveNewUser() function
TRACE: 2017/05/10 14:20:41 userimpl.go:17: entering in SaveNewUser() function
TRACE: 2017/05/10 14:20:41 userimpl.go:20: executing query and storing registration details
TRACE: 2017/05/10 14:20:45 userimpl.go:26: <nil>
TRACE: 2017/05/10 14:20:46 register.go:38: {204  registration successful}
TRACE: 2017/05/10 14:21:00 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 14:21:00 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 14:21:00 Login.go:20: {0    r@d.com Test@123 }
TRACE: 2017/05/10 14:21:00 Login.go:16: entering manager.login
TRACE: 2017/05/10 14:21:00 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 14:21:00 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 14:21:00 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 14:21:05 userimpl.go:109: Response user Obj :  {204 rahul desai 2124542434   }
TRACE: 2017/05/10 14:21:05 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/10 14:21:05 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/10 14:21:07 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/10 14:21:07 loginimpl.go:81: executing query.....
TRACE: 2017/05/10 14:21:09 loginimpl.go:93: {0xc042122000 0xc0421d4180}
TRACE: 2017/05/10 14:21:09 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/10 14:21:09 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/10 14:21:09 loginimpl.go:16: exntering in SaveToken() function {0 204 PLnTbRzmoQAIAhTFyLOX 2017-05-10 14:21:05.0047096 +0530 IST}
TRACE: 2017/05/10 14:21:09 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/10 14:21:11 loginimpl.go:20: token inserted
TRACE: 2017/05/10 14:21:11 loginimpl.go:21: {0 204 PLnTbRzmoQAIAhTFyLOX 2017-05-10 14:21:05.0047096 +0530 IST}
TRACE: 2017/05/10 14:21:13 loginimpl.go:33: {0xc04210a5b0 0xc042121540}
TRACE: 2017/05/10 14:21:13 Login.go:48: {204 rahul PLnTbRzmoQAIAhTFyLOX }
TRACE: 2017/05/10 14:21:23 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 14:21:23 QuestionList.go:18: java
TRACE: 2017/05/10 14:21:23 QuestionList.go:19: PLnTbRzmoQAIAhTFyLOX
TRACE: 2017/05/10 14:21:23 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 14:21:23 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 14:21:23 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 14:21:23 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 14:21:26 authenticatetokenimpl.go:47: PLnTbRzmoQAIAhTFyLOX
TRACE: 2017/05/10 14:21:26 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 14:21:26 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 14:21:28 authenticatetokenimpl.go:51: PLnTbRzmoQAIAhTFyLOX
TRACE: 2017/05/10 14:21:28 authenticatetokenimpl.go:59: Type is PLnTbRzmoQAIAhTFyLOX
TRACE: 2017/05/10 14:21:28 aunthenticate.go:42: 2017-05-10 14:21:28
TRACE: 2017/05/10 14:21:28 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 14:21:30 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 14:21:30 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 14:21:32 authenticatetokenimpl.go:30: {0xc04210ac40 0xc0422a44e0}
TRACE: 2017/05/10 14:21:32 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 14:21:32 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 14:21:32 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 14:21:32 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 14:21:32 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 14:21:32 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 14:21:32 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 14:23:36 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 14:23:36 QuestionList.go:18: "java"
TRACE: 2017/05/10 14:23:36 QuestionList.go:19: "GBFtLhxGTbgnaDEmvkfS"
TRACE: 2017/05/10 14:23:36 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 14:23:36 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 14:23:36 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 14:23:36 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 14:23:38 authenticatetokenimpl.go:47: "GBFtLhxGTbgnaDEmvkfS"
TRACE: 2017/05/10 14:23:38 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 14:23:38 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 14:23:40 authenticatetokenimpl.go:51: 
TRACE: 2017/05/10 14:23:40 authenticatetokenimpl.go:54: No uid with that token.
TRACE: 2017/05/10 14:24:16 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 14:24:16 QuestionList.go:18: language
TRACE: 2017/05/10 14:24:16 QuestionList.go:19: PLnTbRzmoQAIAhTFyLOX
TRACE: 2017/05/10 14:24:16 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 14:24:16 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 14:24:16 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 14:24:16 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 14:24:18 authenticatetokenimpl.go:47: PLnTbRzmoQAIAhTFyLOX
TRACE: 2017/05/10 14:24:18 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 14:24:18 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 14:24:20 authenticatetokenimpl.go:51: PLnTbRzmoQAIAhTFyLOX
TRACE: 2017/05/10 14:24:20 authenticatetokenimpl.go:59: Type is PLnTbRzmoQAIAhTFyLOX
TRACE: 2017/05/10 14:24:20 aunthenticate.go:42: 2017-05-10 14:24:20
TRACE: 2017/05/10 14:24:20 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 14:24:22 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 14:24:22 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 14:24:24 authenticatetokenimpl.go:30: {0xc042136d20 0xc0420ee0e0}
TRACE: 2017/05/10 14:24:24 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 14:24:24 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 14:24:24 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 14:24:24 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 14:24:24 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 14:24:24 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 14:24:24 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 14:24:26 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc04233d380 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 14:24:28 questionimpl.go:30: &{0xc04210a3f0 0x718e40 0xc0422a69a0 false [] <nil> 0xc0421de570}
TRACE: 2017/05/10 14:25:07 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/10 14:25:07 AnswerList.go:23: [{0 41 tractability} {0 38 written contract} {0 40 nucleus} {0 37 very busy} {0 36 made angry} {0 43 have been agreed for} {0 39 synopsis,reservations} {0 42 infallible,mythological}]
TRACE: 2017/05/10 14:25:07 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/10 14:25:07 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/10 14:25:07 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/10 14:25:07 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/10 14:25:07 CalculateScore.go:30: answerList [{0 41 tractability} {0 38 written contract} {0 40 nucleus} {0 37 very busy} {0 36 made angry} {0 43 have been agreed for} {0 39 synopsis,reservations} {0 42 infallible,mythological}]
TRACE: 2017/05/10 14:25:07 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 14:25:07 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 14:25:07 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 14:25:07 questionimpl.go:98: executing query and fetching answers 
TRACE: 2017/05/10 14:25:08 questionimpl.go:105: dial tcp 127.0.0.1:3306: connectex: No connection could be made because the target machine actively refused it.
TRACE: 2017/05/10 14:26:16 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/05/10 14:26:16 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/05/10 14:26:16 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/05/10 14:26:16 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/05/10 14:26:16 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/05/10 14:26:16 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/05/10 14:26:16 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/05/10 14:26:16 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/05/10 14:26:16 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/05/10 14:26:16 debug.go:45: [GIN-debug] Listening and serving HTTP on :8084
TRACE: 2017/05/10 14:26:34 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 14:26:34 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 14:26:34 Login.go:20: {0    r@d.com Test@123 }
TRACE: 2017/05/10 14:26:34 Login.go:16: entering manager.login
TRACE: 2017/05/10 14:26:34 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 14:26:34 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 14:26:34 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 14:26:38 userimpl.go:109: Response user Obj :  {204 rahul desai 2124542434   }
TRACE: 2017/05/10 14:26:38 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/10 14:26:38 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/10 14:26:41 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/10 14:26:41 loginimpl.go:81: executing query.....
TRACE: 2017/05/10 14:26:43 loginimpl.go:93: {0xc0422d4070 0xc0422be0f0}
TRACE: 2017/05/10 14:26:43 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/10 14:26:43 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/10 14:26:43 loginimpl.go:16: exntering in SaveToken() function {0 204 bMDBOQSNCUgebkNbCnnp 2017-05-10 14:26:38.5869601 +0530 IST}
TRACE: 2017/05/10 14:26:43 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/10 14:26:46 loginimpl.go:20: token inserted
TRACE: 2017/05/10 14:26:46 loginimpl.go:21: {0 204 bMDBOQSNCUgebkNbCnnp 2017-05-10 14:26:38.5869601 +0530 IST}
TRACE: 2017/05/10 14:26:48 loginimpl.go:33: {0xc0421bf340 0xc0421e0cc0}
TRACE: 2017/05/10 14:26:48 Login.go:48: {204 rahul bMDBOQSNCUgebkNbCnnp }
TRACE: 2017/05/10 14:26:58 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 14:26:58 QuestionList.go:18: language
TRACE: 2017/05/10 14:26:58 QuestionList.go:19: bMDBOQSNCUgebkNbCnnp
TRACE: 2017/05/10 14:26:58 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 14:26:58 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 14:26:58 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 14:26:58 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 14:27:00 authenticatetokenimpl.go:47: bMDBOQSNCUgebkNbCnnp
TRACE: 2017/05/10 14:27:00 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 14:27:00 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 14:27:02 authenticatetokenimpl.go:51: bMDBOQSNCUgebkNbCnnp
TRACE: 2017/05/10 14:27:02 authenticatetokenimpl.go:59: Type is bMDBOQSNCUgebkNbCnnp
TRACE: 2017/05/10 14:27:02 aunthenticate.go:42: 2017-05-10 14:27:02
TRACE: 2017/05/10 14:27:02 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 14:27:04 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 14:27:04 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 14:27:06 authenticatetokenimpl.go:30: {0xc0421bfb20 0xc0423660b0}
TRACE: 2017/05/10 14:27:06 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 14:27:06 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 14:27:06 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 14:27:06 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 14:27:06 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 14:27:06 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 14:27:06 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 14:27:09 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0421e2e40 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 14:27:11 questionimpl.go:30: &{0xc04234c070 0x718e40 0xc042372920 false [] <nil> 0xc0422a2150}
TRACE: 2017/05/10 14:28:11 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 14:28:11 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 14:28:11 Login.go:20: {0    r@d.com Test@123 }
TRACE: 2017/05/10 14:28:11 Login.go:16: entering manager.login
TRACE: 2017/05/10 14:28:11 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 14:28:11 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 14:28:11 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 14:28:16 userimpl.go:109: Response user Obj :  {204 rahul desai 2124542434   }
TRACE: 2017/05/10 14:28:16 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/10 14:28:16 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/10 14:28:18 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/10 14:28:18 loginimpl.go:81: executing query.....
TRACE: 2017/05/10 14:28:20 loginimpl.go:93: {0xc042032460 0xc042004940}
TRACE: 2017/05/10 14:28:20 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/10 14:28:20 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/10 14:28:20 loginimpl.go:16: exntering in SaveToken() function {0 204 jHidGDcffWZQaiRAQqRo 2017-05-10 14:28:16.1333158 +0530 IST}
TRACE: 2017/05/10 14:28:20 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/10 14:28:22 loginimpl.go:20: token inserted
TRACE: 2017/05/10 14:28:22 loginimpl.go:21: {0 204 jHidGDcffWZQaiRAQqRo 2017-05-10 14:28:16.1333158 +0530 IST}
TRACE: 2017/05/10 14:28:24 loginimpl.go:33: {0xc042386a80 0xc042367f70}
TRACE: 2017/05/10 14:28:24 Login.go:48: {204 rahul jHidGDcffWZQaiRAQqRo }
TRACE: 2017/05/10 14:28:33 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 14:28:33 QuestionList.go:18: fundamental
TRACE: 2017/05/10 14:28:33 QuestionList.go:19: jHidGDcffWZQaiRAQqRo
TRACE: 2017/05/10 14:28:33 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 14:28:33 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 14:28:33 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 14:28:33 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 14:28:35 authenticatetokenimpl.go:47: jHidGDcffWZQaiRAQqRo
TRACE: 2017/05/10 14:28:35 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 14:28:35 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 14:28:37 authenticatetokenimpl.go:51: jHidGDcffWZQaiRAQqRo
TRACE: 2017/05/10 14:28:37 authenticatetokenimpl.go:59: Type is jHidGDcffWZQaiRAQqRo
TRACE: 2017/05/10 14:28:37 aunthenticate.go:42: 2017-05-10 14:28:37
TRACE: 2017/05/10 14:28:37 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 14:28:39 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 14:28:39 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 14:28:42 authenticatetokenimpl.go:30: {0xc0422d47e0 0xc042005390}
TRACE: 2017/05/10 14:28:42 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 14:28:42 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 14:28:42 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 14:28:42 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 14:28:42 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 14:28:42 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 14:28:42 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 14:28:44 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0422e5da0 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 14:28:46 questionimpl.go:30: &{0xc042032b60 0x718e40 0xc04241e520 false [] <nil> 0xc0420073e0}
TRACE: 2017/05/10 14:38:09 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 14:38:09 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 14:38:09 Login.go:20: {0    r@d.com Test@123 }
TRACE: 2017/05/10 14:38:09 Login.go:16: entering manager.login
TRACE: 2017/05/10 14:38:09 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 14:38:09 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 14:38:09 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 14:38:13 userimpl.go:109: Response user Obj :  {204 rahul desai 2124542434   }
TRACE: 2017/05/10 14:38:13 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/10 14:38:13 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/10 14:38:15 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/10 14:38:15 loginimpl.go:81: executing query.....
TRACE: 2017/05/10 14:38:17 loginimpl.go:93: {0xc0422d4e70 0xc0422bff80}
TRACE: 2017/05/10 14:38:17 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/10 14:38:17 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/10 14:38:17 loginimpl.go:16: exntering in SaveToken() function {0 204 UtMOFSprYlokUtlJIUnY 2017-05-10 14:38:13.534253 +0530 IST}
TRACE: 2017/05/10 14:38:17 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/10 14:38:20 loginimpl.go:20: token inserted
TRACE: 2017/05/10 14:38:20 loginimpl.go:21: {0 204 UtMOFSprYlokUtlJIUnY 2017-05-10 14:38:13.534253 +0530 IST}
TRACE: 2017/05/10 14:38:22 loginimpl.go:33: {0xc042386f50 0xc0423d4ac0}
TRACE: 2017/05/10 14:38:22 Login.go:48: {204 rahul UtMOFSprYlokUtlJIUnY }
TRACE: 2017/05/10 14:38:43 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 14:38:43 QuestionList.go:18: language
TRACE: 2017/05/10 14:38:43 QuestionList.go:19: UtMOFSprYlokUtlJIUnY
TRACE: 2017/05/10 14:38:43 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 14:38:43 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 14:38:43 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 14:38:43 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 14:38:45 authenticatetokenimpl.go:47: UtMOFSprYlokUtlJIUnY
TRACE: 2017/05/10 14:38:45 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 14:38:45 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 14:38:47 authenticatetokenimpl.go:51: UtMOFSprYlokUtlJIUnY
TRACE: 2017/05/10 14:38:47 authenticatetokenimpl.go:59: Type is UtMOFSprYlokUtlJIUnY
TRACE: 2017/05/10 14:38:47 aunthenticate.go:42: 2017-05-10 14:38:47
TRACE: 2017/05/10 14:38:47 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 14:38:49 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 14:38:49 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 14:38:51 authenticatetokenimpl.go:30: {0xc042033110 0xc042005d50}
TRACE: 2017/05/10 14:38:51 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 14:38:51 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 14:38:51 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 14:38:51 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 14:38:51 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 14:38:51 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 14:38:51 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 14:38:54 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc04232d920 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 14:38:56 questionimpl.go:30: &{0xc042387570 0x718e40 0xc042492360 false [] <nil> 0xc042385ef0}
TRACE: 2017/05/10 14:39:18 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/10 14:39:18 AnswerList.go:23: [{0 43 are agreeable to} {0 42 reliable,inventive} {0 37 all of the above} {0 41 tractability} {0 39 totality,hedging} {0 38 partial invasion} {0 36 none of the above} {0 40 nucleus}]
TRACE: 2017/05/10 14:39:18 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/10 14:39:18 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/10 14:39:18 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/10 14:39:18 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/10 14:39:18 CalculateScore.go:30: answerList [{0 43 are agreeable to} {0 42 reliable,inventive} {0 37 all of the above} {0 41 tractability} {0 39 totality,hedging} {0 38 partial invasion} {0 36 none of the above} {0 40 nucleus}]
TRACE: 2017/05/10 14:39:18 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 14:39:18 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 14:39:18 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 14:39:18 questionimpl.go:98: executing query and fetching answers 
TRACE: 2017/05/10 14:39:19 questionimpl.go:105: dial tcp 127.0.0.1:3306: connectex: No connection could be made because the target machine actively refused it.
TRACE: 2017/05/10 14:39:37 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/05/10 14:39:37 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/05/10 14:39:37 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/05/10 14:39:37 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/05/10 14:39:37 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/05/10 14:39:37 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/05/10 14:39:37 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/05/10 14:39:37 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/05/10 14:39:37 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/05/10 14:39:37 debug.go:45: [GIN-debug] Listening and serving HTTP on :8084
TRACE: 2017/05/10 14:42:44 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 14:42:44 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 14:42:44 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/10 14:42:44 Login.go:16: entering manager.login
TRACE: 2017/05/10 14:42:44 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 14:42:44 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 14:42:44 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 14:42:48 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/10 14:42:48 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/10 14:42:48 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/10 14:42:50 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/10 14:42:50 loginimpl.go:81: executing query.....
TRACE: 2017/05/10 14:42:52 loginimpl.go:93: {0xc0420325b0 0xc042004b90}
TRACE: 2017/05/10 14:42:52 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/10 14:42:52 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/10 14:42:52 loginimpl.go:16: exntering in SaveToken() function {0 2 dLNOkBOSTfatgYSscqxB 2017-05-10 14:42:48.1464775 +0530 IST}
TRACE: 2017/05/10 14:42:52 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/10 14:42:54 loginimpl.go:20: token inserted
TRACE: 2017/05/10 14:42:54 loginimpl.go:21: {0 2 dLNOkBOSTfatgYSscqxB 2017-05-10 14:42:48.1464775 +0530 IST}
TRACE: 2017/05/10 14:42:56 loginimpl.go:33: {0xc0421beee0 0xc0422a2680}
TRACE: 2017/05/10 14:42:56 Login.go:48: {2 rakesh dLNOkBOSTfatgYSscqxB user}
TRACE: 2017/05/10 14:43:10 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 14:43:10 QuestionList.go:18: fundamental
TRACE: 2017/05/10 14:43:10 QuestionList.go:19: dLNOkBOSTfatgYSscqxB
TRACE: 2017/05/10 14:43:10 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 14:43:10 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 14:43:10 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 14:43:10 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 14:43:12 authenticatetokenimpl.go:47: dLNOkBOSTfatgYSscqxB
TRACE: 2017/05/10 14:43:12 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 14:43:12 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 14:43:14 authenticatetokenimpl.go:51: dLNOkBOSTfatgYSscqxB
TRACE: 2017/05/10 14:43:14 authenticatetokenimpl.go:59: Type is dLNOkBOSTfatgYSscqxB
TRACE: 2017/05/10 14:43:14 aunthenticate.go:42: 2017-05-10 14:43:14
TRACE: 2017/05/10 14:43:14 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 14:43:16 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 14:43:16 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 14:43:18 authenticatetokenimpl.go:30: {0xc042032b60 0xc0422c02e0}
TRACE: 2017/05/10 14:43:18 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 14:43:18 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 14:43:18 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 14:43:18 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 14:43:18 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 14:43:18 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 14:43:18 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 14:43:20 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0421f5320 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 14:43:22 questionimpl.go:30: &{0xc0423363f0 0x718e40 0xc0422b1440 false [] <nil> 0xc042312750}
TRACE: 2017/05/10 14:47:56 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 14:47:56 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 14:47:56 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/10 14:47:56 Login.go:16: entering manager.login
TRACE: 2017/05/10 14:47:56 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 14:47:56 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 14:47:56 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 14:48:01 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/10 14:48:01 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/10 14:48:01 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/10 14:48:03 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/10 14:48:03 loginimpl.go:81: executing query.....
TRACE: 2017/05/10 14:48:05 loginimpl.go:93: {0xc0423367e0 0xc0422c1050}
TRACE: 2017/05/10 14:48:05 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/10 14:48:05 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/10 14:48:05 loginimpl.go:16: exntering in SaveToken() function {0 2 qlciZPCoVUyEdUNqZmuo 2017-05-10 14:48:01.0584288 +0530 IST}
TRACE: 2017/05/10 14:48:05 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/10 14:48:07 loginimpl.go:20: token inserted
TRACE: 2017/05/10 14:48:07 loginimpl.go:21: {0 2 qlciZPCoVUyEdUNqZmuo 2017-05-10 14:48:01.0584288 +0530 IST}
TRACE: 2017/05/10 14:48:10 loginimpl.go:33: {0xc042033180 0xc0422c11c0}
TRACE: 2017/05/10 14:48:10 Login.go:48: {2 rakesh qlciZPCoVUyEdUNqZmuo user}
TRACE: 2017/05/10 14:48:26 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 14:48:26 QuestionList.go:18: fundamental
TRACE: 2017/05/10 14:48:26 QuestionList.go:19: qlciZPCoVUyEdUNqZmuo
TRACE: 2017/05/10 14:48:26 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 14:48:26 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 14:48:26 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 14:48:26 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 14:48:29 authenticatetokenimpl.go:47: qlciZPCoVUyEdUNqZmuo
TRACE: 2017/05/10 14:48:29 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 14:48:29 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 14:48:31 authenticatetokenimpl.go:51: qlciZPCoVUyEdUNqZmuo
TRACE: 2017/05/10 14:48:31 authenticatetokenimpl.go:59: Type is qlciZPCoVUyEdUNqZmuo
TRACE: 2017/05/10 14:48:31 aunthenticate.go:42: 2017-05-10 14:48:31
TRACE: 2017/05/10 14:48:31 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 14:48:34 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 14:48:34 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 14:48:36 authenticatetokenimpl.go:30: {0xc042336cb0 0xc0422c1b20}
TRACE: 2017/05/10 14:48:36 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 14:48:36 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 14:48:36 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 14:48:36 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 14:48:36 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 14:48:36 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 14:48:36 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 14:48:38 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0423acf00 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 14:48:40 questionimpl.go:30: &{0xc0421bf6c0 0x718e40 0xc042331520 false [] <nil> 0xc0423a24b0}
TRACE: 2017/05/10 14:49:02 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/10 14:49:02 AnswerList.go:23: [{0 5 a method that contains multiple defination} {0 1 both } {0 2 java} {0 8 shows the access defination for a diractory} {0 10 has to implement none of the methods from interface} {0 7 unit testing} {0 9 a process that is dead} {0 6 queue} {0 3 abstract class} {0 4 a way of delivering a class from another class }]
TRACE: 2017/05/10 14:49:02 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/10 14:49:02 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/10 14:49:02 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/10 14:49:02 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/10 14:49:02 CalculateScore.go:30: answerList [{0 5 a method that contains multiple defination} {0 1 both } {0 2 java} {0 8 shows the access defination for a diractory} {0 10 has to implement none of the methods from interface} {0 7 unit testing} {0 9 a process that is dead} {0 6 queue} {0 3 abstract class} {0 4 a way of delivering a class from another class }]
TRACE: 2017/05/10 14:49:02 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 14:49:02 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 14:49:02 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 14:49:02 questionimpl.go:98: executing query and fetching answers 
TRACE: 2017/05/10 14:49:03 questionimpl.go:105: dial tcp 127.0.0.1:3306: connectex: No connection could be made because the target machine actively refused it.
TRACE: 2017/05/10 15:06:46 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/05/10 15:06:46 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/05/10 15:06:46 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/05/10 15:06:46 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/05/10 15:06:46 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/05/10 15:06:46 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/05/10 15:06:46 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/05/10 15:06:46 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/05/10 15:06:46 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/05/10 15:06:46 debug.go:45: [GIN-debug] Listening and serving HTTP on :8084
TRACE: 2017/05/10 15:07:26 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 15:07:26 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 15:07:26 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/10 15:07:26 Login.go:16: entering manager.login
TRACE: 2017/05/10 15:07:26 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 15:07:26 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 15:07:26 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 15:07:30 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/10 15:07:30 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/10 15:07:30 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/10 15:07:32 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/10 15:07:32 loginimpl.go:81: executing query.....
TRACE: 2017/05/10 15:07:34 loginimpl.go:93: {0xc0421bf180 0xc04227e1e0}
TRACE: 2017/05/10 15:07:34 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/10 15:07:34 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/10 15:07:34 loginimpl.go:16: exntering in SaveToken() function {0 2 mSbjyiwyXyQkyCtrwRsl 2017-05-10 15:07:30.4020684 +0530 IST}
TRACE: 2017/05/10 15:07:34 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/10 15:07:37 loginimpl.go:20: token inserted
TRACE: 2017/05/10 15:07:37 loginimpl.go:21: {0 2 mSbjyiwyXyQkyCtrwRsl 2017-05-10 15:07:30.4020684 +0530 IST}
TRACE: 2017/05/10 15:07:39 loginimpl.go:33: {0xc04230a2a0 0xc0421e26b0}
TRACE: 2017/05/10 15:07:39 Login.go:48: {2 rakesh mSbjyiwyXyQkyCtrwRsl user}
TRACE: 2017/05/10 15:07:49 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 15:07:49 QuestionList.go:18: fundamental
TRACE: 2017/05/10 15:07:49 QuestionList.go:19: mSbjyiwyXyQkyCtrwRsl
TRACE: 2017/05/10 15:07:49 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 15:07:49 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 15:07:49 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 15:07:49 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 15:07:51 authenticatetokenimpl.go:47: mSbjyiwyXyQkyCtrwRsl
TRACE: 2017/05/10 15:07:51 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 15:07:51 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 15:07:53 authenticatetokenimpl.go:51: mSbjyiwyXyQkyCtrwRsl
TRACE: 2017/05/10 15:07:53 authenticatetokenimpl.go:59: Type is mSbjyiwyXyQkyCtrwRsl
TRACE: 2017/05/10 15:07:53 aunthenticate.go:42: 2017-05-10 15:07:53
TRACE: 2017/05/10 15:07:53 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 15:07:55 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 15:07:55 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 15:07:58 authenticatetokenimpl.go:30: {0xc04230a3f0 0xc04227e7e0}
TRACE: 2017/05/10 15:07:58 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 15:07:58 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 15:07:58 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 15:07:58 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 15:07:58 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 15:07:58 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 15:07:58 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 15:08:00 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc042289a40 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 15:08:02 questionimpl.go:30: &{0xc0421bf340 0x718ea0 0xc0421d7c20 false [] <nil> 0xc042326210}
TRACE: 2017/05/10 15:08:24 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/10 15:08:24 AnswerList.go:23: [{0 7 big O notation} {0 10 has to implement at least one method from the interface} {0 4 wraping up properties and method} {0 9 a process that automatically starts up when the machine is started} {0 2 objective c} {0 1 monitor} {0 3 interface} {0 5 a method that calls itself} {0 8 shows path of current directory} {0 6 queue}]
TRACE: 2017/05/10 15:08:24 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/10 15:08:24 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/10 15:08:24 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/10 15:08:24 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/10 15:08:24 CalculateScore.go:30: answerList [{0 7 big O notation} {0 10 has to implement at least one method from the interface} {0 4 wraping up properties and method} {0 9 a process that automatically starts up when the machine is started} {0 2 objective c} {0 1 monitor} {0 3 interface} {0 5 a method that calls itself} {0 8 shows path of current directory} {0 6 queue}]
TRACE: 2017/05/10 15:08:24 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:08:24 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:08:26 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:08:26 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:08:28 questionimpl.go:108: Type is big O notation
TRACE: 2017/05/10 15:08:28 questionimpl.go:111: correct Answer fir ID 7 big O notation
TRACE: 2017/05/10 15:08:28 CalculateScore.go:39: Binomial took %s 4.3418444s
TRACE: 2017/05/10 15:08:28 CalculateScore.go:41: actual vs correct big O notation big O notation
TRACE: 2017/05/10 15:08:28 CalculateScore.go:47: 263409560461970212832400
TRACE: 2017/05/10 15:08:29 CalculateScore.go:50: Binomial took %s 1.0018167s
TRACE: 2017/05/10 15:08:29 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:08:29 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:08:32 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 15:08:32 QuestionList.go:18: java
TRACE: 2017/05/10 15:08:32 QuestionList.go:19: mSbjyiwyXyQkyCtrwRsl
TRACE: 2017/05/10 15:08:32 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 15:08:32 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 15:08:32 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 15:08:32 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 15:08:34 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:08:34 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:08:36 authenticatetokenimpl.go:47: mSbjyiwyXyQkyCtrwRsl
TRACE: 2017/05/10 15:08:36 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 15:08:36 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 15:08:37 questionimpl.go:108: Type is has to implement all method defination from the interface
TRACE: 2017/05/10 15:08:37 questionimpl.go:111: correct Answer fir ID 10 has to implement all method defination from the interface
TRACE: 2017/05/10 15:08:37 CalculateScore.go:39: Binomial took %s 7.4450006s
TRACE: 2017/05/10 15:08:37 CalculateScore.go:41: actual vs correct has to implement at least one method from the interface has to implement all method defination from the interface
TRACE: 2017/05/10 15:08:37 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:08:37 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:08:38 authenticatetokenimpl.go:51: mSbjyiwyXyQkyCtrwRsl
TRACE: 2017/05/10 15:08:38 authenticatetokenimpl.go:59: Type is mSbjyiwyXyQkyCtrwRsl
TRACE: 2017/05/10 15:08:38 aunthenticate.go:42: 2017-05-10 15:08:38
TRACE: 2017/05/10 15:08:38 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 15:08:40 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:08:40 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:08:41 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 15:08:41 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 15:08:42 questionimpl.go:108: Type is wraping up properties and methods
TRACE: 2017/05/10 15:08:42 questionimpl.go:111: correct Answer fir ID 4 wraping up properties and methods
TRACE: 2017/05/10 15:08:42 CalculateScore.go:39: Binomial took %s 5.387405s
TRACE: 2017/05/10 15:08:42 CalculateScore.go:41: actual vs correct wraping up properties and method wraping up properties and methods
TRACE: 2017/05/10 15:08:42 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:08:42 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:08:43 authenticatetokenimpl.go:30: {0xc04230a850 0xc04227f800}
TRACE: 2017/05/10 15:08:43 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 15:08:43 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 15:08:43 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 15:08:43 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 15:08:43 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 15:08:43 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 15:08:43 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 15:08:45 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:08:45 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:08:46 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc04237c540 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 15:08:48 questionimpl.go:108: Type is a long running background process
TRACE: 2017/05/10 15:08:48 questionimpl.go:111: correct Answer fir ID 9 a long running background process
TRACE: 2017/05/10 15:08:48 CalculateScore.go:39: Binomial took %s 5.464107s
TRACE: 2017/05/10 15:08:48 CalculateScore.go:41: actual vs correct a process that automatically starts up when the machine is started a long running background process
TRACE: 2017/05/10 15:08:48 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:08:48 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:08:49 questionimpl.go:30: &{0xc0421bfc70 0x718ea0 0xc0423bdc60 false [] <nil> 0xc0423754a0}
TRACE: 2017/05/10 15:08:51 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:08:51 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:08:54 questionimpl.go:108: Type is c
TRACE: 2017/05/10 15:08:54 questionimpl.go:111: correct Answer fir ID 2 c
TRACE: 2017/05/10 15:08:54 CalculateScore.go:39: Binomial took %s 6.2925666s
TRACE: 2017/05/10 15:08:54 CalculateScore.go:41: actual vs correct objective c c
TRACE: 2017/05/10 15:08:54 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:08:54 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:08:57 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:08:57 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:09:00 questionimpl.go:108: Type is both
TRACE: 2017/05/10 15:09:00 questionimpl.go:111: correct Answer fir ID 1 both
TRACE: 2017/05/10 15:09:00 CalculateScore.go:39: Binomial took %s 5.7705512s
TRACE: 2017/05/10 15:09:00 CalculateScore.go:41: actual vs correct monitor both
TRACE: 2017/05/10 15:09:00 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:09:00 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:09:02 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:09:02 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:09:04 questionimpl.go:108: Type is method overriding
TRACE: 2017/05/10 15:09:04 questionimpl.go:111: correct Answer fir ID 3 method overriding
TRACE: 2017/05/10 15:09:04 CalculateScore.go:39: Binomial took %s 4.5387526s
TRACE: 2017/05/10 15:09:04 CalculateScore.go:41: actual vs correct interface method overriding
TRACE: 2017/05/10 15:09:04 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:09:04 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:09:07 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:09:07 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:09:09 questionimpl.go:108: Type is a method that calls itself
TRACE: 2017/05/10 15:09:09 questionimpl.go:111: correct Answer fir ID 5 a method that calls itself
TRACE: 2017/05/10 15:09:09 CalculateScore.go:39: Binomial took %s 4.6444675s
TRACE: 2017/05/10 15:09:09 CalculateScore.go:41: actual vs correct a method that calls itself a method that calls itself
TRACE: 2017/05/10 15:09:09 CalculateScore.go:47: 263409560461970212832400
TRACE: 2017/05/10 15:09:10 CalculateScore.go:50: Binomial took %s 1.0010965s
TRACE: 2017/05/10 15:09:10 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:09:10 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:09:12 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:09:12 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:09:14 questionimpl.go:108: Type is shows path of current directory
TRACE: 2017/05/10 15:09:14 questionimpl.go:111: correct Answer fir ID 8 shows path of current directory
TRACE: 2017/05/10 15:09:14 CalculateScore.go:39: Binomial took %s 4.6553461s
TRACE: 2017/05/10 15:09:14 CalculateScore.go:41: actual vs correct shows path of current directory shows path of current directory
TRACE: 2017/05/10 15:09:14 CalculateScore.go:47: 263409560461970212832400
TRACE: 2017/05/10 15:09:15 CalculateScore.go:50: Binomial took %s 1.0003301s
TRACE: 2017/05/10 15:09:15 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:09:15 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:09:18 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:09:18 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:09:20 questionimpl.go:108: Type is stack
TRACE: 2017/05/10 15:09:20 questionimpl.go:111: correct Answer fir ID 6 stack
TRACE: 2017/05/10 15:09:20 CalculateScore.go:39: Binomial took %s 4.6800275s
TRACE: 2017/05/10 15:09:20 CalculateScore.go:41: actual vs correct queue stack
TRACE: 2017/05/10 15:09:20 CalculateScore.go:55: Binomial took %s 56.2333189s
TRACE: 2017/05/10 15:16:30 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 15:16:30 QuestionList.go:18: java
TRACE: 2017/05/10 15:16:30 QuestionList.go:19: VblXiYeBoQgRcOhQvYde
TRACE: 2017/05/10 15:16:30 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 15:16:30 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 15:16:30 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 15:16:30 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 15:16:33 authenticatetokenimpl.go:47: VblXiYeBoQgRcOhQvYde
TRACE: 2017/05/10 15:16:33 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 15:16:33 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 15:16:35 authenticatetokenimpl.go:51: 
TRACE: 2017/05/10 15:16:35 authenticatetokenimpl.go:54: No uid with that token.
TRACE: 2017/05/10 15:16:54 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 15:16:54 QuestionList.go:18: java
TRACE: 2017/05/10 15:16:54 QuestionList.go:19: VblXiYeBoQgRcOhQvYde
TRACE: 2017/05/10 15:16:54 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 15:16:54 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 15:16:54 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 15:16:54 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 15:16:58 authenticatetokenimpl.go:47: VblXiYeBoQgRcOhQvYde
TRACE: 2017/05/10 15:16:58 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 15:16:58 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 15:17:00 authenticatetokenimpl.go:51: 
TRACE: 2017/05/10 15:17:00 authenticatetokenimpl.go:54: No uid with that token.
TRACE: 2017/05/10 15:19:32 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 15:19:32 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 15:19:32 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/10 15:19:32 Login.go:16: entering manager.login
TRACE: 2017/05/10 15:19:32 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 15:19:32 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 15:19:32 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 15:19:37 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/10 15:19:37 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/10 15:19:37 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/10 15:19:39 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/10 15:19:39 loginimpl.go:81: executing query.....
TRACE: 2017/05/10 15:19:41 loginimpl.go:93: {0xc042148150 0xc042044190}
TRACE: 2017/05/10 15:19:41 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/10 15:19:41 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/10 15:19:41 loginimpl.go:16: exntering in SaveToken() function {0 2 GFvVfAbGWgOJLFKHETaB 2017-05-10 15:19:37.0227512 +0530 IST}
TRACE: 2017/05/10 15:19:41 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/10 15:19:43 loginimpl.go:20: token inserted
TRACE: 2017/05/10 15:19:43 loginimpl.go:21: {0 2 GFvVfAbGWgOJLFKHETaB 2017-05-10 15:19:37.0227512 +0530 IST}
TRACE: 2017/05/10 15:19:45 loginimpl.go:33: {0xc0421387e0 0xc042137590}
TRACE: 2017/05/10 15:19:45 Login.go:48: {2 rakesh GFvVfAbGWgOJLFKHETaB user}
TRACE: 2017/05/10 15:20:11 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 15:20:11 QuestionList.go:18: java
TRACE: 2017/05/10 15:20:11 QuestionList.go:19: GFvVfAbGWgOJLFKHETaB
TRACE: 2017/05/10 15:20:11 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 15:20:11 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 15:20:11 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 15:20:11 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 15:20:13 authenticatetokenimpl.go:47: GFvVfAbGWgOJLFKHETaB
TRACE: 2017/05/10 15:20:13 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 15:20:13 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 15:20:15 authenticatetokenimpl.go:51: GFvVfAbGWgOJLFKHETaB
TRACE: 2017/05/10 15:20:15 authenticatetokenimpl.go:59: Type is GFvVfAbGWgOJLFKHETaB
TRACE: 2017/05/10 15:20:15 aunthenticate.go:42: 2017-05-10 15:20:15
TRACE: 2017/05/10 15:20:15 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 15:20:18 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 15:20:18 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 15:20:20 authenticatetokenimpl.go:30: {0xc0421bea10 0xc042045a90}
TRACE: 2017/05/10 15:20:20 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 15:20:20 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 15:20:20 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 15:20:20 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 15:20:20 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 15:20:20 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 15:20:20 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 15:20:22 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0424c26c0 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 15:20:25 questionimpl.go:30: &{0xc042138bd0 0x718ea0 0xc042009dc0 false [] <nil> 0xc042284f90}
TRACE: 2017/05/10 15:23:14 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 15:23:14 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 15:23:14 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/10 15:23:14 Login.go:16: entering manager.login
TRACE: 2017/05/10 15:23:14 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 15:23:14 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 15:23:14 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 15:23:19 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/10 15:23:19 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/10 15:23:19 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/10 15:23:21 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/10 15:23:21 loginimpl.go:81: executing query.....
TRACE: 2017/05/10 15:23:23 loginimpl.go:93: {0xc042148770 0xc0421372c0}
TRACE: 2017/05/10 15:23:23 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/10 15:23:23 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/10 15:23:23 loginimpl.go:16: exntering in SaveToken() function {0 2 QUuYgELPGOiAnWhfPWhs 2017-05-10 15:23:19.1842943 +0530 IST}
TRACE: 2017/05/10 15:23:23 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/10 15:23:26 loginimpl.go:20: token inserted
TRACE: 2017/05/10 15:23:26 loginimpl.go:21: {0 2 QUuYgELPGOiAnWhfPWhs 2017-05-10 15:23:19.1842943 +0530 IST}
TRACE: 2017/05/10 15:23:28 loginimpl.go:33: {0xc0421be1c0 0xc042136930}
TRACE: 2017/05/10 15:23:28 Login.go:48: {2 rakesh QUuYgELPGOiAnWhfPWhs user}
TRACE: 2017/05/10 15:23:39 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 15:23:39 QuestionList.go:18: java
TRACE: 2017/05/10 15:23:39 QuestionList.go:19: QUuYgELPGOiAnWhfPWhs
TRACE: 2017/05/10 15:23:39 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 15:23:39 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 15:23:39 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 15:23:39 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 15:23:42 authenticatetokenimpl.go:47: QUuYgELPGOiAnWhfPWhs
TRACE: 2017/05/10 15:23:42 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 15:23:42 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 15:23:44 authenticatetokenimpl.go:51: QUuYgELPGOiAnWhfPWhs
TRACE: 2017/05/10 15:23:44 authenticatetokenimpl.go:59: Type is QUuYgELPGOiAnWhfPWhs
TRACE: 2017/05/10 15:23:44 aunthenticate.go:42: 2017-05-10 15:23:44
TRACE: 2017/05/10 15:23:44 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 15:23:46 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 15:23:46 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 15:23:49 authenticatetokenimpl.go:30: {0xc0421be770 0xc042137b30}
TRACE: 2017/05/10 15:23:49 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 15:23:49 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 15:23:49 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 15:23:49 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 15:23:49 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 15:23:49 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 15:23:49 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 15:23:51 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc04210ea20 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 15:23:53 questionimpl.go:30: &{0xc042128540 0x718ea0 0xc0420086e0 false [] <nil> 0xc042326420}
TRACE: 2017/05/10 15:24:54 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/10 15:24:54 AnswerList.go:23: [{0 35 } {0 22 } {0 28 } {0 31 } {0 12 } {0 29 } {0 24 } {0 14 } {0 33 } {0 34 } {0 18 } {0 11 } {0 15 } {0 16 } {0 21 } {0 32 } {0 19 } {0 20 } {0 25 } {0 13 } {0 26 } {0 23 } {0 17 } {0 27 } {0 30 }]
TRACE: 2017/05/10 15:24:54 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/10 15:24:54 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/10 15:24:54 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/10 15:24:54 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/10 15:24:54 CalculateScore.go:30: answerList [{0 35 } {0 22 } {0 28 } {0 31 } {0 12 } {0 29 } {0 24 } {0 14 } {0 33 } {0 34 } {0 18 } {0 11 } {0 15 } {0 16 } {0 21 } {0 32 } {0 19 } {0 20 } {0 25 } {0 13 } {0 26 } {0 23 } {0 17 } {0 27 } {0 30 }]
TRACE: 2017/05/10 15:24:54 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:24:54 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:24:56 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:24:56 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:24:59 questionimpl.go:108: Type is final
TRACE: 2017/05/10 15:24:59 questionimpl.go:111: correct Answer fir ID 35 final
TRACE: 2017/05/10 15:24:59 CalculateScore.go:39: Binomial took %s 4.6204014s
TRACE: 2017/05/10 15:24:59 CalculateScore.go:41: actual vs correct  final
TRACE: 2017/05/10 15:24:59 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:24:59 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:25:01 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:25:01 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:25:03 questionimpl.go:108: Type is Queue
TRACE: 2017/05/10 15:25:03 questionimpl.go:111: correct Answer fir ID 22 Queue
TRACE: 2017/05/10 15:25:03 CalculateScore.go:39: Binomial took %s 4.6287336s
TRACE: 2017/05/10 15:25:03 CalculateScore.go:41: actual vs correct  Queue
TRACE: 2017/05/10 15:25:03 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:25:03 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:25:06 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:25:06 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:25:08 questionimpl.go:108: Type is Serialization
TRACE: 2017/05/10 15:25:08 questionimpl.go:111: correct Answer fir ID 28 Serialization
TRACE: 2017/05/10 15:25:08 CalculateScore.go:39: Binomial took %s 4.9206228s
TRACE: 2017/05/10 15:25:08 CalculateScore.go:41: actual vs correct  Serialization
TRACE: 2017/05/10 15:25:08 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:25:08 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:25:11 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:25:11 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:25:13 questionimpl.go:108: Type is shuffle()
TRACE: 2017/05/10 15:25:13 questionimpl.go:111: correct Answer fir ID 31 shuffle()
TRACE: 2017/05/10 15:25:13 CalculateScore.go:39: Binomial took %s 4.4285147s
TRACE: 2017/05/10 15:25:13 CalculateScore.go:41: actual vs correct  shuffle()
TRACE: 2017/05/10 15:25:13 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:25:13 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:25:15 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:25:15 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:25:17 questionimpl.go:108: Type is No
TRACE: 2017/05/10 15:25:17 questionimpl.go:111: correct Answer fir ID 12 No
TRACE: 2017/05/10 15:25:17 CalculateScore.go:39: Binomial took %s 4.6958552s
TRACE: 2017/05/10 15:25:17 CalculateScore.go:41: actual vs correct  No
TRACE: 2017/05/10 15:25:17 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:25:17 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:25:20 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:25:20 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:25:22 questionimpl.go:108: Type is flush()
TRACE: 2017/05/10 15:25:22 questionimpl.go:111: correct Answer fir ID 29 flush()
TRACE: 2017/05/10 15:25:22 CalculateScore.go:39: Binomial took %s 4.3929997s
TRACE: 2017/05/10 15:25:22 CalculateScore.go:41: actual vs correct  flush()
TRACE: 2017/05/10 15:25:22 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:25:22 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:25:24 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:25:24 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:25:27 questionimpl.go:108: Type is transient
TRACE: 2017/05/10 15:25:27 questionimpl.go:111: correct Answer fir ID 24 transient
TRACE: 2017/05/10 15:25:27 CalculateScore.go:39: Binomial took %s 4.8069185s
TRACE: 2017/05/10 15:25:27 CalculateScore.go:41: actual vs correct  transient
TRACE: 2017/05/10 15:25:27 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:25:27 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:25:29 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:25:29 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:25:31 questionimpl.go:108: Type is resume() method
TRACE: 2017/05/10 15:25:31 questionimpl.go:111: correct Answer fir ID 14 resume() method
TRACE: 2017/05/10 15:25:31 CalculateScore.go:39: Binomial took %s 4.3582603s
TRACE: 2017/05/10 15:25:31 CalculateScore.go:41: actual vs correct  resume() method
TRACE: 2017/05/10 15:25:31 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:25:31 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:25:33 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:25:33 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:25:35 questionimpl.go:108: Type is switch, if
TRACE: 2017/05/10 15:25:35 questionimpl.go:111: correct Answer fir ID 33 switch, if
TRACE: 2017/05/10 15:25:35 CalculateScore.go:39: Binomial took %s 4.5945677s
TRACE: 2017/05/10 15:25:35 CalculateScore.go:41: actual vs correct  switch, if
TRACE: 2017/05/10 15:25:35 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:25:35 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:25:38 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:25:38 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:25:40 questionimpl.go:108: Type is All of the above
TRACE: 2017/05/10 15:25:40 questionimpl.go:111: correct Answer fir ID 34 All of the above
TRACE: 2017/05/10 15:25:40 CalculateScore.go:39: Binomial took %s 4.537813s
TRACE: 2017/05/10 15:25:40 CalculateScore.go:41: actual vs correct  All of the above
TRACE: 2017/05/10 15:25:40 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:25:40 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:25:42 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:25:42 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:25:44 questionimpl.go:108: Type is java.util.Date
TRACE: 2017/05/10 15:25:44 questionimpl.go:111: correct Answer fir ID 18 java.util.Date
TRACE: 2017/05/10 15:25:44 CalculateScore.go:39: Binomial took %s 4.3968281s
TRACE: 2017/05/10 15:25:44 CalculateScore.go:41: actual vs correct  java.util.Date
TRACE: 2017/05/10 15:25:44 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:25:44 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:25:47 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:25:47 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:25:49 questionimpl.go:108: Type is Final class
TRACE: 2017/05/10 15:25:49 questionimpl.go:111: correct Answer fir ID 11 Final class
TRACE: 2017/05/10 15:25:49 CalculateScore.go:39: Binomial took %s 4.5423231s
TRACE: 2017/05/10 15:25:49 CalculateScore.go:41: actual vs correct  Final class
TRACE: 2017/05/10 15:25:49 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:25:49 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:25:51 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:25:51 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:25:54 questionimpl.go:108: Type is java.util.TreeMap
TRACE: 2017/05/10 15:25:54 questionimpl.go:111: correct Answer fir ID 15 java.util.TreeMap
TRACE: 2017/05/10 15:25:54 CalculateScore.go:39: Binomial took %s 4.6483276s
TRACE: 2017/05/10 15:25:54 CalculateScore.go:41: actual vs correct  java.util.TreeMap
TRACE: 2017/05/10 15:25:54 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:25:54 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:25:56 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:25:56 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:25:58 questionimpl.go:108: Type is getConnection()
TRACE: 2017/05/10 15:25:58 questionimpl.go:111: correct Answer fir ID 16 getConnection()
TRACE: 2017/05/10 15:25:58 CalculateScore.go:39: Binomial took %s 4.5351739s
TRACE: 2017/05/10 15:25:58 CalculateScore.go:41: actual vs correct  getConnection()
TRACE: 2017/05/10 15:25:58 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:25:58 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:26:01 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:26:01 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:26:03 questionimpl.go:108: Type is string
TRACE: 2017/05/10 15:26:03 questionimpl.go:111: correct Answer fir ID 21 string
TRACE: 2017/05/10 15:26:03 CalculateScore.go:39: Binomial took %s 4.8126387s
TRACE: 2017/05/10 15:26:03 CalculateScore.go:41: actual vs correct  string
TRACE: 2017/05/10 15:26:03 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:26:03 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:26:05 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:26:05 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:26:08 questionimpl.go:108: Type is All of the mentioned
TRACE: 2017/05/10 15:26:08 questionimpl.go:111: correct Answer fir ID 32 All of the mentioned
TRACE: 2017/05/10 15:26:08 CalculateScore.go:39: Binomial took %s 4.7845071s
TRACE: 2017/05/10 15:26:08 CalculateScore.go:41: actual vs correct  All of the mentioned
TRACE: 2017/05/10 15:26:08 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:26:08 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:26:10 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:26:10 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:26:12 questionimpl.go:108: Type is autoboxing
TRACE: 2017/05/10 15:26:12 questionimpl.go:111: correct Answer fir ID 19 autoboxing
TRACE: 2017/05/10 15:26:12 CalculateScore.go:39: Binomial took %s 4.6764009s
TRACE: 2017/05/10 15:26:12 CalculateScore.go:41: actual vs correct  autoboxing
TRACE: 2017/05/10 15:26:12 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:26:12 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:26:15 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:26:15 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:26:17 questionimpl.go:108: Type is Constructor
TRACE: 2017/05/10 15:26:17 questionimpl.go:111: correct Answer fir ID 20 Constructor
TRACE: 2017/05/10 15:26:17 CalculateScore.go:39: Binomial took %s 4.5591496s
TRACE: 2017/05/10 15:26:17 CalculateScore.go:41: actual vs correct  Constructor
TRACE: 2017/05/10 15:26:17 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:26:17 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:26:20 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:26:20 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:26:22 questionimpl.go:108: Type is Interface
TRACE: 2017/05/10 15:26:22 questionimpl.go:111: correct Answer fir ID 25 Interface
TRACE: 2017/05/10 15:26:22 CalculateScore.go:39: Binomial took %s 4.8820282s
TRACE: 2017/05/10 15:26:22 CalculateScore.go:41: actual vs correct  Interface
TRACE: 2017/05/10 15:26:22 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:26:22 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:26:24 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:26:24 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:26:26 questionimpl.go:108: Type is Can store multiple values
TRACE: 2017/05/10 15:26:26 questionimpl.go:111: correct Answer fir ID 13 Can store multiple values
TRACE: 2017/05/10 15:26:26 CalculateScore.go:39: Binomial took %s 4.5683094s
TRACE: 2017/05/10 15:26:26 CalculateScore.go:41: actual vs correct  Can store multiple values
TRACE: 2017/05/10 15:26:26 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:26:26 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:26:29 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:26:29 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:26:31 questionimpl.go:108: Type is 100
TRACE: 2017/05/10 15:26:31 questionimpl.go:111: correct Answer fir ID 26 100
TRACE: 2017/05/10 15:26:31 CalculateScore.go:39: Binomial took %s 4.6443162s
TRACE: 2017/05/10 15:26:31 CalculateScore.go:41: actual vs correct  100
TRACE: 2017/05/10 15:26:31 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:26:31 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:26:34 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:26:34 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:26:36 questionimpl.go:108: Type is PrintStream class
TRACE: 2017/05/10 15:26:36 questionimpl.go:111: correct Answer fir ID 23 PrintStream class
TRACE: 2017/05/10 15:26:36 CalculateScore.go:39: Binomial took %s 4.6102208s
TRACE: 2017/05/10 15:26:36 CalculateScore.go:41: actual vs correct  PrintStream class
TRACE: 2017/05/10 15:26:36 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:26:36 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:26:38 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:26:38 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:26:40 questionimpl.go:108: Type is Multithreaded
TRACE: 2017/05/10 15:26:40 questionimpl.go:111: correct Answer fir ID 17 Multithreaded
TRACE: 2017/05/10 15:26:40 CalculateScore.go:39: Binomial took %s 4.5527917s
TRACE: 2017/05/10 15:26:40 CalculateScore.go:41: actual vs correct  Multithreaded
TRACE: 2017/05/10 15:26:40 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:26:40 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:26:43 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:26:43 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:26:45 questionimpl.go:108: Type is 0 to 65535
TRACE: 2017/05/10 15:26:45 questionimpl.go:111: correct Answer fir ID 27 0 to 65535
TRACE: 2017/05/10 15:26:45 CalculateScore.go:39: Binomial took %s 4.5777802s
TRACE: 2017/05/10 15:26:45 CalculateScore.go:41: actual vs correct  0 to 65535
TRACE: 2017/05/10 15:26:45 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:26:45 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:26:47 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:26:47 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:26:49 questionimpl.go:108: Type is max(Comparator comp)
TRACE: 2017/05/10 15:26:49 questionimpl.go:111: correct Answer fir ID 30 max(Comparator comp)
TRACE: 2017/05/10 15:26:49 CalculateScore.go:39: Binomial took %s 4.5972342s
TRACE: 2017/05/10 15:26:49 CalculateScore.go:41: actual vs correct  max(Comparator comp)
TRACE: 2017/05/10 15:26:49 CalculateScore.go:55: Binomial took %s 1m55.3767155s
TRACE: 2017/05/10 15:31:15 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 15:31:15 QuestionList.go:18: language
TRACE: 2017/05/10 15:31:15 QuestionList.go:19: mSbjyiwyXyQkyCtrwRsl
TRACE: 2017/05/10 15:31:15 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 15:31:15 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 15:31:15 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 15:31:15 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 15:31:17 authenticatetokenimpl.go:47: mSbjyiwyXyQkyCtrwRsl
TRACE: 2017/05/10 15:31:17 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 15:31:17 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 15:31:19 authenticatetokenimpl.go:51: 
TRACE: 2017/05/10 15:31:19 authenticatetokenimpl.go:54: No uid with that token.
TRACE: 2017/05/10 15:31:21 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 15:31:21 QuestionList.go:18: java
TRACE: 2017/05/10 15:31:21 QuestionList.go:19: QUuYgELPGOiAnWhfPWhs
TRACE: 2017/05/10 15:31:21 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 15:31:21 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 15:31:21 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 15:31:21 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 15:31:24 authenticatetokenimpl.go:47: QUuYgELPGOiAnWhfPWhs
TRACE: 2017/05/10 15:31:24 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 15:31:24 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 15:31:26 authenticatetokenimpl.go:51: QUuYgELPGOiAnWhfPWhs
TRACE: 2017/05/10 15:31:26 authenticatetokenimpl.go:59: Type is QUuYgELPGOiAnWhfPWhs
TRACE: 2017/05/10 15:31:26 aunthenticate.go:42: 2017-05-10 15:31:26
TRACE: 2017/05/10 15:31:26 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 15:31:29 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 15:31:29 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 15:31:31 authenticatetokenimpl.go:30: {0xc0421284d0 0xc042004490}
TRACE: 2017/05/10 15:31:31 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 15:31:31 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 15:31:31 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 15:31:31 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 15:31:31 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 15:31:31 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 15:31:31 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 15:31:33 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0422f8ae0 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 15:31:35 questionimpl.go:30: &{0xc042138850 0x718ea0 0xc0420085c0 false [] <nil> 0xc042284d50}
TRACE: 2017/05/10 15:31:46 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 15:31:46 QuestionList.go:18: fundamental
TRACE: 2017/05/10 15:31:46 QuestionList.go:19: mSbjyiwyXyQkyCtrwRsl
TRACE: 2017/05/10 15:31:46 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 15:31:46 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 15:31:46 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 15:31:46 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 15:32:43 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 15:32:43 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 15:32:43 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/10 15:32:43 Login.go:16: entering manager.login
TRACE: 2017/05/10 15:32:43 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 15:32:43 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 15:32:43 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 15:32:48 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/10 15:32:48 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/10 15:32:48 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/10 15:32:50 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/10 15:32:50 loginimpl.go:81: executing query.....
TRACE: 2017/05/10 15:32:53 loginimpl.go:93: {0xc04211c700 0xc04245c410}
TRACE: 2017/05/10 15:32:53 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/10 15:32:53 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/10 15:32:53 loginimpl.go:16: exntering in SaveToken() function {0 2 vXQaoPcQiUMsdVOixgOB 2017-05-10 15:32:48.4047667 +0530 IST}
TRACE: 2017/05/10 15:32:53 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/10 15:32:55 loginimpl.go:20: token inserted
TRACE: 2017/05/10 15:32:55 loginimpl.go:21: {0 2 vXQaoPcQiUMsdVOixgOB 2017-05-10 15:32:48.4047667 +0530 IST}
TRACE: 2017/05/10 15:32:57 loginimpl.go:33: {0xc0421483f0 0xc042045560}
TRACE: 2017/05/10 15:32:57 Login.go:48: {2 rakesh vXQaoPcQiUMsdVOixgOB user}
TRACE: 2017/05/10 15:33:06 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 15:33:06 QuestionList.go:18: fundamental
TRACE: 2017/05/10 15:33:06 QuestionList.go:19: vXQaoPcQiUMsdVOixgOB
TRACE: 2017/05/10 15:33:06 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 15:33:06 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 15:33:06 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 15:33:06 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 15:33:08 authenticatetokenimpl.go:47: vXQaoPcQiUMsdVOixgOB
TRACE: 2017/05/10 15:33:08 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 15:33:08 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 15:33:11 authenticatetokenimpl.go:51: vXQaoPcQiUMsdVOixgOB
TRACE: 2017/05/10 15:33:11 authenticatetokenimpl.go:59: Type is vXQaoPcQiUMsdVOixgOB
TRACE: 2017/05/10 15:33:11 aunthenticate.go:42: 2017-05-10 15:33:11
TRACE: 2017/05/10 15:33:11 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 15:33:13 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 15:33:13 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 15:33:15 authenticatetokenimpl.go:30: {0xc04211cb60 0xc042005950}
TRACE: 2017/05/10 15:33:15 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 15:33:15 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 15:33:15 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 15:33:15 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 15:33:15 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 15:33:15 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 15:33:15 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 15:33:18 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc04234d1a0 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 15:33:20 questionimpl.go:30: &{0xc042138b60 0x718ea0 0xc042331580 false [] <nil> 0xc042285140}
TRACE: 2017/05/10 15:34:20 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/10 15:34:20 AnswerList.go:23: [{0 8 } {0 1 } {0 2 } {0 10 } {0 6 } {0 4 } {0 9 } {0 5 } {0 3 } {0 7 }]
TRACE: 2017/05/10 15:34:20 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/10 15:34:20 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/10 15:34:20 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/10 15:34:20 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/10 15:34:20 CalculateScore.go:30: answerList [{0 8 } {0 1 } {0 2 } {0 10 } {0 6 } {0 4 } {0 9 } {0 5 } {0 3 } {0 7 }]
TRACE: 2017/05/10 15:34:20 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:34:20 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:34:23 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:34:23 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:34:25 questionimpl.go:108: Type is shows path of current directory
TRACE: 2017/05/10 15:34:25 questionimpl.go:111: correct Answer fir ID 8 shows path of current directory
TRACE: 2017/05/10 15:34:25 CalculateScore.go:39: Binomial took %s 4.379836s
TRACE: 2017/05/10 15:34:25 CalculateScore.go:41: actual vs correct  shows path of current directory
TRACE: 2017/05/10 15:34:25 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:34:25 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:34:27 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:34:27 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:34:29 questionimpl.go:108: Type is both
TRACE: 2017/05/10 15:34:29 questionimpl.go:111: correct Answer fir ID 1 both
TRACE: 2017/05/10 15:34:29 CalculateScore.go:39: Binomial took %s 4.2407323s
TRACE: 2017/05/10 15:34:29 CalculateScore.go:41: actual vs correct  both
TRACE: 2017/05/10 15:34:29 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:34:29 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:34:31 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:34:31 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:34:34 questionimpl.go:108: Type is c
TRACE: 2017/05/10 15:34:34 questionimpl.go:111: correct Answer fir ID 2 c
TRACE: 2017/05/10 15:34:34 CalculateScore.go:39: Binomial took %s 4.7682273s
TRACE: 2017/05/10 15:34:34 CalculateScore.go:41: actual vs correct  c
TRACE: 2017/05/10 15:34:34 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:34:34 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:34:36 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:34:36 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:34:38 questionimpl.go:108: Type is has to implement all method defination from the interface
TRACE: 2017/05/10 15:34:38 questionimpl.go:111: correct Answer fir ID 10 has to implement all method defination from the interface
TRACE: 2017/05/10 15:34:38 CalculateScore.go:39: Binomial took %s 4.3239875s
TRACE: 2017/05/10 15:34:38 CalculateScore.go:41: actual vs correct  has to implement all method defination from the interface
TRACE: 2017/05/10 15:34:38 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:34:38 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:34:39 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 15:34:39 QuestionList.go:18: fundamental
TRACE: 2017/05/10 15:34:39 QuestionList.go:19: vXQaoPcQiUMsdVOixgOB
TRACE: 2017/05/10 15:34:39 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 15:34:39 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 15:34:39 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 15:34:39 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 15:34:41 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:34:41 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:34:41 authenticatetokenimpl.go:47: vXQaoPcQiUMsdVOixgOB
TRACE: 2017/05/10 15:34:41 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 15:34:41 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 15:34:43 questionimpl.go:108: Type is stack
TRACE: 2017/05/10 15:34:43 questionimpl.go:111: correct Answer fir ID 6 stack
TRACE: 2017/05/10 15:34:43 CalculateScore.go:39: Binomial took %s 4.7444284s
TRACE: 2017/05/10 15:34:43 CalculateScore.go:41: actual vs correct  stack
TRACE: 2017/05/10 15:34:43 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:34:43 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:34:43 authenticatetokenimpl.go:51: vXQaoPcQiUMsdVOixgOB
TRACE: 2017/05/10 15:34:43 authenticatetokenimpl.go:59: Type is vXQaoPcQiUMsdVOixgOB
TRACE: 2017/05/10 15:34:43 aunthenticate.go:42: 2017-05-10 15:34:43
TRACE: 2017/05/10 15:34:43 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 15:34:45 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 15:34:45 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 15:34:46 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:34:46 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:34:47 authenticatetokenimpl.go:30: {0xc0421289a0 0xc042137bd0}
TRACE: 2017/05/10 15:34:47 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 15:34:47 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 15:34:47 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 15:34:47 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 15:34:47 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 15:34:47 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 15:34:47 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 15:34:48 questionimpl.go:108: Type is wraping up properties and methods
TRACE: 2017/05/10 15:34:48 questionimpl.go:111: correct Answer fir ID 4 wraping up properties and methods
TRACE: 2017/05/10 15:34:48 CalculateScore.go:39: Binomial took %s 5.643504s
TRACE: 2017/05/10 15:34:48 CalculateScore.go:41: actual vs correct  wraping up properties and methods
TRACE: 2017/05/10 15:34:48 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:34:48 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:34:50 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc04234ee40 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 15:34:51 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:34:51 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:34:52 questionimpl.go:30: &{0xc042128fc0 0x718ea0 0xc042479540 false [] <nil> 0xc042285a40}
TRACE: 2017/05/10 15:34:53 questionimpl.go:108: Type is a long running background process
TRACE: 2017/05/10 15:34:53 questionimpl.go:111: correct Answer fir ID 9 a long running background process
TRACE: 2017/05/10 15:34:53 CalculateScore.go:39: Binomial took %s 4.729556s
TRACE: 2017/05/10 15:34:53 CalculateScore.go:41: actual vs correct  a long running background process
TRACE: 2017/05/10 15:34:53 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:34:53 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:34:56 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:34:56 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:34:58 questionimpl.go:108: Type is a method that calls itself
TRACE: 2017/05/10 15:34:58 questionimpl.go:111: correct Answer fir ID 5 a method that calls itself
TRACE: 2017/05/10 15:34:58 CalculateScore.go:39: Binomial took %s 4.7635089s
TRACE: 2017/05/10 15:34:58 CalculateScore.go:41: actual vs correct  a method that calls itself
TRACE: 2017/05/10 15:34:58 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:34:58 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:34:58 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 15:34:58 QuestionList.go:18: language
TRACE: 2017/05/10 15:34:58 QuestionList.go:19: vXQaoPcQiUMsdVOixgOB
TRACE: 2017/05/10 15:34:58 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 15:34:58 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 15:34:58 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 15:34:58 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 15:35:00 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:35:00 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:35:01 authenticatetokenimpl.go:47: vXQaoPcQiUMsdVOixgOB
TRACE: 2017/05/10 15:35:01 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 15:35:01 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 15:35:03 questionimpl.go:108: Type is method overriding
TRACE: 2017/05/10 15:35:03 questionimpl.go:111: correct Answer fir ID 3 method overriding
TRACE: 2017/05/10 15:35:03 CalculateScore.go:39: Binomial took %s 4.7450131s
TRACE: 2017/05/10 15:35:03 CalculateScore.go:41: actual vs correct  method overriding
TRACE: 2017/05/10 15:35:03 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:35:03 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:35:03 authenticatetokenimpl.go:51: vXQaoPcQiUMsdVOixgOB
TRACE: 2017/05/10 15:35:03 authenticatetokenimpl.go:59: Type is vXQaoPcQiUMsdVOixgOB
TRACE: 2017/05/10 15:35:03 aunthenticate.go:42: 2017-05-10 15:35:03
TRACE: 2017/05/10 15:35:03 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 15:35:05 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:35:05 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:35:05 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 15:35:05 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 15:35:07 authenticatetokenimpl.go:30: {0xc042149f10 0xc0422c8920}
TRACE: 2017/05/10 15:35:07 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 15:35:07 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 15:35:07 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 15:35:07 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 15:35:07 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 15:35:07 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 15:35:07 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 15:35:07 questionimpl.go:108: Type is big O notation
TRACE: 2017/05/10 15:35:07 questionimpl.go:111: correct Answer fir ID 7 big O notation
TRACE: 2017/05/10 15:35:07 CalculateScore.go:39: Binomial took %s 4.63033s
TRACE: 2017/05/10 15:35:07 CalculateScore.go:41: actual vs correct  big O notation
TRACE: 2017/05/10 15:35:07 CalculateScore.go:55: Binomial took %s 46.9736259s
TRACE: 2017/05/10 15:35:10 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0420f2a20 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 15:35:12 questionimpl.go:30: &{0xc042139420 0x718ea0 0xc0424bc800 false [] <nil> 0xc04202b140}
TRACE: 2017/05/10 15:35:21 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 15:35:21 QuestionList.go:18: fundamental
TRACE: 2017/05/10 15:35:21 QuestionList.go:19: vXQaoPcQiUMsdVOixgOB
TRACE: 2017/05/10 15:35:21 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 15:35:21 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 15:35:21 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 15:35:21 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 15:35:24 authenticatetokenimpl.go:47: vXQaoPcQiUMsdVOixgOB
TRACE: 2017/05/10 15:35:24 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 15:35:24 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 15:35:26 authenticatetokenimpl.go:51: vXQaoPcQiUMsdVOixgOB
TRACE: 2017/05/10 15:35:26 authenticatetokenimpl.go:59: Type is vXQaoPcQiUMsdVOixgOB
TRACE: 2017/05/10 15:35:26 aunthenticate.go:42: 2017-05-10 15:35:26
TRACE: 2017/05/10 15:35:26 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 15:35:44 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 15:35:44 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 15:35:44 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/10 15:35:44 Login.go:16: entering manager.login
TRACE: 2017/05/10 15:35:44 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 15:35:44 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 15:35:44 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 15:35:49 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/10 15:35:49 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/10 15:35:49 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/10 15:35:51 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/10 15:35:51 loginimpl.go:81: executing query.....
TRACE: 2017/05/10 15:35:54 loginimpl.go:93: {0xc0421bec40 0xc042408010}
TRACE: 2017/05/10 15:35:54 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/10 15:35:54 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/10 15:35:54 loginimpl.go:16: exntering in SaveToken() function {0 2 zUQPtZwfTEkkAmPDefDE 2017-05-10 15:35:49.4637774 +0530 IST}
TRACE: 2017/05/10 15:35:54 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/10 15:35:56 loginimpl.go:20: token inserted
TRACE: 2017/05/10 15:35:56 loginimpl.go:21: {0 2 zUQPtZwfTEkkAmPDefDE 2017-05-10 15:35:49.4637774 +0530 IST}
TRACE: 2017/05/10 15:35:58 loginimpl.go:33: {0xc04211d490 0xc042165280}
TRACE: 2017/05/10 15:35:58 Login.go:48: {2 rakesh zUQPtZwfTEkkAmPDefDE user}
TRACE: 2017/05/10 15:37:45 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 15:37:45 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 15:37:45 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/10 15:37:45 Login.go:16: entering manager.login
TRACE: 2017/05/10 15:37:47 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 15:37:47 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 15:37:47 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 15:37:52 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/10 15:37:52 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/10 15:37:52 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/10 15:37:54 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/10 15:37:54 loginimpl.go:81: executing query.....
TRACE: 2017/05/10 15:37:57 loginimpl.go:93: {0xc0421be1c0 0xc042137130}
TRACE: 2017/05/10 15:37:57 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/10 15:37:57 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/10 15:37:57 loginimpl.go:16: exntering in SaveToken() function {0 2 yasXlkyiGTdCMQgYHfAR 2017-05-10 15:37:52.4273661 +0530 IST}
TRACE: 2017/05/10 15:37:57 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/10 15:37:59 loginimpl.go:20: token inserted
TRACE: 2017/05/10 15:37:59 loginimpl.go:21: {0 2 yasXlkyiGTdCMQgYHfAR 2017-05-10 15:37:52.4273661 +0530 IST}
TRACE: 2017/05/10 15:38:01 loginimpl.go:33: {0xc042138310 0xc0420455a0}
TRACE: 2017/05/10 15:38:01 Login.go:48: {2 rakesh yasXlkyiGTdCMQgYHfAR user}
TRACE: 2017/05/10 15:38:10 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 15:38:10 QuestionList.go:18: java
TRACE: 2017/05/10 15:38:10 QuestionList.go:19: yasXlkyiGTdCMQgYHfAR
TRACE: 2017/05/10 15:38:10 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 15:38:10 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 15:38:10 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 15:38:10 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 15:38:12 authenticatetokenimpl.go:47: yasXlkyiGTdCMQgYHfAR
TRACE: 2017/05/10 15:38:12 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 15:38:12 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 15:38:14 authenticatetokenimpl.go:51: yasXlkyiGTdCMQgYHfAR
TRACE: 2017/05/10 15:38:14 authenticatetokenimpl.go:59: Type is yasXlkyiGTdCMQgYHfAR
TRACE: 2017/05/10 15:38:14 aunthenticate.go:42: 2017-05-10 15:38:14
TRACE: 2017/05/10 15:38:14 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 15:38:17 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 15:38:17 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 15:38:19 authenticatetokenimpl.go:30: {0xc042149030 0xc04245d190}
TRACE: 2017/05/10 15:38:19 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 15:38:19 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 15:38:19 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 15:38:19 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 15:38:19 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 15:38:19 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 15:38:19 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 15:38:22 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc04232de60 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 15:38:24 questionimpl.go:30: &{0xc042149260 0x718ea0 0xc0420fa860 false [] <nil> 0xc042327260}
TRACE: 2017/05/10 15:39:24 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/10 15:39:24 AnswerList.go:23: [{0 17 } {0 32 } {0 34 } {0 22 } {0 13 } {0 23 } {0 26 } {0 24 } {0 12 } {0 16 } {0 28 } {0 30 } {0 27 } {0 31 } {0 29 } {0 14 } {0 15 } {0 11 } {0 18 } {0 20 } {0 21 } {0 35 } {0 25 } {0 19 } {0 33 }]
TRACE: 2017/05/10 15:39:24 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/10 15:39:24 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/10 15:39:24 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/10 15:39:24 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/10 15:39:24 CalculateScore.go:30: answerList [{0 17 } {0 32 } {0 34 } {0 22 } {0 13 } {0 23 } {0 26 } {0 24 } {0 12 } {0 16 } {0 28 } {0 30 } {0 27 } {0 31 } {0 29 } {0 14 } {0 15 } {0 11 } {0 18 } {0 20 } {0 21 } {0 35 } {0 25 } {0 19 } {0 33 }]
TRACE: 2017/05/10 15:39:24 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:39:24 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:39:27 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:39:27 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:39:29 questionimpl.go:108: Type is Multithreaded
TRACE: 2017/05/10 15:39:29 questionimpl.go:111: correct Answer fir ID 17 Multithreaded
TRACE: 2017/05/10 15:39:29 CalculateScore.go:39: Binomial took %s 4.5562632s
TRACE: 2017/05/10 15:39:29 CalculateScore.go:41: actual vs correct  Multithreaded
TRACE: 2017/05/10 15:39:29 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:39:29 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:39:31 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:39:31 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:39:32 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 15:39:32 QuestionList.go:18: java
TRACE: 2017/05/10 15:39:32 QuestionList.go:19: yasXlkyiGTdCMQgYHfAR
TRACE: 2017/05/10 15:39:32 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 15:39:32 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 15:39:32 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 15:39:32 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 15:39:33 questionimpl.go:108: Type is All of the mentioned
TRACE: 2017/05/10 15:39:33 questionimpl.go:111: correct Answer fir ID 32 All of the mentioned
TRACE: 2017/05/10 15:39:33 CalculateScore.go:39: Binomial took %s 4.4581394s
TRACE: 2017/05/10 15:39:33 CalculateScore.go:41: actual vs correct  All of the mentioned
TRACE: 2017/05/10 15:39:33 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:39:33 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:39:34 authenticatetokenimpl.go:47: yasXlkyiGTdCMQgYHfAR
TRACE: 2017/05/10 15:39:34 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 15:39:34 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 15:39:36 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:39:36 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:39:36 authenticatetokenimpl.go:51: 
TRACE: 2017/05/10 15:39:36 authenticatetokenimpl.go:54: No uid with that token.
TRACE: 2017/05/10 15:39:38 questionimpl.go:108: Type is All of the above
TRACE: 2017/05/10 15:39:38 questionimpl.go:111: correct Answer fir ID 34 All of the above
TRACE: 2017/05/10 15:39:38 CalculateScore.go:39: Binomial took %s 4.6496914s
TRACE: 2017/05/10 15:39:38 CalculateScore.go:41: actual vs correct  All of the above
TRACE: 2017/05/10 15:39:38 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:39:38 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:39:40 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:39:40 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:39:43 questionimpl.go:108: Type is Queue
TRACE: 2017/05/10 15:39:43 questionimpl.go:111: correct Answer fir ID 22 Queue
TRACE: 2017/05/10 15:39:43 CalculateScore.go:39: Binomial took %s 4.6197035s
TRACE: 2017/05/10 15:39:43 CalculateScore.go:41: actual vs correct  Queue
TRACE: 2017/05/10 15:39:43 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:39:43 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:39:45 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:39:45 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:39:47 questionimpl.go:108: Type is Can store multiple values
TRACE: 2017/05/10 15:39:47 questionimpl.go:111: correct Answer fir ID 13 Can store multiple values
TRACE: 2017/05/10 15:39:47 CalculateScore.go:39: Binomial took %s 4.4451933s
TRACE: 2017/05/10 15:39:47 CalculateScore.go:41: actual vs correct  Can store multiple values
TRACE: 2017/05/10 15:39:47 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:39:47 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:39:50 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:39:50 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:39:52 questionimpl.go:108: Type is PrintStream class
TRACE: 2017/05/10 15:39:52 questionimpl.go:111: correct Answer fir ID 23 PrintStream class
TRACE: 2017/05/10 15:39:52 CalculateScore.go:39: Binomial took %s 4.6669602s
TRACE: 2017/05/10 15:39:52 CalculateScore.go:41: actual vs correct  PrintStream class
TRACE: 2017/05/10 15:39:52 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:39:52 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:39:55 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:39:55 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:39:58 questionimpl.go:108: Type is 100
TRACE: 2017/05/10 15:39:58 questionimpl.go:111: correct Answer fir ID 26 100
TRACE: 2017/05/10 15:39:58 CalculateScore.go:39: Binomial took %s 5.8568405s
TRACE: 2017/05/10 15:39:58 CalculateScore.go:41: actual vs correct  100
TRACE: 2017/05/10 15:39:58 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:39:58 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:40:00 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:40:00 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:40:02 questionimpl.go:108: Type is transient
TRACE: 2017/05/10 15:40:02 questionimpl.go:111: correct Answer fir ID 24 transient
TRACE: 2017/05/10 15:40:02 CalculateScore.go:39: Binomial took %s 4.7075936s
TRACE: 2017/05/10 15:40:02 CalculateScore.go:41: actual vs correct  transient
TRACE: 2017/05/10 15:40:02 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:40:02 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:40:05 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:40:05 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:40:07 questionimpl.go:108: Type is No
TRACE: 2017/05/10 15:40:07 questionimpl.go:111: correct Answer fir ID 12 No
TRACE: 2017/05/10 15:40:07 CalculateScore.go:39: Binomial took %s 4.7159373s
TRACE: 2017/05/10 15:40:07 CalculateScore.go:41: actual vs correct  No
TRACE: 2017/05/10 15:40:07 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:40:07 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:40:09 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:40:09 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:40:12 questionimpl.go:108: Type is getConnection()
TRACE: 2017/05/10 15:40:12 questionimpl.go:111: correct Answer fir ID 16 getConnection()
TRACE: 2017/05/10 15:40:12 CalculateScore.go:39: Binomial took %s 4.5900036s
TRACE: 2017/05/10 15:40:12 CalculateScore.go:41: actual vs correct  getConnection()
TRACE: 2017/05/10 15:40:12 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:40:12 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:40:14 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:40:14 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:40:16 questionimpl.go:108: Type is Serialization
TRACE: 2017/05/10 15:40:16 questionimpl.go:111: correct Answer fir ID 28 Serialization
TRACE: 2017/05/10 15:40:16 CalculateScore.go:39: Binomial took %s 4.4764913s
TRACE: 2017/05/10 15:40:16 CalculateScore.go:41: actual vs correct  Serialization
TRACE: 2017/05/10 15:40:16 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:40:16 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:40:18 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:40:18 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:40:20 questionimpl.go:108: Type is max(Comparator comp)
TRACE: 2017/05/10 15:40:20 questionimpl.go:111: correct Answer fir ID 30 max(Comparator comp)
TRACE: 2017/05/10 15:40:20 CalculateScore.go:39: Binomial took %s 4.3281552s
TRACE: 2017/05/10 15:40:20 CalculateScore.go:41: actual vs correct  max(Comparator comp)
TRACE: 2017/05/10 15:40:20 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:40:20 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:40:23 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:40:23 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:40:25 questionimpl.go:108: Type is 0 to 65535
TRACE: 2017/05/10 15:40:25 questionimpl.go:111: correct Answer fir ID 27 0 to 65535
TRACE: 2017/05/10 15:40:25 CalculateScore.go:39: Binomial took %s 5.0617743s
TRACE: 2017/05/10 15:40:25 CalculateScore.go:41: actual vs correct  0 to 65535
TRACE: 2017/05/10 15:40:25 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:40:25 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:40:28 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:40:28 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:40:30 questionimpl.go:108: Type is shuffle()
TRACE: 2017/05/10 15:40:30 questionimpl.go:111: correct Answer fir ID 31 shuffle()
TRACE: 2017/05/10 15:40:30 CalculateScore.go:39: Binomial took %s 4.6195356s
TRACE: 2017/05/10 15:40:30 CalculateScore.go:41: actual vs correct  shuffle()
TRACE: 2017/05/10 15:40:30 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:40:30 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:40:33 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:40:33 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:40:35 questionimpl.go:108: Type is flush()
TRACE: 2017/05/10 15:40:35 questionimpl.go:111: correct Answer fir ID 29 flush()
TRACE: 2017/05/10 15:40:35 CalculateScore.go:39: Binomial took %s 4.561938s
TRACE: 2017/05/10 15:40:35 CalculateScore.go:41: actual vs correct  flush()
TRACE: 2017/05/10 15:40:35 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:40:35 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:40:37 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:40:41 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:40:44 questionimpl.go:108: Type is resume() method
TRACE: 2017/05/10 15:40:44 questionimpl.go:111: correct Answer fir ID 14 resume() method
TRACE: 2017/05/10 15:40:44 CalculateScore.go:39: Binomial took %s 8.8796547s
TRACE: 2017/05/10 15:40:44 CalculateScore.go:41: actual vs correct  resume() method
TRACE: 2017/05/10 15:40:44 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:40:44 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:40:47 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:40:47 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:40:49 questionimpl.go:108: Type is java.util.TreeMap
TRACE: 2017/05/10 15:40:49 questionimpl.go:111: correct Answer fir ID 15 java.util.TreeMap
TRACE: 2017/05/10 15:40:49 CalculateScore.go:39: Binomial took %s 5.6722732s
TRACE: 2017/05/10 15:40:49 CalculateScore.go:41: actual vs correct  java.util.TreeMap
TRACE: 2017/05/10 15:40:49 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:40:49 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:40:49 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 15:40:49 QuestionList.go:18: fundamental
TRACE: 2017/05/10 15:40:49 QuestionList.go:19: yasXlkyiGTdCMQgYHfAR
TRACE: 2017/05/10 15:40:49 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 15:40:49 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 15:40:49 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 15:40:49 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 15:40:52 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:40:52 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:40:52 authenticatetokenimpl.go:47: yasXlkyiGTdCMQgYHfAR
TRACE: 2017/05/10 15:40:52 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 15:40:52 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 15:40:54 questionimpl.go:108: Type is Final class
TRACE: 2017/05/10 15:40:54 questionimpl.go:111: correct Answer fir ID 11 Final class
TRACE: 2017/05/10 15:40:54 CalculateScore.go:39: Binomial took %s 4.7515955s
TRACE: 2017/05/10 15:40:54 CalculateScore.go:41: actual vs correct  Final class
TRACE: 2017/05/10 15:40:54 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:40:54 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:40:54 authenticatetokenimpl.go:51: 
TRACE: 2017/05/10 15:40:54 authenticatetokenimpl.go:54: No uid with that token.
TRACE: 2017/05/10 15:40:56 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:40:56 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:40:58 questionimpl.go:108: Type is java.util.Date
TRACE: 2017/05/10 15:40:58 questionimpl.go:111: correct Answer fir ID 18 java.util.Date
TRACE: 2017/05/10 15:40:58 CalculateScore.go:39: Binomial took %s 4.4098027s
TRACE: 2017/05/10 15:40:58 CalculateScore.go:41: actual vs correct  java.util.Date
TRACE: 2017/05/10 15:40:58 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:40:58 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:41:01 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:41:01 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:41:03 questionimpl.go:108: Type is Constructor
TRACE: 2017/05/10 15:41:03 questionimpl.go:111: correct Answer fir ID 20 Constructor
TRACE: 2017/05/10 15:41:03 CalculateScore.go:39: Binomial took %s 4.8211787s
TRACE: 2017/05/10 15:41:03 CalculateScore.go:41: actual vs correct  Constructor
TRACE: 2017/05/10 15:41:03 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:41:03 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:41:06 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:41:06 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:41:08 questionimpl.go:108: Type is string
TRACE: 2017/05/10 15:41:08 questionimpl.go:111: correct Answer fir ID 21 string
TRACE: 2017/05/10 15:41:08 CalculateScore.go:39: Binomial took %s 4.4454039s
TRACE: 2017/05/10 15:41:08 CalculateScore.go:41: actual vs correct  string
TRACE: 2017/05/10 15:41:08 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:41:08 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:41:10 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:41:10 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:41:12 questionimpl.go:108: Type is final
TRACE: 2017/05/10 15:41:12 questionimpl.go:111: correct Answer fir ID 35 final
TRACE: 2017/05/10 15:41:12 CalculateScore.go:39: Binomial took %s 4.8178563s
TRACE: 2017/05/10 15:41:12 CalculateScore.go:41: actual vs correct  final
TRACE: 2017/05/10 15:41:12 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:41:12 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:41:15 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:41:15 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:41:17 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 15:41:17 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 15:41:17 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/10 15:41:17 Login.go:16: entering manager.login
TRACE: 2017/05/10 15:41:17 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 15:41:17 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 15:41:17 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 15:41:19 questionimpl.go:108: Type is Interface
TRACE: 2017/05/10 15:41:19 questionimpl.go:111: correct Answer fir ID 25 Interface
TRACE: 2017/05/10 15:41:19 CalculateScore.go:39: Binomial took %s 6.5105492s
TRACE: 2017/05/10 15:41:19 CalculateScore.go:41: actual vs correct  Interface
TRACE: 2017/05/10 15:41:19 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:41:19 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:41:21 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:41:21 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:41:22 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/10 15:41:22 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/10 15:41:22 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/10 15:41:24 questionimpl.go:108: Type is autoboxing
TRACE: 2017/05/10 15:41:24 questionimpl.go:111: correct Answer fir ID 19 autoboxing
TRACE: 2017/05/10 15:41:24 CalculateScore.go:39: Binomial took %s 4.6883975s
TRACE: 2017/05/10 15:41:24 CalculateScore.go:41: actual vs correct  autoboxing
TRACE: 2017/05/10 15:41:24 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:41:24 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:41:24 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/10 15:41:24 loginimpl.go:81: executing query.....
TRACE: 2017/05/10 15:41:26 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:41:26 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:41:26 loginimpl.go:93: {0xc042128000 0xc0421e2160}
TRACE: 2017/05/10 15:41:26 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/10 15:41:26 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/10 15:41:26 loginimpl.go:16: exntering in SaveToken() function {0 2 EbnQAnukfXczxnXgcWzb 2017-05-10 15:41:22.0382593 +0530 IST}
TRACE: 2017/05/10 15:41:26 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/10 15:41:28 questionimpl.go:108: Type is switch, if
TRACE: 2017/05/10 15:41:28 questionimpl.go:111: correct Answer fir ID 33 switch, if
TRACE: 2017/05/10 15:41:28 CalculateScore.go:39: Binomial took %s 4.5777908s
TRACE: 2017/05/10 15:41:28 CalculateScore.go:41: actual vs correct  switch, if
TRACE: 2017/05/10 15:41:28 CalculateScore.go:55: Binomial took %s 2m3.8912064s
TRACE: 2017/05/10 15:41:29 loginimpl.go:20: token inserted
TRACE: 2017/05/10 15:41:29 loginimpl.go:21: {0 2 EbnQAnukfXczxnXgcWzb 2017-05-10 15:41:22.0382593 +0530 IST}
TRACE: 2017/05/10 15:41:31 loginimpl.go:33: {0xc042148460 0xc042137400}
TRACE: 2017/05/10 15:41:31 Login.go:48: {2 rakesh EbnQAnukfXczxnXgcWzb user}
TRACE: 2017/05/10 15:42:42 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 15:42:42 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 15:42:42 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/10 15:42:42 Login.go:16: entering manager.login
TRACE: 2017/05/10 15:42:42 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 15:42:42 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 15:42:42 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 15:42:47 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/10 15:42:47 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/10 15:42:47 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/10 15:43:24 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 15:43:24 QuestionList.go:18: fundamental
TRACE: 2017/05/10 15:43:24 QuestionList.go:19: zUQPtZwfTEkkAmPDefDE
TRACE: 2017/05/10 15:43:24 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 15:43:24 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 15:43:24 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 15:43:24 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 15:43:25 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 15:43:25 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 15:43:25 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/10 15:43:25 Login.go:16: entering manager.login
TRACE: 2017/05/10 15:43:25 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 15:43:25 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 15:43:25 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 15:43:27 authenticatetokenimpl.go:47: zUQPtZwfTEkkAmPDefDE
TRACE: 2017/05/10 15:43:27 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 15:43:27 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 15:43:29 authenticatetokenimpl.go:51: 
TRACE: 2017/05/10 15:43:29 authenticatetokenimpl.go:54: No uid with that token.
TRACE: 2017/05/10 15:43:30 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/10 15:43:30 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/10 15:43:30 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/10 15:43:32 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/10 15:43:32 loginimpl.go:81: executing query.....
TRACE: 2017/05/10 15:43:35 loginimpl.go:93: {0xc042148700 0xc042137420}
TRACE: 2017/05/10 15:43:35 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/10 15:43:35 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/10 15:43:35 loginimpl.go:16: exntering in SaveToken() function {0 2 xxUhKEMXvgALVxipzBdq 2017-05-10 15:43:30.304976 +0530 IST}
TRACE: 2017/05/10 15:43:38 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/10 15:43:40 loginimpl.go:20: token inserted
TRACE: 2017/05/10 15:43:40 loginimpl.go:21: {0 2 xxUhKEMXvgALVxipzBdq 2017-05-10 15:43:30.304976 +0530 IST}
TRACE: 2017/05/10 15:43:42 loginimpl.go:33: {0xc042148a80 0xc042137b90}
TRACE: 2017/05/10 15:43:42 Login.go:48: {2 rakesh xxUhKEMXvgALVxipzBdq user}
TRACE: 2017/05/10 15:44:13 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 15:44:13 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 15:44:13 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/10 15:44:13 Login.go:16: entering manager.login
TRACE: 2017/05/10 15:44:13 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 15:44:13 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 15:44:13 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 15:44:19 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/10 15:44:19 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/10 15:44:19 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/10 15:44:21 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/10 15:44:21 loginimpl.go:81: executing query.....
TRACE: 2017/05/10 15:44:23 loginimpl.go:93: {0xc042148d90 0xc042045120}
TRACE: 2017/05/10 15:44:23 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/10 15:44:23 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/10 15:44:23 loginimpl.go:16: exntering in SaveToken() function {0 2 YhjhZkuoHtkOCynqYOmn 2017-05-10 15:44:19.0261448 +0530 IST}
TRACE: 2017/05/10 15:44:23 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/10 15:44:25 loginimpl.go:20: token inserted
TRACE: 2017/05/10 15:44:25 loginimpl.go:21: {0 2 YhjhZkuoHtkOCynqYOmn 2017-05-10 15:44:19.0261448 +0530 IST}
TRACE: 2017/05/10 15:44:27 loginimpl.go:33: {0xc042129260 0xc0421e35c0}
TRACE: 2017/05/10 15:44:27 Login.go:48: {2 rakesh YhjhZkuoHtkOCynqYOmn user}
TRACE: 2017/05/10 15:44:36 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 15:44:36 QuestionList.go:18: fundamental
TRACE: 2017/05/10 15:44:36 QuestionList.go:19: YhjhZkuoHtkOCynqYOmn
TRACE: 2017/05/10 15:44:36 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 15:44:36 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 15:44:36 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 15:44:36 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 15:44:38 authenticatetokenimpl.go:47: YhjhZkuoHtkOCynqYOmn
TRACE: 2017/05/10 15:44:38 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 15:44:38 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 15:44:40 authenticatetokenimpl.go:51: YhjhZkuoHtkOCynqYOmn
TRACE: 2017/05/10 15:44:40 authenticatetokenimpl.go:59: Type is YhjhZkuoHtkOCynqYOmn
TRACE: 2017/05/10 15:44:40 aunthenticate.go:42: 2017-05-10 15:44:40
TRACE: 2017/05/10 15:44:40 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 15:44:43 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 15:44:43 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 15:44:45 authenticatetokenimpl.go:30: {0xc042149260 0xc042045a00}
TRACE: 2017/05/10 15:44:45 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 15:44:45 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 15:44:45 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 15:44:45 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 15:44:45 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 15:44:45 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 15:44:45 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 15:44:47 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc04203a2a0 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 15:44:49 questionimpl.go:30: &{0xc042149650 0x718ea0 0xc042369440 false [] <nil> 0xc0422ff8c0}
TRACE: 2017/05/10 15:45:05 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 15:45:05 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 15:45:05 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/10 15:45:05 Login.go:16: entering manager.login
TRACE: 2017/05/10 15:45:05 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 15:45:05 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 15:45:05 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 15:45:10 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 15:45:10 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 15:45:10 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/10 15:45:10 Login.go:16: entering manager.login
TRACE: 2017/05/10 15:45:10 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 15:45:10 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 15:45:10 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 15:45:10 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/10 15:45:10 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/10 15:45:10 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/10 15:45:11 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/10 15:45:11 AnswerList.go:23: [{0 8 shows the access defination for a diractory} {0 3 method overloading} {0 9 a process that automatically starts up when the machine is started} {0 1 printer} {0 2 java} {0 5 a method that loops through a list} {0 6 stack} {0 7 big O notation} {0 10 has to overload the method from the interface} {0 4 none of the above}]
TRACE: 2017/05/10 15:45:11 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/10 15:45:11 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/10 15:45:11 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/10 15:45:11 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/10 15:45:11 CalculateScore.go:30: answerList [{0 8 shows the access defination for a diractory} {0 3 method overloading} {0 9 a process that automatically starts up when the machine is started} {0 1 printer} {0 2 java} {0 5 a method that loops through a list} {0 6 stack} {0 7 big O notation} {0 10 has to overload the method from the interface} {0 4 none of the above}]
TRACE: 2017/05/10 15:45:11 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:45:11 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:45:11 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 15:45:11 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 15:45:11 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/10 15:45:11 Login.go:16: entering manager.login
TRACE: 2017/05/10 15:45:11 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 15:45:11 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 15:45:11 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 15:45:11 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 15:45:11 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 15:45:11 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/10 15:45:11 Login.go:16: entering manager.login
TRACE: 2017/05/10 15:45:11 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 15:45:11 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 15:45:11 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 15:45:12 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 15:45:12 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 15:45:12 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/10 15:45:12 Login.go:16: entering manager.login
TRACE: 2017/05/10 15:45:12 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 15:45:12 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 15:45:12 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 15:45:12 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 15:45:12 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 15:45:12 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/10 15:45:12 Login.go:16: entering manager.login
TRACE: 2017/05/10 15:45:12 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 15:45:12 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 15:45:12 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 15:45:13 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/10 15:45:13 loginimpl.go:81: executing query.....
TRACE: 2017/05/10 15:45:13 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:45:13 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:45:15 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/10 15:45:15 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/10 15:45:15 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/10 15:45:15 loginimpl.go:93: {0xc042139420 0xc0420059c0}
TRACE: 2017/05/10 15:45:15 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/10 15:45:15 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/10 15:45:15 loginimpl.go:16: exntering in SaveToken() function {0 2 OvePJKOIdHjMWVgqnsoU 2017-05-10 15:45:10.7500011 +0530 IST}
TRACE: 2017/05/10 15:45:15 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/10 15:45:15 questionimpl.go:108: Type is shows path of current directory
TRACE: 2017/05/10 15:45:15 questionimpl.go:111: correct Answer fir ID 8 shows path of current directory
TRACE: 2017/05/10 15:45:15 CalculateScore.go:39: Binomial took %s 4.6516222s
TRACE: 2017/05/10 15:45:15 CalculateScore.go:41: actual vs correct shows the access defination for a diractory shows path of current directory
TRACE: 2017/05/10 15:45:15 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:45:15 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:45:16 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/10 15:45:16 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/10 15:45:16 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/10 15:45:16 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/10 15:45:16 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/10 15:45:16 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/10 15:45:17 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/10 15:45:17 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/10 15:45:17 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/10 15:45:17 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/10 15:45:17 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/10 15:45:17 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/10 15:45:17 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/10 15:45:17 loginimpl.go:81: executing query.....
TRACE: 2017/05/10 15:45:17 loginimpl.go:20: token inserted
TRACE: 2017/05/10 15:45:17 loginimpl.go:21: {0 2 OvePJKOIdHjMWVgqnsoU 2017-05-10 15:45:10.7500011 +0530 IST}
TRACE: 2017/05/10 15:45:18 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:45:18 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:45:18 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/10 15:45:18 loginimpl.go:81: executing query.....
TRACE: 2017/05/10 15:45:18 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/10 15:45:18 loginimpl.go:81: executing query.....
TRACE: 2017/05/10 15:45:19 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/10 15:45:19 loginimpl.go:81: executing query.....
TRACE: 2017/05/10 15:45:19 loginimpl.go:93: {0xc0421bf6c0 0xc0422b3e30}
TRACE: 2017/05/10 15:45:19 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/10 15:45:19 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/10 15:45:19 loginimpl.go:16: exntering in SaveToken() function {0 2 MIGSOgqoBaUkfiVNkOAP 2017-05-10 15:45:15.1944355 +0530 IST}
TRACE: 2017/05/10 15:45:19 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/10 15:45:19 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/10 15:45:19 loginimpl.go:81: executing query.....
TRACE: 2017/05/10 15:45:20 loginimpl.go:33: {0xc0421109a0 0xc04240a190}
TRACE: 2017/05/10 15:45:20 Login.go:48: {2 rakesh OvePJKOIdHjMWVgqnsoU user}
TRACE: 2017/05/10 15:45:20 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 15:45:20 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 15:45:20 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/10 15:45:20 Login.go:16: entering manager.login
TRACE: 2017/05/10 15:45:20 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 15:45:20 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 15:45:20 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 15:45:20 questionimpl.go:108: Type is method overriding
TRACE: 2017/05/10 15:45:20 questionimpl.go:111: correct Answer fir ID 3 method overriding
TRACE: 2017/05/10 15:45:20 CalculateScore.go:39: Binomial took %s 4.4063932s
TRACE: 2017/05/10 15:45:20 CalculateScore.go:41: actual vs correct method overloading method overriding
TRACE: 2017/05/10 15:45:20 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:45:20 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:45:20 loginimpl.go:93: {0xc042149960 0xc04240a810}
TRACE: 2017/05/10 15:45:20 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/10 15:45:20 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/10 15:45:20 loginimpl.go:16: exntering in SaveToken() function {0 2 IKGGghwCRvHLzkXPnjvV 2017-05-10 15:45:16.1581616 +0530 IST}
TRACE: 2017/05/10 15:45:20 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/10 15:45:20 loginimpl.go:93: {0xc042149ab0 0xc0424fa7a0}
TRACE: 2017/05/10 15:45:20 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/10 15:45:20 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/10 15:45:20 loginimpl.go:16: exntering in SaveToken() function {0 2 OwFaPBYxRvujeMWSJzRt 2017-05-10 15:45:16.2607344 +0530 IST}
TRACE: 2017/05/10 15:45:20 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/10 15:45:21 loginimpl.go:93: {0xc042111110 0xc0424e5bb0}
TRACE: 2017/05/10 15:45:21 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/10 15:45:21 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/10 15:45:21 loginimpl.go:16: exntering in SaveToken() function {0 2 ZofxFJeOQwIPkowlAVKR 2017-05-10 15:45:17.171071 +0530 IST}
TRACE: 2017/05/10 15:45:21 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/10 15:45:22 loginimpl.go:93: {0xc04211dea0 0xc04240ae00}
TRACE: 2017/05/10 15:45:22 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/10 15:45:22 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/10 15:45:22 loginimpl.go:16: exntering in SaveToken() function {0 2 LgWschdHWLULNluHKCzt 2017-05-10 15:45:17.594352 +0530 IST}
TRACE: 2017/05/10 15:45:22 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/10 15:45:22 loginimpl.go:20: token inserted
TRACE: 2017/05/10 15:45:22 loginimpl.go:21: {0 2 MIGSOgqoBaUkfiVNkOAP 2017-05-10 15:45:15.1944355 +0530 IST}
TRACE: 2017/05/10 15:45:22 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:45:22 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:45:22 loginimpl.go:20: token inserted
TRACE: 2017/05/10 15:45:22 loginimpl.go:21: {0 2 IKGGghwCRvHLzkXPnjvV 2017-05-10 15:45:16.1581616 +0530 IST}
TRACE: 2017/05/10 15:45:23 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 15:45:23 QuestionList.go:18: java
TRACE: 2017/05/10 15:45:23 QuestionList.go:19: YhjhZkuoHtkOCynqYOmn
TRACE: 2017/05/10 15:45:23 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 15:45:23 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 15:45:23 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 15:45:23 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 15:45:23 loginimpl.go:20: token inserted
TRACE: 2017/05/10 15:45:23 loginimpl.go:21: {0 2 OwFaPBYxRvujeMWSJzRt 2017-05-10 15:45:16.2607344 +0530 IST}
TRACE: 2017/05/10 15:45:23 loginimpl.go:20: token inserted
TRACE: 2017/05/10 15:45:23 loginimpl.go:21: {0 2 ZofxFJeOQwIPkowlAVKR 2017-05-10 15:45:17.171071 +0530 IST}
TRACE: 2017/05/10 15:45:24 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/10 15:45:24 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/10 15:45:24 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/10 15:45:24 loginimpl.go:20: token inserted
TRACE: 2017/05/10 15:45:24 loginimpl.go:21: {0 2 LgWschdHWLULNluHKCzt 2017-05-10 15:45:17.594352 +0530 IST}
TRACE: 2017/05/10 15:45:24 loginimpl.go:33: {0xc042111490 0xc04226a750}
TRACE: 2017/05/10 15:45:24 Login.go:48: {2 rakesh MIGSOgqoBaUkfiVNkOAP user}
TRACE: 2017/05/10 15:45:24 loginimpl.go:33: {0xc04211a230 0xc042477df0}
TRACE: 2017/05/10 15:45:25 questionimpl.go:108: Type is a long running background process
TRACE: 2017/05/10 15:45:25 questionimpl.go:111: correct Answer fir ID 9 a long running background process
TRACE: 2017/05/10 15:45:25 Login.go:48: {2 rakesh IKGGghwCRvHLzkXPnjvV user}
TRACE: 2017/05/10 15:45:25 CalculateScore.go:39: Binomial took %s 4.7305661s
TRACE: 2017/05/10 15:45:25 CalculateScore.go:41: actual vs correct a process that automatically starts up when the machine is started a long running background process
TRACE: 2017/05/10 15:45:25 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:45:25 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:45:25 loginimpl.go:33: {0xc042111810 0xc042106430}
TRACE: 2017/05/10 15:45:25 Login.go:48: {2 rakesh OwFaPBYxRvujeMWSJzRt user}
TRACE: 2017/05/10 15:45:25 authenticatetokenimpl.go:47: YhjhZkuoHtkOCynqYOmn
TRACE: 2017/05/10 15:45:25 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 15:45:25 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 15:45:25 loginimpl.go:33: {0xc042138000 0xc042476040}
TRACE: 2017/05/10 15:45:25 Login.go:48: {2 rakesh ZofxFJeOQwIPkowlAVKR user}
TRACE: 2017/05/10 15:45:26 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/10 15:45:26 loginimpl.go:81: executing query.....
TRACE: 2017/05/10 15:45:26 loginimpl.go:33: {0xc042128000 0xc04245c510}
TRACE: 2017/05/10 15:45:26 Login.go:48: {2 rakesh LgWschdHWLULNluHKCzt user}
TRACE: 2017/05/10 15:45:27 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:45:27 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:45:27 authenticatetokenimpl.go:51: 
TRACE: 2017/05/10 15:45:27 authenticatetokenimpl.go:54: No uid with that token.
TRACE: 2017/05/10 15:45:28 loginimpl.go:93: {0xc04211c2a0 0xc04245cb60}
TRACE: 2017/05/10 15:45:28 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/10 15:45:28 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/10 15:45:28 loginimpl.go:16: exntering in SaveToken() function {0 2 JpinvGwOUEOsPzdDdrWf 2017-05-10 15:45:24.2567806 +0530 IST}
TRACE: 2017/05/10 15:45:28 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/10 15:45:29 questionimpl.go:108: Type is both
TRACE: 2017/05/10 15:45:29 questionimpl.go:111: correct Answer fir ID 1 both
TRACE: 2017/05/10 15:45:29 CalculateScore.go:39: Binomial took %s 4.869296s
TRACE: 2017/05/10 15:45:29 CalculateScore.go:41: actual vs correct printer both
TRACE: 2017/05/10 15:45:29 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:45:29 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:45:31 loginimpl.go:20: token inserted
TRACE: 2017/05/10 15:45:31 loginimpl.go:21: {0 2 JpinvGwOUEOsPzdDdrWf 2017-05-10 15:45:24.2567806 +0530 IST}
TRACE: 2017/05/10 15:45:32 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:45:32 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:45:33 loginimpl.go:33: {0xc04211c690 0xc042476740}
TRACE: 2017/05/10 15:45:33 Login.go:48: {2 rakesh JpinvGwOUEOsPzdDdrWf user}
TRACE: 2017/05/10 15:45:34 questionimpl.go:108: Type is c
TRACE: 2017/05/10 15:45:34 questionimpl.go:111: correct Answer fir ID 2 c
TRACE: 2017/05/10 15:45:34 CalculateScore.go:39: Binomial took %s 4.4518382s
TRACE: 2017/05/10 15:45:34 CalculateScore.go:41: actual vs correct java c
TRACE: 2017/05/10 15:45:34 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:45:34 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:45:36 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:45:36 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:45:39 questionimpl.go:108: Type is a method that calls itself
TRACE: 2017/05/10 15:45:39 questionimpl.go:111: correct Answer fir ID 5 a method that calls itself
TRACE: 2017/05/10 15:45:39 CalculateScore.go:39: Binomial took %s 4.7404249s
TRACE: 2017/05/10 15:45:39 CalculateScore.go:41: actual vs correct a method that loops through a list a method that calls itself
TRACE: 2017/05/10 15:45:39 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:45:39 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:45:41 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:45:41 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:45:43 questionimpl.go:108: Type is stack
TRACE: 2017/05/10 15:45:43 questionimpl.go:111: correct Answer fir ID 6 stack
TRACE: 2017/05/10 15:45:43 CalculateScore.go:39: Binomial took %s 4.2993652s
TRACE: 2017/05/10 15:45:43 CalculateScore.go:41: actual vs correct stack stack
TRACE: 2017/05/10 15:45:43 CalculateScore.go:47: 263409560461970212832400
TRACE: 2017/05/10 15:45:43 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 15:45:43 QuestionList.go:18: fundamental
TRACE: 2017/05/10 15:45:43 QuestionList.go:19: JpinvGwOUEOsPzdDdrWf
TRACE: 2017/05/10 15:45:43 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 15:45:43 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 15:45:43 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 15:45:43 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 15:45:44 CalculateScore.go:50: Binomial took %s 1.0002676s
TRACE: 2017/05/10 15:45:44 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:45:44 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:45:46 authenticatetokenimpl.go:47: JpinvGwOUEOsPzdDdrWf
TRACE: 2017/05/10 15:45:46 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 15:45:46 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 15:45:46 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:45:46 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:45:48 authenticatetokenimpl.go:51: JpinvGwOUEOsPzdDdrWf
TRACE: 2017/05/10 15:45:48 authenticatetokenimpl.go:59: Type is JpinvGwOUEOsPzdDdrWf
TRACE: 2017/05/10 15:45:48 aunthenticate.go:42: 2017-05-10 15:45:48
TRACE: 2017/05/10 15:45:48 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 15:45:48 questionimpl.go:108: Type is big O notation
TRACE: 2017/05/10 15:45:48 questionimpl.go:111: correct Answer fir ID 7 big O notation
TRACE: 2017/05/10 15:45:48 CalculateScore.go:39: Binomial took %s 4.2362457s
TRACE: 2017/05/10 15:45:48 CalculateScore.go:41: actual vs correct big O notation big O notation
TRACE: 2017/05/10 15:45:48 CalculateScore.go:47: 263409560461970212832400
TRACE: 2017/05/10 15:45:49 CalculateScore.go:50: Binomial took %s 1.0029904s
TRACE: 2017/05/10 15:45:49 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:45:49 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:45:51 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 15:45:51 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 15:45:52 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:45:52 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:45:53 authenticatetokenimpl.go:30: {0xc042149650 0xc042477840}
TRACE: 2017/05/10 15:45:53 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 15:45:53 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 15:45:53 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 15:45:53 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 15:45:53 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 15:45:53 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 15:45:53 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 15:45:54 questionimpl.go:108: Type is has to implement all method defination from the interface
TRACE: 2017/05/10 15:45:54 questionimpl.go:111: correct Answer fir ID 10 has to implement all method defination from the interface
TRACE: 2017/05/10 15:45:54 CalculateScore.go:39: Binomial took %s 4.6670956s
TRACE: 2017/05/10 15:45:54 CalculateScore.go:41: actual vs correct has to overload the method from the interface has to implement all method defination from the interface
TRACE: 2017/05/10 15:45:54 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:45:54 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:45:55 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0424a9ce0 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 15:45:56 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:45:56 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:45:57 questionimpl.go:30: &{0xc04211d570 0x718ea0 0xc0424fdf20 false [] <nil> 0xc042145bf0}
TRACE: 2017/05/10 15:45:58 questionimpl.go:108: Type is wraping up properties and methods
TRACE: 2017/05/10 15:45:58 questionimpl.go:111: correct Answer fir ID 4 wraping up properties and methods
TRACE: 2017/05/10 15:45:58 CalculateScore.go:39: Binomial took %s 4.1764798s
TRACE: 2017/05/10 15:45:58 CalculateScore.go:41: actual vs correct none of the above wraping up properties and methods
TRACE: 2017/05/10 15:45:58 CalculateScore.go:55: Binomial took %s 47.2405435s
TRACE: 2017/05/10 15:46:46 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 15:46:46 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 15:46:46 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/10 15:46:46 Login.go:16: entering manager.login
TRACE: 2017/05/10 15:46:46 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 15:46:46 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 15:46:46 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 15:46:51 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/10 15:46:51 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/10 15:46:51 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/10 15:46:53 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/10 15:46:53 loginimpl.go:81: executing query.....
TRACE: 2017/05/10 15:46:55 loginimpl.go:93: {0xc0421390a0 0xc0424fb010}
TRACE: 2017/05/10 15:46:55 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/10 15:46:55 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/10 15:46:55 loginimpl.go:16: exntering in SaveToken() function {0 2 XTPuYRtBIRxdKdKoYrlI 2017-05-10 15:46:51.2516319 +0530 IST}
TRACE: 2017/05/10 15:46:55 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/10 15:46:58 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/10 15:46:58 AnswerList.go:23: [{0 6 } {0 8 } {0 9 } {0 5 } {0 1 } {0 7 } {0 10 } {0 3 } {0 4 } {0 2 }]
TRACE: 2017/05/10 15:46:58 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/10 15:46:58 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/10 15:46:58 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/10 15:46:58 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/10 15:46:58 CalculateScore.go:30: answerList [{0 6 } {0 8 } {0 9 } {0 5 } {0 1 } {0 7 } {0 10 } {0 3 } {0 4 } {0 2 }]
TRACE: 2017/05/10 15:46:58 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:46:58 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:46:59 loginimpl.go:20: token inserted
TRACE: 2017/05/10 15:46:59 loginimpl.go:21: {0 2 XTPuYRtBIRxdKdKoYrlI 2017-05-10 15:46:51.2516319 +0530 IST}
TRACE: 2017/05/10 15:47:00 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:47:00 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:47:01 loginimpl.go:33: {0xc0421be380 0xc0422b2ed0}
TRACE: 2017/05/10 15:47:01 Login.go:48: {2 rakesh XTPuYRtBIRxdKdKoYrlI user}
TRACE: 2017/05/10 15:47:02 questionimpl.go:108: Type is stack
TRACE: 2017/05/10 15:47:02 questionimpl.go:111: correct Answer fir ID 6 stack
TRACE: 2017/05/10 15:47:02 CalculateScore.go:39: Binomial took %s 4.5217937s
TRACE: 2017/05/10 15:47:02 CalculateScore.go:41: actual vs correct  stack
TRACE: 2017/05/10 15:47:02 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:47:02 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:47:05 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:47:05 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:47:07 questionimpl.go:108: Type is shows path of current directory
TRACE: 2017/05/10 15:47:07 questionimpl.go:111: correct Answer fir ID 8 shows path of current directory
TRACE: 2017/05/10 15:47:07 CalculateScore.go:39: Binomial took %s 4.5652356s
TRACE: 2017/05/10 15:47:07 CalculateScore.go:41: actual vs correct  shows path of current directory
TRACE: 2017/05/10 15:47:07 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:47:07 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:47:09 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:47:09 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:47:11 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 15:47:11 QuestionList.go:18: java
TRACE: 2017/05/10 15:47:11 QuestionList.go:19: XTPuYRtBIRxdKdKoYrlI
TRACE: 2017/05/10 15:47:11 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 15:47:11 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 15:47:11 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 15:47:11 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 15:47:12 questionimpl.go:108: Type is a long running background process
TRACE: 2017/05/10 15:47:12 questionimpl.go:111: correct Answer fir ID 9 a long running background process
TRACE: 2017/05/10 15:47:12 CalculateScore.go:39: Binomial took %s 4.6208692s
TRACE: 2017/05/10 15:47:12 CalculateScore.go:41: actual vs correct  a long running background process
TRACE: 2017/05/10 15:47:12 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:47:12 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:47:13 authenticatetokenimpl.go:47: XTPuYRtBIRxdKdKoYrlI
TRACE: 2017/05/10 15:47:13 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 15:47:13 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 15:47:16 authenticatetokenimpl.go:51: XTPuYRtBIRxdKdKoYrlI
TRACE: 2017/05/10 15:47:16 authenticatetokenimpl.go:59: Type is XTPuYRtBIRxdKdKoYrlI
TRACE: 2017/05/10 15:47:16 aunthenticate.go:42: 2017-05-10 15:47:16
TRACE: 2017/05/10 15:47:16 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 15:47:19 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 15:47:19 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 15:47:21 authenticatetokenimpl.go:30: {0xc04211dea0 0xc0421e2d80}
TRACE: 2017/05/10 15:47:21 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 15:47:21 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 15:47:21 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 15:47:21 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 15:47:21 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 15:47:21 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 15:47:21 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 15:47:24 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc042192cc0 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 15:47:26 questionimpl.go:30: &{0xc042148000 0x718ea0 0xc042478080 false [] <nil> 0xc04237e090}
TRACE: 2017/05/10 15:47:33 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:47:44 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 15:47:44 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 15:47:44 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/10 15:47:44 Login.go:16: entering manager.login
TRACE: 2017/05/10 15:47:44 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 15:47:44 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 15:47:44 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 15:47:48 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/10 15:47:48 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/10 15:47:48 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/10 15:47:51 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/10 15:47:51 loginimpl.go:81: executing query.....
TRACE: 2017/05/10 15:47:53 loginimpl.go:93: {0xc04211c460 0xc0424760e0}
TRACE: 2017/05/10 15:47:53 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/10 15:47:53 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/10 15:47:53 loginimpl.go:16: exntering in SaveToken() function {0 2 pwjmOnQLgZBdELERGwGw 2017-05-10 15:47:48.7535765 +0530 IST}
TRACE: 2017/05/10 15:47:53 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/10 15:47:55 loginimpl.go:20: token inserted
TRACE: 2017/05/10 15:47:55 loginimpl.go:21: {0 2 pwjmOnQLgZBdELERGwGw 2017-05-10 15:47:48.7535765 +0530 IST}
TRACE: 2017/05/10 15:47:58 loginimpl.go:33: {0xc04211c4d0 0xc042004180}
TRACE: 2017/05/10 15:47:58 Login.go:48: {2 rakesh pwjmOnQLgZBdELERGwGw user}
TRACE: 2017/05/10 15:48:06 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 15:48:06 QuestionList.go:18: language
TRACE: 2017/05/10 15:48:06 QuestionList.go:19: pwjmOnQLgZBdELERGwGw
TRACE: 2017/05/10 15:48:06 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 15:48:06 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 15:48:06 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 15:48:06 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 15:48:27 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/10 15:48:27 AnswerList.go:23: [{0 30 max(Collection c, Comparator comp)} {0 20 Destructors} {0 12 w.q} {0 29 close()} {0 31 ambigous()} {0 27 0 to 65535} {0 26 100} {0 19 autoboxing} {0 13 none of above} {0 34 for(i=0; ; i++)} {0 11 Final class} {0 28 File Filtering} {0 14 resume() method} {0 35 final} {0 23 InputStream class} {0 32 EMPTY_SET} {0 17 none of above} {0 25 Class} {0 15 java.util.SortedSet} {0 33 if, break} {0 18 java.util.Date} {0 21 double} {0 22 } {0 24 } {0 16 }]
TRACE: 2017/05/10 15:48:27 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/10 15:48:27 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/10 15:48:27 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/10 15:48:27 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/10 15:48:27 CalculateScore.go:30: answerList [{0 30 max(Collection c, Comparator comp)} {0 20 Destructors} {0 12 w.q} {0 29 close()} {0 31 ambigous()} {0 27 0 to 65535} {0 26 100} {0 19 autoboxing} {0 13 none of above} {0 34 for(i=0; ; i++)} {0 11 Final class} {0 28 File Filtering} {0 14 resume() method} {0 35 final} {0 23 InputStream class} {0 32 EMPTY_SET} {0 17 none of above} {0 25 Class} {0 15 java.util.SortedSet} {0 33 if, break} {0 18 java.util.Date} {0 21 double} {0 22 } {0 24 } {0 16 }]
TRACE: 2017/05/10 15:48:27 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:48:27 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:48:29 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:48:29 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:48:31 questionimpl.go:108: Type is max(Comparator comp)
TRACE: 2017/05/10 15:48:31 questionimpl.go:111: correct Answer fir ID 30 max(Comparator comp)
TRACE: 2017/05/10 15:48:31 CalculateScore.go:39: Binomial took %s 4.4564794s
TRACE: 2017/05/10 15:48:31 CalculateScore.go:41: actual vs correct max(Collection c, Comparator comp) max(Comparator comp)
TRACE: 2017/05/10 15:48:31 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:48:31 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:48:33 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:48:33 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:48:35 questionimpl.go:108: Type is Constructor
TRACE: 2017/05/10 15:48:35 questionimpl.go:111: correct Answer fir ID 20 Constructor
TRACE: 2017/05/10 15:48:35 CalculateScore.go:39: Binomial took %s 4.2824453s
TRACE: 2017/05/10 15:48:35 CalculateScore.go:41: actual vs correct Destructors Constructor
TRACE: 2017/05/10 15:48:35 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:48:35 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:48:37 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 15:48:37 QuestionList.go:18: language
TRACE: 2017/05/10 15:48:37 QuestionList.go:19: XTPuYRtBIRxdKdKoYrlI
TRACE: 2017/05/10 15:48:37 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 15:48:37 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 15:48:37 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 15:48:37 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 15:48:38 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:48:38 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:48:39 authenticatetokenimpl.go:47: XTPuYRtBIRxdKdKoYrlI
TRACE: 2017/05/10 15:48:39 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 15:48:39 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 15:48:40 questionimpl.go:108: Type is No
TRACE: 2017/05/10 15:48:40 questionimpl.go:111: correct Answer fir ID 12 No
TRACE: 2017/05/10 15:48:40 CalculateScore.go:39: Binomial took %s 4.3911503s
TRACE: 2017/05/10 15:48:40 CalculateScore.go:41: actual vs correct w.q No
TRACE: 2017/05/10 15:48:40 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:48:40 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:48:41 authenticatetokenimpl.go:51: 
TRACE: 2017/05/10 15:48:41 authenticatetokenimpl.go:54: No uid with that token.
TRACE: 2017/05/10 15:48:42 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:48:42 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:48:44 questionimpl.go:108: Type is flush()
TRACE: 2017/05/10 15:48:44 questionimpl.go:111: correct Answer fir ID 29 flush()
TRACE: 2017/05/10 15:48:44 CalculateScore.go:39: Binomial took %s 4.6704297s
TRACE: 2017/05/10 15:48:44 CalculateScore.go:41: actual vs correct close() flush()
TRACE: 2017/05/10 15:48:44 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:48:44 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:48:47 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:48:47 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:48:49 questionimpl.go:108: Type is shuffle()
TRACE: 2017/05/10 15:48:49 questionimpl.go:111: correct Answer fir ID 31 shuffle()
TRACE: 2017/05/10 15:48:49 CalculateScore.go:39: Binomial took %s 4.6193955s
TRACE: 2017/05/10 15:48:49 CalculateScore.go:41: actual vs correct ambigous() shuffle()
TRACE: 2017/05/10 15:48:49 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:48:49 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:48:52 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:48:52 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:48:54 questionimpl.go:108: Type is 0 to 65535
TRACE: 2017/05/10 15:48:54 questionimpl.go:111: correct Answer fir ID 27 0 to 65535
TRACE: 2017/05/10 15:48:54 CalculateScore.go:39: Binomial took %s 4.6591863s
TRACE: 2017/05/10 15:48:54 CalculateScore.go:41: actual vs correct 0 to 65535 0 to 65535
TRACE: 2017/05/10 15:48:54 CalculateScore.go:47: 263409560461970212832400
TRACE: 2017/05/10 15:48:55 CalculateScore.go:50: Binomial took %s 1.0019346s
TRACE: 2017/05/10 15:48:55 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:48:55 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:48:57 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:48:57 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:48:59 questionimpl.go:108: Type is 100
TRACE: 2017/05/10 15:48:59 questionimpl.go:111: correct Answer fir ID 26 100
TRACE: 2017/05/10 15:48:59 CalculateScore.go:39: Binomial took %s 4.6632772s
TRACE: 2017/05/10 15:48:59 CalculateScore.go:41: actual vs correct 100 100
TRACE: 2017/05/10 15:48:59 CalculateScore.go:47: 263409560461970212832400
TRACE: 2017/05/10 15:49:00 CalculateScore.go:50: Binomial took %s 1.0012935s
TRACE: 2017/05/10 15:49:00 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:49:00 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:49:03 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:49:03 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:49:05 questionimpl.go:108: Type is autoboxing
TRACE: 2017/05/10 15:49:05 questionimpl.go:111: correct Answer fir ID 19 autoboxing
TRACE: 2017/05/10 15:49:05 CalculateScore.go:39: Binomial took %s 4.5370135s
TRACE: 2017/05/10 15:49:05 CalculateScore.go:41: actual vs correct autoboxing autoboxing
TRACE: 2017/05/10 15:49:05 CalculateScore.go:47: 263409560461970212832400
TRACE: 2017/05/10 15:49:06 CalculateScore.go:50: Binomial took %s 1.0012299s
TRACE: 2017/05/10 15:49:06 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:49:06 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:49:08 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:49:08 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:49:10 questionimpl.go:108: Type is Can store multiple values
TRACE: 2017/05/10 15:49:10 questionimpl.go:111: correct Answer fir ID 13 Can store multiple values
TRACE: 2017/05/10 15:49:10 CalculateScore.go:39: Binomial took %s 4.6093153s
TRACE: 2017/05/10 15:49:10 CalculateScore.go:41: actual vs correct none of above Can store multiple values
TRACE: 2017/05/10 15:49:10 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:49:10 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:49:13 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:49:13 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:49:16 questionimpl.go:108: Type is All of the above
TRACE: 2017/05/10 15:49:16 questionimpl.go:111: correct Answer fir ID 34 All of the above
TRACE: 2017/05/10 15:49:16 CalculateScore.go:39: Binomial took %s 5.3196288s
TRACE: 2017/05/10 15:49:16 CalculateScore.go:41: actual vs correct for(i=0; ; i++) All of the above
TRACE: 2017/05/10 15:49:16 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:49:16 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:49:18 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:49:18 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:49:20 questionimpl.go:108: Type is Final class
TRACE: 2017/05/10 15:49:20 questionimpl.go:111: correct Answer fir ID 11 Final class
TRACE: 2017/05/10 15:49:20 CalculateScore.go:39: Binomial took %s 4.4982242s
TRACE: 2017/05/10 15:49:20 CalculateScore.go:41: actual vs correct Final class Final class
TRACE: 2017/05/10 15:49:20 CalculateScore.go:47: 263409560461970212832400
TRACE: 2017/05/10 15:49:21 CalculateScore.go:50: Binomial took %s 1.0012667s
TRACE: 2017/05/10 15:49:21 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:49:21 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:49:23 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 15:49:23 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 15:49:23 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/10 15:49:23 Login.go:16: entering manager.login
TRACE: 2017/05/10 15:49:23 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 15:49:23 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 15:49:23 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 15:49:24 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:49:24 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:49:26 questionimpl.go:108: Type is Serialization
TRACE: 2017/05/10 15:49:26 questionimpl.go:111: correct Answer fir ID 28 Serialization
TRACE: 2017/05/10 15:49:26 CalculateScore.go:39: Binomial took %s 4.2662565s
TRACE: 2017/05/10 15:49:26 CalculateScore.go:41: actual vs correct File Filtering Serialization
TRACE: 2017/05/10 15:49:26 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:49:26 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:49:28 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/10 15:49:28 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/10 15:49:28 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/10 15:49:28 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:49:28 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:49:30 questionimpl.go:108: Type is resume() method
TRACE: 2017/05/10 15:49:30 questionimpl.go:111: correct Answer fir ID 14 resume() method
TRACE: 2017/05/10 15:49:30 CalculateScore.go:39: Binomial took %s 4.4953063s
TRACE: 2017/05/10 15:49:30 CalculateScore.go:41: actual vs correct resume() method resume() method
TRACE: 2017/05/10 15:49:30 CalculateScore.go:47: 263409560461970212832400
TRACE: 2017/05/10 15:49:30 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/10 15:49:30 loginimpl.go:81: executing query.....
TRACE: 2017/05/10 15:49:31 CalculateScore.go:50: Binomial took %s 1.001522s
TRACE: 2017/05/10 15:49:31 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:49:31 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:49:32 loginimpl.go:93: {0xc042129a40 0xc0421e24e0}
TRACE: 2017/05/10 15:49:32 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/10 15:49:32 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/10 15:49:32 loginimpl.go:16: exntering in SaveToken() function {0 2 KXMGAYHSZvrbbuHbgAcF 2017-05-10 15:49:28.1675516 +0530 IST}
TRACE: 2017/05/10 15:49:32 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/10 15:49:34 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:49:34 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:49:35 loginimpl.go:20: token inserted
TRACE: 2017/05/10 15:49:35 loginimpl.go:21: {0 2 KXMGAYHSZvrbbuHbgAcF 2017-05-10 15:49:28.1675516 +0530 IST}
TRACE: 2017/05/10 15:49:36 questionimpl.go:108: Type is final
TRACE: 2017/05/10 15:49:36 questionimpl.go:111: correct Answer fir ID 35 final
TRACE: 2017/05/10 15:49:36 CalculateScore.go:39: Binomial took %s 4.6380994s
TRACE: 2017/05/10 15:49:36 CalculateScore.go:41: actual vs correct final final
TRACE: 2017/05/10 15:49:36 CalculateScore.go:47: 263409560461970212832400
TRACE: 2017/05/10 15:49:37 CalculateScore.go:50: Binomial took %s 1.0005556s
TRACE: 2017/05/10 15:49:37 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:49:37 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:49:37 loginimpl.go:33: {0xc0421484d0 0xc042106d00}
TRACE: 2017/05/10 15:49:37 Login.go:48: {2 rakesh KXMGAYHSZvrbbuHbgAcF user}
TRACE: 2017/05/10 15:49:39 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:49:39 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:49:41 questionimpl.go:108: Type is PrintStream class
TRACE: 2017/05/10 15:49:41 questionimpl.go:111: correct Answer fir ID 23 PrintStream class
TRACE: 2017/05/10 15:49:41 CalculateScore.go:39: Binomial took %s 4.5250525s
TRACE: 2017/05/10 15:49:41 CalculateScore.go:41: actual vs correct InputStream class PrintStream class
TRACE: 2017/05/10 15:49:41 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:49:41 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:49:44 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:49:44 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:49:46 questionimpl.go:108: Type is All of the mentioned
TRACE: 2017/05/10 15:49:46 questionimpl.go:111: correct Answer fir ID 32 All of the mentioned
TRACE: 2017/05/10 15:49:46 CalculateScore.go:39: Binomial took %s 4.3403608s
TRACE: 2017/05/10 15:49:46 CalculateScore.go:41: actual vs correct EMPTY_SET All of the mentioned
TRACE: 2017/05/10 15:49:46 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:49:46 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:49:48 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:49:48 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:49:50 questionimpl.go:108: Type is Multithreaded
TRACE: 2017/05/10 15:49:50 questionimpl.go:111: correct Answer fir ID 17 Multithreaded
TRACE: 2017/05/10 15:49:50 CalculateScore.go:39: Binomial took %s 4.4419768s
TRACE: 2017/05/10 15:49:50 CalculateScore.go:41: actual vs correct none of above Multithreaded
TRACE: 2017/05/10 15:49:50 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:49:50 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:49:52 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:49:52 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:49:53 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 15:49:53 QuestionList.go:18: language
TRACE: 2017/05/10 15:49:53 QuestionList.go:19: KXMGAYHSZvrbbuHbgAcF
TRACE: 2017/05/10 15:49:53 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 15:49:53 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 15:49:53 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 15:49:53 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 15:49:54 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 15:49:54 QuestionList.go:18: fundamental
TRACE: 2017/05/10 15:49:54 QuestionList.go:19: XTPuYRtBIRxdKdKoYrlI
TRACE: 2017/05/10 15:49:54 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 15:49:54 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 15:49:54 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 15:49:54 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 15:49:54 questionimpl.go:108: Type is Interface
TRACE: 2017/05/10 15:49:54 questionimpl.go:111: correct Answer fir ID 25 Interface
TRACE: 2017/05/10 15:49:54 CalculateScore.go:39: Binomial took %s 4.3593483s
TRACE: 2017/05/10 15:49:54 CalculateScore.go:41: actual vs correct Class Interface
TRACE: 2017/05/10 15:49:54 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:49:54 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:49:55 authenticatetokenimpl.go:47: KXMGAYHSZvrbbuHbgAcF
TRACE: 2017/05/10 15:49:55 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 15:49:55 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 15:49:57 authenticatetokenimpl.go:47: XTPuYRtBIRxdKdKoYrlI
TRACE: 2017/05/10 15:49:57 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 15:49:57 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 15:49:57 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:49:57 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:49:58 authenticatetokenimpl.go:51: KXMGAYHSZvrbbuHbgAcF
TRACE: 2017/05/10 15:49:58 authenticatetokenimpl.go:59: Type is KXMGAYHSZvrbbuHbgAcF
TRACE: 2017/05/10 15:49:58 aunthenticate.go:42: 2017-05-10 15:49:58
TRACE: 2017/05/10 15:49:58 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 15:49:59 authenticatetokenimpl.go:51: 
TRACE: 2017/05/10 15:49:59 authenticatetokenimpl.go:54: No uid with that token.
TRACE: 2017/05/10 15:49:59 questionimpl.go:108: Type is java.util.TreeMap
TRACE: 2017/05/10 15:49:59 questionimpl.go:111: correct Answer fir ID 15 java.util.TreeMap
TRACE: 2017/05/10 15:49:59 CalculateScore.go:39: Binomial took %s 4.4542217s
TRACE: 2017/05/10 15:49:59 CalculateScore.go:41: actual vs correct java.util.SortedSet java.util.TreeMap
TRACE: 2017/05/10 15:49:59 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:49:59 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:50:00 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 15:50:00 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 15:50:01 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:50:01 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:50:02 authenticatetokenimpl.go:30: {0xc0421bff80 0xc042005710}
TRACE: 2017/05/10 15:50:02 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 15:50:02 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 15:50:02 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 15:50:02 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 15:50:02 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 15:50:02 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 15:50:02 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 15:50:03 questionimpl.go:108: Type is switch, if
TRACE: 2017/05/10 15:50:03 questionimpl.go:111: correct Answer fir ID 33 switch, if
TRACE: 2017/05/10 15:50:03 CalculateScore.go:39: Binomial took %s 4.3812329s
TRACE: 2017/05/10 15:50:03 CalculateScore.go:41: actual vs correct if, break switch, if
TRACE: 2017/05/10 15:50:03 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:50:03 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:50:05 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc04229c6c0 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 15:50:06 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:50:06 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:50:07 questionimpl.go:30: &{0xc042108380 0x718ea0 0xc04227d0c0 false [] <nil> 0xc04237ba70}
TRACE: 2017/05/10 15:50:08 questionimpl.go:108: Type is java.util.Date
TRACE: 2017/05/10 15:50:08 questionimpl.go:111: correct Answer fir ID 18 java.util.Date
TRACE: 2017/05/10 15:50:08 CalculateScore.go:39: Binomial took %s 4.842813s
TRACE: 2017/05/10 15:50:08 CalculateScore.go:41: actual vs correct java.util.Date java.util.Date
TRACE: 2017/05/10 15:50:08 CalculateScore.go:47: 263409560461970212832400
TRACE: 2017/05/10 15:50:09 CalculateScore.go:50: Binomial took %s 1.0008026s
TRACE: 2017/05/10 15:50:09 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:50:09 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:50:11 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:50:11 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:50:13 questionimpl.go:108: Type is string
TRACE: 2017/05/10 15:50:13 questionimpl.go:111: correct Answer fir ID 21 string
TRACE: 2017/05/10 15:50:13 CalculateScore.go:39: Binomial took %s 4.3892448s
TRACE: 2017/05/10 15:50:13 CalculateScore.go:41: actual vs correct double string
TRACE: 2017/05/10 15:50:13 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:50:13 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:50:14 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 15:50:14 QuestionList.go:18: language
TRACE: 2017/05/10 15:50:14 QuestionList.go:19: XTPuYRtBIRxdKdKoYrlI
TRACE: 2017/05/10 15:50:14 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 15:50:14 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 15:50:14 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 15:50:14 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 15:50:16 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:50:16 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:50:16 authenticatetokenimpl.go:47: XTPuYRtBIRxdKdKoYrlI
TRACE: 2017/05/10 15:50:16 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 15:50:16 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 15:50:18 questionimpl.go:108: Type is Queue
TRACE: 2017/05/10 15:50:18 questionimpl.go:111: correct Answer fir ID 22 Queue
TRACE: 2017/05/10 15:50:18 CalculateScore.go:39: Binomial took %s 4.6519064s
TRACE: 2017/05/10 15:50:18 CalculateScore.go:41: actual vs correct  Queue
TRACE: 2017/05/10 15:50:18 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:50:18 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:50:18 authenticatetokenimpl.go:51: 
TRACE: 2017/05/10 15:50:18 authenticatetokenimpl.go:54: No uid with that token.
TRACE: 2017/05/10 15:50:21 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:50:21 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:50:23 questionimpl.go:108: Type is transient
TRACE: 2017/05/10 15:50:23 questionimpl.go:111: correct Answer fir ID 24 transient
TRACE: 2017/05/10 15:50:23 CalculateScore.go:39: Binomial took %s 4.646603s
TRACE: 2017/05/10 15:50:23 CalculateScore.go:41: actual vs correct  transient
TRACE: 2017/05/10 15:50:23 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:50:23 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:50:25 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:50:25 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:50:27 questionimpl.go:108: Type is getConnection()
TRACE: 2017/05/10 15:50:27 questionimpl.go:111: correct Answer fir ID 16 getConnection()
TRACE: 2017/05/10 15:50:27 CalculateScore.go:39: Binomial took %s 4.4629604s
TRACE: 2017/05/10 15:50:27 CalculateScore.go:41: actual vs correct  getConnection()
TRACE: 2017/05/10 15:50:27 CalculateScore.go:55: Binomial took %s 2m0.6145156s
TRACE: 2017/05/10 15:51:07 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/10 15:51:07 AnswerList.go:23: [{0 37 } {0 43 } {0 41 } {0 38 } {0 36 } {0 40 } {0 39 } {0 42 }]
TRACE: 2017/05/10 15:51:07 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/10 15:51:07 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/10 15:51:07 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/10 15:51:07 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/10 15:51:07 CalculateScore.go:30: answerList [{0 37 } {0 43 } {0 41 } {0 38 } {0 36 } {0 40 } {0 39 } {0 42 }]
TRACE: 2017/05/10 15:51:07 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:51:07 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:51:09 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:51:09 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:51:11 questionimpl.go:108: Type is very busy
TRACE: 2017/05/10 15:51:11 questionimpl.go:111: correct Answer fir ID 37 very busy
TRACE: 2017/05/10 15:51:11 CalculateScore.go:39: Binomial took %s 4.3147075s
TRACE: 2017/05/10 15:51:11 CalculateScore.go:41: actual vs correct  very busy
TRACE: 2017/05/10 15:51:11 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:51:11 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:51:14 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:51:14 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:51:16 questionimpl.go:108: Type is has agreed to
TRACE: 2017/05/10 15:51:16 questionimpl.go:111: correct Answer fir ID 43 has agreed to
TRACE: 2017/05/10 15:51:16 CalculateScore.go:39: Binomial took %s 4.3407521s
TRACE: 2017/05/10 15:51:16 CalculateScore.go:41: actual vs correct  has agreed to
TRACE: 2017/05/10 15:51:16 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:51:16 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:51:18 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:51:18 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:51:21 questionimpl.go:108: Type is tractabilitytractability
TRACE: 2017/05/10 15:51:21 questionimpl.go:111: correct Answer fir ID 41 tractabilitytractability
TRACE: 2017/05/10 15:51:21 CalculateScore.go:39: Binomial took %s 4.7404133s
TRACE: 2017/05/10 15:51:21 CalculateScore.go:41: actual vs correct  tractabilitytractability
TRACE: 2017/05/10 15:51:21 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:51:21 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:51:23 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:51:23 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:51:25 questionimpl.go:108: Type is written contract
TRACE: 2017/05/10 15:51:25 questionimpl.go:111: correct Answer fir ID 38 written contract
TRACE: 2017/05/10 15:51:25 CalculateScore.go:39: Binomial took %s 4.2864392s
TRACE: 2017/05/10 15:51:25 CalculateScore.go:41: actual vs correct  written contract
TRACE: 2017/05/10 15:51:25 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:51:25 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:51:27 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:51:27 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:51:29 questionimpl.go:108: Type is tormented
TRACE: 2017/05/10 15:51:29 questionimpl.go:111: correct Answer fir ID 36 tormented
TRACE: 2017/05/10 15:51:29 CalculateScore.go:39: Binomial took %s 4.3121651s
TRACE: 2017/05/10 15:51:29 CalculateScore.go:41: actual vs correct  tormented
TRACE: 2017/05/10 15:51:29 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:51:29 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:51:31 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:51:31 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:51:33 questionimpl.go:108: Type is gold
TRACE: 2017/05/10 15:51:33 questionimpl.go:111: correct Answer fir ID 40 gold
TRACE: 2017/05/10 15:51:33 CalculateScore.go:39: Binomial took %s 4.3171102s
TRACE: 2017/05/10 15:51:33 CalculateScore.go:41: actual vs correct  gold
TRACE: 2017/05/10 15:51:33 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:51:33 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:51:36 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:51:36 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:51:38 questionimpl.go:108: Type is gist,ambiguity
TRACE: 2017/05/10 15:51:38 questionimpl.go:111: correct Answer fir ID 39 gist,ambiguity
TRACE: 2017/05/10 15:51:38 CalculateScore.go:39: Binomial took %s 4.662951s
TRACE: 2017/05/10 15:51:38 CalculateScore.go:41: actual vs correct  gist,ambiguity
TRACE: 2017/05/10 15:51:38 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:51:38 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:51:41 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:51:41 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:51:43 questionimpl.go:108: Type is infallible,mythological
TRACE: 2017/05/10 15:51:43 questionimpl.go:111: correct Answer fir ID 42 infallible,mythological
TRACE: 2017/05/10 15:51:43 CalculateScore.go:39: Binomial took %s 4.8382692s
TRACE: 2017/05/10 15:51:43 CalculateScore.go:41: actual vs correct  infallible,mythological
TRACE: 2017/05/10 15:51:43 CalculateScore.go:55: Binomial took %s 35.8148087s
TRACE: 2017/05/10 15:51:47 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 15:51:47 QuestionList.go:18: java
TRACE: 2017/05/10 15:51:47 QuestionList.go:19: KXMGAYHSZvrbbuHbgAcF
TRACE: 2017/05/10 15:51:47 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 15:51:47 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 15:51:47 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 15:51:47 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 15:51:50 authenticatetokenimpl.go:47: KXMGAYHSZvrbbuHbgAcF
TRACE: 2017/05/10 15:51:50 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 15:51:50 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 15:51:52 authenticatetokenimpl.go:51: 
TRACE: 2017/05/10 15:51:52 authenticatetokenimpl.go:54: No uid with that token.
TRACE: 2017/05/10 15:52:30 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 15:52:30 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 15:52:30 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/10 15:52:30 Login.go:16: entering manager.login
TRACE: 2017/05/10 15:52:30 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 15:52:30 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 15:52:30 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 15:52:35 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/10 15:52:35 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/10 15:52:35 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/10 15:52:37 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/10 15:52:37 loginimpl.go:81: executing query.....
TRACE: 2017/05/10 15:52:39 loginimpl.go:93: {0xc042149420 0xc04240bbb0}
TRACE: 2017/05/10 15:52:39 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/10 15:52:39 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/10 15:52:39 loginimpl.go:16: exntering in SaveToken() function {0 2 JqjbdVVxoRXQfaIWSGLV 2017-05-10 15:52:35.2298851 +0530 IST}
TRACE: 2017/05/10 15:52:39 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/10 15:52:41 loginimpl.go:20: token inserted
TRACE: 2017/05/10 15:52:41 loginimpl.go:21: {0 2 JqjbdVVxoRXQfaIWSGLV 2017-05-10 15:52:35.2298851 +0530 IST}
TRACE: 2017/05/10 15:52:43 loginimpl.go:33: {0xc04211ccb0 0xc042004ad0}
TRACE: 2017/05/10 15:52:43 Login.go:48: {2 rakesh JqjbdVVxoRXQfaIWSGLV user}
TRACE: 2017/05/10 15:52:53 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 15:52:53 QuestionList.go:18: fundamental
TRACE: 2017/05/10 15:52:53 QuestionList.go:19: JqjbdVVxoRXQfaIWSGLV
TRACE: 2017/05/10 15:52:53 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 15:52:53 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 15:52:53 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 15:52:53 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 15:52:55 authenticatetokenimpl.go:47: JqjbdVVxoRXQfaIWSGLV
TRACE: 2017/05/10 15:52:55 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 15:52:55 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 15:52:57 authenticatetokenimpl.go:51: JqjbdVVxoRXQfaIWSGLV
TRACE: 2017/05/10 15:52:57 authenticatetokenimpl.go:59: Type is JqjbdVVxoRXQfaIWSGLV
TRACE: 2017/05/10 15:52:57 aunthenticate.go:42: 2017-05-10 15:52:57
TRACE: 2017/05/10 15:52:57 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 15:53:00 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 15:53:00 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 15:53:02 authenticatetokenimpl.go:30: {0xc042129810 0xc042384c20}
TRACE: 2017/05/10 15:53:02 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 15:53:02 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 15:53:02 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 15:53:02 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 15:53:02 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 15:53:02 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 15:53:02 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 15:53:04 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0422f8960 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 15:53:06 questionimpl.go:30: &{0xc042129c70 0x718ea0 0xc0421d69c0 false [] <nil> 0xc042285e60}
TRACE: 2017/05/10 15:54:34 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 15:54:34 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 15:54:34 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/10 15:54:34 Login.go:16: entering manager.login
TRACE: 2017/05/10 15:54:34 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 15:54:34 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 15:54:34 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 15:54:39 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/10 15:54:39 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/10 15:54:39 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/10 15:54:41 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/10 15:54:41 loginimpl.go:81: executing query.....
TRACE: 2017/05/10 15:54:43 loginimpl.go:93: {0xc0421be0e0 0xc0420450e0}
TRACE: 2017/05/10 15:54:43 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/10 15:54:43 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/10 15:54:43 loginimpl.go:16: exntering in SaveToken() function {0 2 GwUMSXsFLbKndecrboiq 2017-05-10 15:54:39.2306283 +0530 IST}
TRACE: 2017/05/10 15:54:43 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/10 15:54:45 loginimpl.go:20: token inserted
TRACE: 2017/05/10 15:54:45 loginimpl.go:21: {0 2 GwUMSXsFLbKndecrboiq 2017-05-10 15:54:39.2306283 +0530 IST}
TRACE: 2017/05/10 15:54:47 loginimpl.go:33: {0xc0421be700 0xc042136be0}
TRACE: 2017/05/10 15:54:47 Login.go:48: {2 rakesh GwUMSXsFLbKndecrboiq user}
TRACE: 2017/05/10 15:55:04 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 15:55:04 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 15:55:04 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/10 15:55:04 Login.go:16: entering manager.login
TRACE: 2017/05/10 15:55:04 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 15:55:04 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 15:55:04 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 15:55:09 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/10 15:55:09 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/10 15:55:09 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/10 15:55:11 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/10 15:55:11 loginimpl.go:81: executing query.....
TRACE: 2017/05/10 15:55:13 loginimpl.go:93: {0xc0421be7e0 0xc0421378e0}
TRACE: 2017/05/10 15:55:13 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/10 15:55:13 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/10 15:55:13 loginimpl.go:16: exntering in SaveToken() function {0 2 kIbxxEyNBzBiQUgxXzYT 2017-05-10 15:55:09.1307856 +0530 IST}
TRACE: 2017/05/10 15:55:13 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/10 15:55:15 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 15:55:15 QuestionList.go:18: fundamental
TRACE: 2017/05/10 15:55:15 QuestionList.go:19: GwUMSXsFLbKndecrboiq
TRACE: 2017/05/10 15:55:15 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 15:55:15 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 15:55:15 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 15:55:15 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 15:55:16 loginimpl.go:20: token inserted
TRACE: 2017/05/10 15:55:16 loginimpl.go:21: {0 2 kIbxxEyNBzBiQUgxXzYT 2017-05-10 15:55:09.1307856 +0530 IST}
TRACE: 2017/05/10 15:55:17 authenticatetokenimpl.go:47: GwUMSXsFLbKndecrboiq
TRACE: 2017/05/10 15:55:17 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 15:55:17 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 15:55:18 loginimpl.go:33: {0xc042148d90 0xc04240b8b0}
TRACE: 2017/05/10 15:55:18 Login.go:48: {2 rakesh kIbxxEyNBzBiQUgxXzYT user}
TRACE: 2017/05/10 15:55:20 authenticatetokenimpl.go:51: 
TRACE: 2017/05/10 15:55:20 authenticatetokenimpl.go:54: No uid with that token.
TRACE: 2017/05/10 15:55:28 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 15:55:28 QuestionList.go:18: fundamental
TRACE: 2017/05/10 15:55:28 QuestionList.go:19: kIbxxEyNBzBiQUgxXzYT
TRACE: 2017/05/10 15:55:28 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 15:55:28 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 15:55:28 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 15:55:28 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 15:55:31 authenticatetokenimpl.go:47: kIbxxEyNBzBiQUgxXzYT
TRACE: 2017/05/10 15:55:31 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 15:55:31 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 15:55:33 authenticatetokenimpl.go:51: kIbxxEyNBzBiQUgxXzYT
TRACE: 2017/05/10 15:55:33 authenticatetokenimpl.go:59: Type is kIbxxEyNBzBiQUgxXzYT
TRACE: 2017/05/10 15:55:33 aunthenticate.go:42: 2017-05-10 15:55:33
TRACE: 2017/05/10 15:55:33 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 15:55:35 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 15:55:35 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 15:55:37 authenticatetokenimpl.go:30: {0xc04211cfc0 0xc042384180}
TRACE: 2017/05/10 15:55:37 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 15:55:37 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 15:55:37 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 15:55:37 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 15:55:37 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 15:55:37 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 15:55:37 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 15:55:40 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0422f85a0 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 15:55:42 questionimpl.go:30: &{0xc0421287e0 0x718ea0 0xc0420082e0 false [] <nil> 0xc042326ab0}
TRACE: 2017/05/10 15:56:04 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/10 15:56:04 AnswerList.go:23: [{0 10 has to overload the method from the interface} {0 6 linked list} {0 7 unit testing} {0 9 a process that is dead} {0 1 printer} {0 3 method overriding} {0 5 a method that loops through a list} {0 2 java} {0 8 shows the list of files in the directory} {0 4 a way of delivering a class from another class }]
TRACE: 2017/05/10 15:56:04 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/10 15:56:04 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/10 15:56:04 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/10 15:56:04 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/10 15:56:04 CalculateScore.go:30: answerList [{0 10 has to overload the method from the interface} {0 6 linked list} {0 7 unit testing} {0 9 a process that is dead} {0 1 printer} {0 3 method overriding} {0 5 a method that loops through a list} {0 2 java} {0 8 shows the list of files in the directory} {0 4 a way of delivering a class from another class }]
TRACE: 2017/05/10 15:56:04 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:56:04 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:56:06 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 15:56:06 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 15:56:06 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/10 15:56:06 Login.go:16: entering manager.login
TRACE: 2017/05/10 15:56:06 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 15:56:06 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 15:56:06 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 15:56:06 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:56:06 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:56:08 questionimpl.go:108: Type is has to implement all method defination from the interface
TRACE: 2017/05/10 15:56:08 questionimpl.go:111: correct Answer fir ID 10 has to implement all method defination from the interface
TRACE: 2017/05/10 15:56:08 CalculateScore.go:39: Binomial took %s 4.547687s
TRACE: 2017/05/10 15:56:08 CalculateScore.go:41: actual vs correct has to overload the method from the interface has to implement all method defination from the interface
TRACE: 2017/05/10 15:56:08 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:56:08 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:56:10 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/10 15:56:10 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/10 15:56:10 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/10 15:56:11 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:56:11 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:56:12 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/10 15:56:12 loginimpl.go:81: executing query.....
TRACE: 2017/05/10 15:56:13 questionimpl.go:108: Type is stack
TRACE: 2017/05/10 15:56:13 questionimpl.go:111: correct Answer fir ID 6 stack
TRACE: 2017/05/10 15:56:13 CalculateScore.go:39: Binomial took %s 4.6138201s
TRACE: 2017/05/10 15:56:13 CalculateScore.go:41: actual vs correct linked list stack
TRACE: 2017/05/10 15:56:13 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:56:13 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:56:13 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 15:56:13 QuestionList.go:18: language
TRACE: 2017/05/10 15:56:13 QuestionList.go:19: kIbxxEyNBzBiQUgxXzYT
TRACE: 2017/05/10 15:56:13 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 15:56:13 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 15:56:13 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 15:56:13 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 15:56:14 loginimpl.go:93: {0xc042148700 0xc0420458e0}
TRACE: 2017/05/10 15:56:14 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/10 15:56:14 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/10 15:56:14 loginimpl.go:16: exntering in SaveToken() function {0 2 jFzpAciFHSTKcHDlnufi 2017-05-10 15:56:10.6015316 +0530 IST}
TRACE: 2017/05/10 15:56:14 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/10 15:56:16 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:56:16 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:56:16 authenticatetokenimpl.go:47: kIbxxEyNBzBiQUgxXzYT
TRACE: 2017/05/10 15:56:16 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 15:56:16 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 15:56:17 loginimpl.go:20: token inserted
TRACE: 2017/05/10 15:56:17 loginimpl.go:21: {0 2 jFzpAciFHSTKcHDlnufi 2017-05-10 15:56:10.6015316 +0530 IST}
TRACE: 2017/05/10 15:56:18 authenticatetokenimpl.go:51: 
TRACE: 2017/05/10 15:56:18 authenticatetokenimpl.go:54: No uid with that token.
TRACE: 2017/05/10 15:56:18 questionimpl.go:108: Type is big O notation
TRACE: 2017/05/10 15:56:18 questionimpl.go:111: correct Answer fir ID 7 big O notation
TRACE: 2017/05/10 15:56:18 CalculateScore.go:39: Binomial took %s 4.7688222s
TRACE: 2017/05/10 15:56:18 CalculateScore.go:41: actual vs correct unit testing big O notation
TRACE: 2017/05/10 15:56:18 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:56:18 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:56:19 loginimpl.go:33: {0xc04211c2a0 0xc042004130}
TRACE: 2017/05/10 15:56:19 Login.go:48: {2 rakesh jFzpAciFHSTKcHDlnufi user}
TRACE: 2017/05/10 15:56:20 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:56:20 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:56:22 questionimpl.go:108: Type is a long running background process
TRACE: 2017/05/10 15:56:22 questionimpl.go:111: correct Answer fir ID 9 a long running background process
TRACE: 2017/05/10 15:56:22 CalculateScore.go:39: Binomial took %s 4.3167744s
TRACE: 2017/05/10 15:56:22 CalculateScore.go:41: actual vs correct a process that is dead a long running background process
TRACE: 2017/05/10 15:56:22 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:56:22 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:56:24 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:56:24 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:56:26 questionimpl.go:108: Type is both
TRACE: 2017/05/10 15:56:26 questionimpl.go:111: correct Answer fir ID 1 both
TRACE: 2017/05/10 15:56:26 CalculateScore.go:39: Binomial took %s 4.3028466s
TRACE: 2017/05/10 15:56:26 CalculateScore.go:41: actual vs correct printer both
TRACE: 2017/05/10 15:56:26 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:56:26 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:56:29 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:56:29 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:56:31 questionimpl.go:108: Type is method overriding
TRACE: 2017/05/10 15:56:31 questionimpl.go:111: correct Answer fir ID 3 method overriding
TRACE: 2017/05/10 15:56:31 CalculateScore.go:39: Binomial took %s 4.3594642s
TRACE: 2017/05/10 15:56:31 CalculateScore.go:41: actual vs correct method overriding method overriding
TRACE: 2017/05/10 15:56:31 CalculateScore.go:47: 263409560461970212832400
TRACE: 2017/05/10 15:56:32 CalculateScore.go:50: Binomial took %s 1.0013816s
TRACE: 2017/05/10 15:56:32 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:56:32 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:56:33 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 15:56:33 QuestionList.go:18: fundamental
TRACE: 2017/05/10 15:56:33 QuestionList.go:19: jFzpAciFHSTKcHDlnufi
TRACE: 2017/05/10 15:56:33 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 15:56:33 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 15:56:33 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 15:56:33 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 15:56:34 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:56:34 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:56:35 authenticatetokenimpl.go:47: jFzpAciFHSTKcHDlnufi
TRACE: 2017/05/10 15:56:35 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 15:56:35 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 15:56:36 questionimpl.go:108: Type is a method that calls itself
TRACE: 2017/05/10 15:56:36 questionimpl.go:111: correct Answer fir ID 5 a method that calls itself
TRACE: 2017/05/10 15:56:36 CalculateScore.go:39: Binomial took %s 4.6024747s
TRACE: 2017/05/10 15:56:36 CalculateScore.go:41: actual vs correct a method that loops through a list a method that calls itself
TRACE: 2017/05/10 15:56:36 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:56:36 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:56:37 authenticatetokenimpl.go:51: jFzpAciFHSTKcHDlnufi
TRACE: 2017/05/10 15:56:37 authenticatetokenimpl.go:59: Type is jFzpAciFHSTKcHDlnufi
TRACE: 2017/05/10 15:56:37 aunthenticate.go:42: 2017-05-10 15:56:37
TRACE: 2017/05/10 15:56:37 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 15:56:39 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:56:39 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:56:39 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 15:56:39 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 15:56:41 questionimpl.go:108: Type is c
TRACE: 2017/05/10 15:56:41 questionimpl.go:111: correct Answer fir ID 2 c
TRACE: 2017/05/10 15:56:41 CalculateScore.go:39: Binomial took %s 4.5160083s
TRACE: 2017/05/10 15:56:41 CalculateScore.go:41: actual vs correct java c
TRACE: 2017/05/10 15:56:41 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:56:41 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:56:41 authenticatetokenimpl.go:30: {0xc042149490 0xc042384f70}
TRACE: 2017/05/10 15:56:41 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 15:56:41 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 15:56:41 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 15:56:41 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 15:56:41 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 15:56:41 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 15:56:41 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 15:56:43 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:56:43 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:56:44 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0422f97a0 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 15:56:46 questionimpl.go:108: Type is shows path of current directory
TRACE: 2017/05/10 15:56:46 questionimpl.go:111: correct Answer fir ID 8 shows path of current directory
TRACE: 2017/05/10 15:56:46 CalculateScore.go:39: Binomial took %s 4.7543186s
TRACE: 2017/05/10 15:56:46 CalculateScore.go:41: actual vs correct shows the list of files in the directory shows path of current directory
TRACE: 2017/05/10 15:56:46 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:56:46 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:56:46 questionimpl.go:30: &{0xc042129500 0x718ea0 0xc042221a00 false [] <nil> 0xc042405f20}
TRACE: 2017/05/10 15:56:48 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:56:48 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:56:50 questionimpl.go:108: Type is wraping up properties and methods
TRACE: 2017/05/10 15:56:50 questionimpl.go:111: correct Answer fir ID 4 wraping up properties and methods
TRACE: 2017/05/10 15:56:50 CalculateScore.go:39: Binomial took %s 4.5279082s
TRACE: 2017/05/10 15:56:50 CalculateScore.go:41: actual vs correct a way of delivering a class from another class  wraping up properties and methods
TRACE: 2017/05/10 15:56:50 CalculateScore.go:55: Binomial took %s 46.3144949s
TRACE: 2017/05/10 15:57:23 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 15:57:23 QuestionList.go:18: java
TRACE: 2017/05/10 15:57:23 QuestionList.go:19: kIbxxEyNBzBiQUgxXzYT
TRACE: 2017/05/10 15:57:23 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 15:57:23 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 15:57:23 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 15:57:23 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 15:57:25 authenticatetokenimpl.go:47: kIbxxEyNBzBiQUgxXzYT
TRACE: 2017/05/10 15:57:25 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 15:57:25 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 15:57:27 authenticatetokenimpl.go:51: 
TRACE: 2017/05/10 15:57:27 authenticatetokenimpl.go:54: No uid with that token.
TRACE: 2017/05/10 15:57:40 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 15:57:40 QuestionList.go:18: fundamental
TRACE: 2017/05/10 15:57:40 QuestionList.go:19: kIbxxEyNBzBiQUgxXzYT
TRACE: 2017/05/10 15:57:40 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 15:57:40 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 15:57:40 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 15:57:40 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 15:57:43 authenticatetokenimpl.go:47: kIbxxEyNBzBiQUgxXzYT
TRACE: 2017/05/10 15:57:43 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 15:57:43 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 15:57:45 authenticatetokenimpl.go:51: 
TRACE: 2017/05/10 15:57:45 authenticatetokenimpl.go:54: No uid with that token.
TRACE: 2017/05/10 15:57:46 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/10 15:57:46 AnswerList.go:23: [{0 6 } {0 8 } {0 5 } {0 1 } {0 2 } {0 10 } {0 3 } {0 4 } {0 7 } {0 9 }]
TRACE: 2017/05/10 15:57:46 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/10 15:57:46 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/10 15:57:46 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/10 15:57:46 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/10 15:57:46 CalculateScore.go:30: answerList [{0 6 } {0 8 } {0 5 } {0 1 } {0 2 } {0 10 } {0 3 } {0 4 } {0 7 } {0 9 }]
TRACE: 2017/05/10 15:57:46 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:57:46 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:57:49 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:57:49 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:57:51 questionimpl.go:108: Type is stack
TRACE: 2017/05/10 15:57:51 questionimpl.go:111: correct Answer fir ID 6 stack
TRACE: 2017/05/10 15:57:51 CalculateScore.go:39: Binomial took %s 4.2684456s
TRACE: 2017/05/10 15:57:51 CalculateScore.go:41: actual vs correct  stack
TRACE: 2017/05/10 15:57:51 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:57:51 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:57:56 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:57:56 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:57:58 questionimpl.go:108: Type is shows path of current directory
TRACE: 2017/05/10 15:57:58 questionimpl.go:111: correct Answer fir ID 8 shows path of current directory
TRACE: 2017/05/10 15:57:58 CalculateScore.go:39: Binomial took %s 7.2551399s
TRACE: 2017/05/10 15:57:58 CalculateScore.go:41: actual vs correct  shows path of current directory
TRACE: 2017/05/10 15:57:58 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:57:58 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:58:00 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:58:00 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:58:02 questionimpl.go:108: Type is a method that calls itself
TRACE: 2017/05/10 15:58:02 questionimpl.go:111: correct Answer fir ID 5 a method that calls itself
TRACE: 2017/05/10 15:58:02 CalculateScore.go:39: Binomial took %s 4.1558223s
TRACE: 2017/05/10 15:58:02 CalculateScore.go:41: actual vs correct  a method that calls itself
TRACE: 2017/05/10 15:58:02 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:58:02 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:58:05 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:58:05 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:58:07 questionimpl.go:108: Type is both
TRACE: 2017/05/10 15:58:07 questionimpl.go:111: correct Answer fir ID 1 both
TRACE: 2017/05/10 15:58:07 CalculateScore.go:39: Binomial took %s 4.5764604s
TRACE: 2017/05/10 15:58:07 CalculateScore.go:41: actual vs correct  both
TRACE: 2017/05/10 15:58:07 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:58:07 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:58:09 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:58:09 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:58:12 questionimpl.go:108: Type is c
TRACE: 2017/05/10 15:58:12 questionimpl.go:111: correct Answer fir ID 2 c
TRACE: 2017/05/10 15:58:12 CalculateScore.go:39: Binomial took %s 4.9717698s
TRACE: 2017/05/10 15:58:12 CalculateScore.go:41: actual vs correct  c
TRACE: 2017/05/10 15:58:12 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:58:12 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:58:14 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:58:14 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:58:16 questionimpl.go:108: Type is has to implement all method defination from the interface
TRACE: 2017/05/10 15:58:16 questionimpl.go:111: correct Answer fir ID 10 has to implement all method defination from the interface
TRACE: 2017/05/10 15:58:16 CalculateScore.go:39: Binomial took %s 4.6429333s
TRACE: 2017/05/10 15:58:16 CalculateScore.go:41: actual vs correct  has to implement all method defination from the interface
TRACE: 2017/05/10 15:58:16 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:58:16 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:58:19 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:58:19 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:58:21 questionimpl.go:108: Type is method overriding
TRACE: 2017/05/10 15:58:21 questionimpl.go:111: correct Answer fir ID 3 method overriding
TRACE: 2017/05/10 15:58:21 CalculateScore.go:39: Binomial took %s 4.782506s
TRACE: 2017/05/10 15:58:21 CalculateScore.go:41: actual vs correct  method overriding
TRACE: 2017/05/10 15:58:21 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:58:21 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:58:23 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:58:23 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:58:26 questionimpl.go:108: Type is wraping up properties and methods
TRACE: 2017/05/10 15:58:26 questionimpl.go:111: correct Answer fir ID 4 wraping up properties and methods
TRACE: 2017/05/10 15:58:26 CalculateScore.go:39: Binomial took %s 4.4660383s
TRACE: 2017/05/10 15:58:26 CalculateScore.go:41: actual vs correct  wraping up properties and methods
TRACE: 2017/05/10 15:58:26 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:58:26 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:58:28 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:58:28 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:58:30 questionimpl.go:108: Type is big O notation
TRACE: 2017/05/10 15:58:30 questionimpl.go:111: correct Answer fir ID 7 big O notation
TRACE: 2017/05/10 15:58:30 CalculateScore.go:39: Binomial took %s 4.3669014s
TRACE: 2017/05/10 15:58:30 CalculateScore.go:41: actual vs correct  big O notation
TRACE: 2017/05/10 15:58:30 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:58:30 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:58:32 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:58:32 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:58:34 questionimpl.go:108: Type is a long running background process
TRACE: 2017/05/10 15:58:34 questionimpl.go:111: correct Answer fir ID 9 a long running background process
TRACE: 2017/05/10 15:58:34 CalculateScore.go:39: Binomial took %s 4.3746538s
TRACE: 2017/05/10 15:58:34 CalculateScore.go:41: actual vs correct  a long running background process
TRACE: 2017/05/10 15:58:34 CalculateScore.go:55: Binomial took %s 47.8626746s
TRACE: 2017/05/10 15:58:55 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 15:58:55 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 15:58:55 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/10 15:58:55 Login.go:16: entering manager.login
TRACE: 2017/05/10 15:58:55 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 15:58:55 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 15:58:55 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 15:58:59 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/10 15:58:59 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/10 15:58:59 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/10 15:59:01 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/10 15:59:01 loginimpl.go:81: executing query.....
TRACE: 2017/05/10 15:59:03 loginimpl.go:93: {0xc04211abd0 0xc042137d00}
TRACE: 2017/05/10 15:59:03 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/10 15:59:03 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/10 15:59:03 loginimpl.go:16: exntering in SaveToken() function {0 2 JLAxwdPjdjTMNcwqQCrq 2017-05-10 15:58:59.3986048 +0530 IST}
TRACE: 2017/05/10 15:59:03 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/10 15:59:05 loginimpl.go:20: token inserted
TRACE: 2017/05/10 15:59:05 loginimpl.go:21: {0 2 JLAxwdPjdjTMNcwqQCrq 2017-05-10 15:58:59.3986048 +0530 IST}
TRACE: 2017/05/10 15:59:07 loginimpl.go:33: {0xc04211c540 0xc04229f000}
TRACE: 2017/05/10 15:59:07 Login.go:48: {2 rakesh JLAxwdPjdjTMNcwqQCrq user}
TRACE: 2017/05/10 15:59:17 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 15:59:17 QuestionList.go:18: java
TRACE: 2017/05/10 15:59:17 QuestionList.go:19: JLAxwdPjdjTMNcwqQCrq
TRACE: 2017/05/10 15:59:17 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 15:59:17 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 15:59:17 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 15:59:17 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 15:59:19 authenticatetokenimpl.go:47: JLAxwdPjdjTMNcwqQCrq
TRACE: 2017/05/10 15:59:19 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 15:59:19 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 15:59:21 authenticatetokenimpl.go:51: JLAxwdPjdjTMNcwqQCrq
TRACE: 2017/05/10 15:59:21 authenticatetokenimpl.go:59: Type is JLAxwdPjdjTMNcwqQCrq
TRACE: 2017/05/10 15:59:21 aunthenticate.go:42: 2017-05-10 15:59:21
TRACE: 2017/05/10 15:59:21 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 15:59:23 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 15:59:23 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 15:59:25 authenticatetokenimpl.go:30: {0xc042129650 0xc042045570}
TRACE: 2017/05/10 15:59:25 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 15:59:25 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 15:59:25 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 15:59:25 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 15:59:25 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 15:59:25 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 15:59:25 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 15:59:27 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0423896e0 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 15:59:29 questionimpl.go:30: &{0xc04211ce00 0x718ea0 0xc04237d7c0 false [] <nil> 0xc042327980}
TRACE: 2017/05/10 15:59:55 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/10 15:59:55 AnswerList.go:23: [{0 16 } {0 26 } {0 11 } {0 33 } {0 29 } {0 19 } {0 18 } {0 22 } {0 12 } {0 25 } {0 17 } {0 31 } {0 34 } {0 28 } {0 15 } {0 32 } {0 35 } {0 20 } {0 30 max(Collection c)} {0 23 } {0 24 } {0 27 } {0 13 none of above} {0 14 start() method} {0 21 }]
TRACE: 2017/05/10 15:59:55 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/10 15:59:55 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/10 15:59:55 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/10 15:59:55 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/10 15:59:55 CalculateScore.go:30: answerList [{0 16 } {0 26 } {0 11 } {0 33 } {0 29 } {0 19 } {0 18 } {0 22 } {0 12 } {0 25 } {0 17 } {0 31 } {0 34 } {0 28 } {0 15 } {0 32 } {0 35 } {0 20 } {0 30 max(Collection c)} {0 23 } {0 24 } {0 27 } {0 13 none of above} {0 14 start() method} {0 21 }]
TRACE: 2017/05/10 15:59:55 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:59:55 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 15:59:57 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 15:59:57 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 15:59:59 questionimpl.go:108: Type is getConnection()
TRACE: 2017/05/10 15:59:59 questionimpl.go:111: correct Answer fir ID 16 getConnection()
TRACE: 2017/05/10 15:59:59 CalculateScore.go:39: Binomial took %s 4.5614731s
TRACE: 2017/05/10 15:59:59 CalculateScore.go:41: actual vs correct  getConnection()
TRACE: 2017/05/10 15:59:59 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 15:59:59 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:00:02 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:00:02 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:00:03 questionimpl.go:108: Type is 100
TRACE: 2017/05/10 16:00:03 questionimpl.go:111: correct Answer fir ID 26 100
TRACE: 2017/05/10 16:00:03 CalculateScore.go:39: Binomial took %s 4.0309832s
TRACE: 2017/05/10 16:00:03 CalculateScore.go:41: actual vs correct  100
TRACE: 2017/05/10 16:00:03 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:00:03 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:00:05 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 16:00:05 QuestionList.go:18: language
TRACE: 2017/05/10 16:00:05 QuestionList.go:19: JLAxwdPjdjTMNcwqQCrq
TRACE: 2017/05/10 16:00:05 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 16:00:05 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 16:00:05 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 16:00:05 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 16:00:06 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:00:06 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:00:07 authenticatetokenimpl.go:47: JLAxwdPjdjTMNcwqQCrq
TRACE: 2017/05/10 16:00:07 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 16:00:07 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 16:00:07 questionimpl.go:108: Type is Final class
TRACE: 2017/05/10 16:00:07 questionimpl.go:111: correct Answer fir ID 11 Final class
TRACE: 2017/05/10 16:00:07 CalculateScore.go:39: Binomial took %s 4.0017283s
TRACE: 2017/05/10 16:00:07 CalculateScore.go:41: actual vs correct  Final class
TRACE: 2017/05/10 16:00:07 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:00:07 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:00:09 authenticatetokenimpl.go:51: 
TRACE: 2017/05/10 16:00:09 authenticatetokenimpl.go:54: No uid with that token.
TRACE: 2017/05/10 16:00:10 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:00:10 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:00:12 questionimpl.go:108: Type is switch, if
TRACE: 2017/05/10 16:00:12 questionimpl.go:111: correct Answer fir ID 33 switch, if
TRACE: 2017/05/10 16:00:12 CalculateScore.go:39: Binomial took %s 4.2189759s
TRACE: 2017/05/10 16:00:12 CalculateScore.go:41: actual vs correct  switch, if
TRACE: 2017/05/10 16:00:12 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:00:12 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:00:14 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:00:14 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:00:16 questionimpl.go:108: Type is flush()
TRACE: 2017/05/10 16:00:16 questionimpl.go:111: correct Answer fir ID 29 flush()
TRACE: 2017/05/10 16:00:16 CalculateScore.go:39: Binomial took %s 4.28441s
TRACE: 2017/05/10 16:00:16 CalculateScore.go:41: actual vs correct  flush()
TRACE: 2017/05/10 16:00:16 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:00:16 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:00:18 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:00:18 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:00:20 questionimpl.go:108: Type is autoboxing
TRACE: 2017/05/10 16:00:20 questionimpl.go:111: correct Answer fir ID 19 autoboxing
TRACE: 2017/05/10 16:00:20 CalculateScore.go:39: Binomial took %s 4.1766556s
TRACE: 2017/05/10 16:00:20 CalculateScore.go:41: actual vs correct  autoboxing
TRACE: 2017/05/10 16:00:20 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:00:20 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:00:23 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:00:23 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:00:25 questionimpl.go:108: Type is java.util.Date
TRACE: 2017/05/10 16:00:25 questionimpl.go:111: correct Answer fir ID 18 java.util.Date
TRACE: 2017/05/10 16:00:25 CalculateScore.go:39: Binomial took %s 4.4653681s
TRACE: 2017/05/10 16:00:25 CalculateScore.go:41: actual vs correct  java.util.Date
TRACE: 2017/05/10 16:00:25 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:00:25 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:00:27 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:00:27 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:00:29 questionimpl.go:108: Type is Queue
TRACE: 2017/05/10 16:00:29 questionimpl.go:111: correct Answer fir ID 22 Queue
TRACE: 2017/05/10 16:00:29 CalculateScore.go:39: Binomial took %s 4.3975545s
TRACE: 2017/05/10 16:00:29 CalculateScore.go:41: actual vs correct  Queue
TRACE: 2017/05/10 16:00:29 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:00:29 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:00:31 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:00:31 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:00:33 questionimpl.go:108: Type is No
TRACE: 2017/05/10 16:00:33 questionimpl.go:111: correct Answer fir ID 12 No
TRACE: 2017/05/10 16:00:33 CalculateScore.go:39: Binomial took %s 4.5003276s
TRACE: 2017/05/10 16:00:33 CalculateScore.go:41: actual vs correct  No
TRACE: 2017/05/10 16:00:33 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:00:33 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:00:54 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:04:13 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 16:04:13 QuestionList.go:18: fundamental
TRACE: 2017/05/10 16:04:13 QuestionList.go:19: jFzpAciFHSTKcHDlnufi
TRACE: 2017/05/10 16:04:13 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 16:04:13 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 16:04:13 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 16:04:13 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 16:04:15 authenticatetokenimpl.go:47: jFzpAciFHSTKcHDlnufi
TRACE: 2017/05/10 16:04:15 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 16:04:15 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 16:04:17 authenticatetokenimpl.go:51: 
TRACE: 2017/05/10 16:04:17 authenticatetokenimpl.go:54: No uid with that token.
TRACE: 2017/05/10 16:05:26 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 16:05:26 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 16:05:26 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/10 16:05:26 Login.go:16: entering manager.login
TRACE: 2017/05/10 16:05:26 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 16:05:26 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 16:05:26 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 16:05:30 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/10 16:05:30 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/10 16:05:30 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/10 16:05:33 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/10 16:05:33 loginimpl.go:81: executing query.....
TRACE: 2017/05/10 16:05:35 loginimpl.go:93: {0xc04211aaf0 0xc042004150}
TRACE: 2017/05/10 16:05:35 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/10 16:05:35 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/10 16:05:35 loginimpl.go:16: exntering in SaveToken() function {0 2 NQiMvwWvdehQZqbXszdp 2017-05-10 16:05:30.985882 +0530 IST}
TRACE: 2017/05/10 16:05:35 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/10 16:05:37 loginimpl.go:20: token inserted
TRACE: 2017/05/10 16:05:37 loginimpl.go:21: {0 2 NQiMvwWvdehQZqbXszdp 2017-05-10 16:05:30.985882 +0530 IST}
TRACE: 2017/05/10 16:05:39 loginimpl.go:33: {0xc04211ae70 0xc042136c30}
TRACE: 2017/05/10 16:05:39 Login.go:48: {2 rakesh NQiMvwWvdehQZqbXszdp user}
TRACE: 2017/05/10 16:05:48 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 16:05:48 QuestionList.go:18: fundamental
TRACE: 2017/05/10 16:05:48 QuestionList.go:19: NQiMvwWvdehQZqbXszdp
TRACE: 2017/05/10 16:05:48 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 16:05:48 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 16:05:48 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 16:05:48 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 16:05:51 authenticatetokenimpl.go:47: NQiMvwWvdehQZqbXszdp
TRACE: 2017/05/10 16:05:51 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 16:05:51 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 16:05:53 authenticatetokenimpl.go:51: NQiMvwWvdehQZqbXszdp
TRACE: 2017/05/10 16:05:53 authenticatetokenimpl.go:59: Type is NQiMvwWvdehQZqbXszdp
TRACE: 2017/05/10 16:05:53 aunthenticate.go:42: 2017-05-10 16:05:53
TRACE: 2017/05/10 16:05:53 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 16:05:55 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 16:05:55 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 16:05:57 authenticatetokenimpl.go:30: {0xc04211c380 0xc04245c2f0}
TRACE: 2017/05/10 16:05:57 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 16:05:57 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 16:05:57 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 16:05:57 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 16:05:57 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 16:05:57 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 16:05:57 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 16:06:00 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0424a8a80 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 16:06:02 questionimpl.go:30: &{0xc042128230 0x718ea0 0xc0420087e0 false [] <nil> 0xc042144de0}
TRACE: 2017/05/10 16:06:10 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/10 16:06:10 AnswerList.go:23: [{0 9 } {0 6 linked list} {0 10 } {0 7 } {0 4 } {0 8 } {0 2 } {0 1 } {0 3 } {0 5 }]
TRACE: 2017/05/10 16:06:10 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/10 16:06:10 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/10 16:06:10 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/10 16:06:10 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/10 16:06:10 CalculateScore.go:30: answerList [{0 9 } {0 6 linked list} {0 10 } {0 7 } {0 4 } {0 8 } {0 2 } {0 1 } {0 3 } {0 5 }]
TRACE: 2017/05/10 16:06:10 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:06:10 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:06:13 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:06:13 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:06:15 questionimpl.go:108: Type is a long running background process
TRACE: 2017/05/10 16:06:15 questionimpl.go:111: correct Answer fir ID 9 a long running background process
TRACE: 2017/05/10 16:06:15 CalculateScore.go:39: Binomial took %s 4.7284842s
TRACE: 2017/05/10 16:06:15 CalculateScore.go:41: actual vs correct  a long running background process
TRACE: 2017/05/10 16:06:15 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:06:15 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:06:17 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:06:17 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:06:19 questionimpl.go:108: Type is stack
TRACE: 2017/05/10 16:06:19 questionimpl.go:111: correct Answer fir ID 6 stack
TRACE: 2017/05/10 16:06:19 CalculateScore.go:39: Binomial took %s 4.295662s
TRACE: 2017/05/10 16:06:19 CalculateScore.go:41: actual vs correct linked list stack
TRACE: 2017/05/10 16:06:19 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:06:19 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:06:22 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:06:22 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:06:24 questionimpl.go:108: Type is has to implement all method defination from the interface
TRACE: 2017/05/10 16:06:24 questionimpl.go:111: correct Answer fir ID 10 has to implement all method defination from the interface
TRACE: 2017/05/10 16:06:24 CalculateScore.go:39: Binomial took %s 4.3625323s
TRACE: 2017/05/10 16:06:24 CalculateScore.go:41: actual vs correct  has to implement all method defination from the interface
TRACE: 2017/05/10 16:06:24 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:06:24 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:06:26 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:06:26 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:06:28 questionimpl.go:108: Type is big O notation
TRACE: 2017/05/10 16:06:28 questionimpl.go:111: correct Answer fir ID 7 big O notation
TRACE: 2017/05/10 16:06:28 CalculateScore.go:39: Binomial took %s 4.5365877s
TRACE: 2017/05/10 16:06:28 CalculateScore.go:41: actual vs correct  big O notation
TRACE: 2017/05/10 16:06:28 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:06:28 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:06:31 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:06:31 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:06:33 questionimpl.go:108: Type is wraping up properties and methods
TRACE: 2017/05/10 16:06:33 questionimpl.go:111: correct Answer fir ID 4 wraping up properties and methods
TRACE: 2017/05/10 16:06:33 CalculateScore.go:39: Binomial took %s 4.3839924s
TRACE: 2017/05/10 16:06:33 CalculateScore.go:41: actual vs correct  wraping up properties and methods
TRACE: 2017/05/10 16:06:33 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:06:33 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:06:35 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:06:35 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:06:37 questionimpl.go:108: Type is shows path of current directory
TRACE: 2017/05/10 16:06:37 questionimpl.go:111: correct Answer fir ID 8 shows path of current directory
TRACE: 2017/05/10 16:06:37 CalculateScore.go:39: Binomial took %s 4.3096064s
TRACE: 2017/05/10 16:06:37 CalculateScore.go:41: actual vs correct  shows path of current directory
TRACE: 2017/05/10 16:06:37 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:06:37 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:06:39 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:06:39 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:06:41 questionimpl.go:108: Type is c
TRACE: 2017/05/10 16:06:41 questionimpl.go:111: correct Answer fir ID 2 c
TRACE: 2017/05/10 16:06:41 CalculateScore.go:39: Binomial took %s 4.6285988s
TRACE: 2017/05/10 16:06:41 CalculateScore.go:41: actual vs correct  c
TRACE: 2017/05/10 16:06:41 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:06:41 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:06:44 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:06:44 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:06:46 questionimpl.go:108: Type is both
TRACE: 2017/05/10 16:06:46 questionimpl.go:111: correct Answer fir ID 1 both
TRACE: 2017/05/10 16:06:46 CalculateScore.go:39: Binomial took %s 4.3228214s
TRACE: 2017/05/10 16:06:46 CalculateScore.go:41: actual vs correct  both
TRACE: 2017/05/10 16:06:46 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:06:46 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:06:49 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:06:49 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:06:51 questionimpl.go:108: Type is method overriding
TRACE: 2017/05/10 16:06:51 questionimpl.go:111: correct Answer fir ID 3 method overriding
TRACE: 2017/05/10 16:06:51 CalculateScore.go:39: Binomial took %s 5.3948518s
TRACE: 2017/05/10 16:06:51 CalculateScore.go:41: actual vs correct  method overriding
TRACE: 2017/05/10 16:06:51 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:06:51 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:07:12 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:07:40 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 16:07:40 QuestionList.go:18: fundamental
TRACE: 2017/05/10 16:07:40 QuestionList.go:19: NQiMvwWvdehQZqbXszdp
TRACE: 2017/05/10 16:07:40 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 16:07:40 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 16:07:40 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 16:07:40 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 16:07:42 authenticatetokenimpl.go:47: NQiMvwWvdehQZqbXszdp
TRACE: 2017/05/10 16:07:42 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 16:07:42 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 16:07:44 authenticatetokenimpl.go:51: NQiMvwWvdehQZqbXszdp
TRACE: 2017/05/10 16:07:44 authenticatetokenimpl.go:59: Type is NQiMvwWvdehQZqbXszdp
TRACE: 2017/05/10 16:07:44 aunthenticate.go:42: 2017-05-10 16:07:44
TRACE: 2017/05/10 16:07:44 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 16:07:46 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 16:07:46 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 16:07:48 authenticatetokenimpl.go:30: {0xc042148000 0xc042137210}
TRACE: 2017/05/10 16:07:48 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 16:07:48 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 16:07:48 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 16:07:48 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 16:07:48 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 16:07:48 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 16:07:48 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 16:07:51 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0423e7da0 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 16:07:53 questionimpl.go:30: &{0xc042148070 0x718ea0 0xc04227e040 false [] <nil> 0xc042280150}
TRACE: 2017/05/10 16:08:02 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 16:08:02 QuestionList.go:18: language
TRACE: 2017/05/10 16:08:02 QuestionList.go:19: NQiMvwWvdehQZqbXszdp
TRACE: 2017/05/10 16:08:02 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 16:08:02 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 16:08:02 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 16:08:02 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 16:08:04 authenticatetokenimpl.go:47: NQiMvwWvdehQZqbXszdp
TRACE: 2017/05/10 16:08:04 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 16:08:04 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 16:08:07 authenticatetokenimpl.go:51: NQiMvwWvdehQZqbXszdp
TRACE: 2017/05/10 16:08:07 authenticatetokenimpl.go:59: Type is NQiMvwWvdehQZqbXszdp
TRACE: 2017/05/10 16:08:07 aunthenticate.go:42: 2017-05-10 16:08:07
TRACE: 2017/05/10 16:08:07 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 16:08:09 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 16:08:09 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 16:08:11 authenticatetokenimpl.go:30: {0xc0421beaf0 0xc042490960}
TRACE: 2017/05/10 16:08:11 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 16:08:11 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 16:08:11 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 16:08:11 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 16:08:11 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 16:08:11 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 16:08:11 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 16:08:13 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0422c7620 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 16:08:15 questionimpl.go:30: &{0xc0421beee0 0x718ea0 0xc0420301a0 false [] <nil> 0xc042145080}
TRACE: 2017/05/10 16:08:31 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 16:08:31 QuestionList.go:18: fundamental
TRACE: 2017/05/10 16:08:31 QuestionList.go:19: NQiMvwWvdehQZqbXszdp
TRACE: 2017/05/10 16:08:31 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 16:08:31 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 16:08:31 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 16:08:31 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 16:08:33 authenticatetokenimpl.go:47: NQiMvwWvdehQZqbXszdp
TRACE: 2017/05/10 16:08:33 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 16:08:33 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 16:08:36 authenticatetokenimpl.go:51: 
TRACE: 2017/05/10 16:08:36 authenticatetokenimpl.go:54: No uid with that token.
TRACE: 2017/05/10 16:08:54 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 16:08:54 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 16:08:54 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/10 16:08:54 Login.go:16: entering manager.login
TRACE: 2017/05/10 16:08:54 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 16:08:54 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 16:08:54 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 16:08:58 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/10 16:08:58 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/10 16:08:58 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/10 16:09:01 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/10 16:09:01 loginimpl.go:81: executing query.....
TRACE: 2017/05/10 16:09:03 loginimpl.go:93: {0xc04211a9a0 0xc0421e2080}
TRACE: 2017/05/10 16:09:03 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/10 16:09:03 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/10 16:09:03 loginimpl.go:16: exntering in SaveToken() function {0 2 mHKcjGopanYIOpjAgiaN 2017-05-10 16:08:58.7033254 +0530 IST}
TRACE: 2017/05/10 16:09:03 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/10 16:09:05 loginimpl.go:20: token inserted
TRACE: 2017/05/10 16:09:05 loginimpl.go:21: {0 2 mHKcjGopanYIOpjAgiaN 2017-05-10 16:08:58.7033254 +0530 IST}
TRACE: 2017/05/10 16:09:08 loginimpl.go:33: {0xc04211c7e0 0xc04245cf00}
TRACE: 2017/05/10 16:09:08 Login.go:48: {2 rakesh mHKcjGopanYIOpjAgiaN user}
TRACE: 2017/05/10 16:09:16 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 16:09:16 QuestionList.go:18: fundamental
TRACE: 2017/05/10 16:09:16 QuestionList.go:19: mHKcjGopanYIOpjAgiaN
TRACE: 2017/05/10 16:09:16 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 16:09:16 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 16:09:16 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 16:09:16 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 16:09:18 authenticatetokenimpl.go:47: mHKcjGopanYIOpjAgiaN
TRACE: 2017/05/10 16:09:18 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 16:09:18 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 16:09:20 authenticatetokenimpl.go:51: mHKcjGopanYIOpjAgiaN
TRACE: 2017/05/10 16:09:20 authenticatetokenimpl.go:59: Type is mHKcjGopanYIOpjAgiaN
TRACE: 2017/05/10 16:09:20 aunthenticate.go:42: 2017-05-10 16:09:20
TRACE: 2017/05/10 16:09:20 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 16:09:23 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 16:09:23 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 16:09:25 authenticatetokenimpl.go:30: {0xc042148c40 0xc0421142e0}
TRACE: 2017/05/10 16:09:25 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 16:09:25 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 16:09:25 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 16:09:25 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 16:09:25 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 16:09:25 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 16:09:25 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 16:09:27 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc04242ce40 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 16:09:29 questionimpl.go:30: &{0xc042148f50 0x718ea0 0xc042476180 false [] <nil> 0xc042281110}
TRACE: 2017/05/10 16:09:46 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/10 16:09:46 AnswerList.go:23: [{0 8 shows the access defination for a diractory} {0 1 both } {0 2 java} {0 9 a process that automatically starts up when the machine is started} {0 4 hiding unnecessary information to outside world} {0 3 method overriding} {0 10 has to implement none of the methods from interface} {0 7 performance testing} {0 6 stack} {0 5 a method that iterates over a block of code until a condition is solved}]
TRACE: 2017/05/10 16:09:46 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/10 16:09:46 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/10 16:09:46 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/10 16:09:46 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/10 16:09:46 CalculateScore.go:30: answerList [{0 8 shows the access defination for a diractory} {0 1 both } {0 2 java} {0 9 a process that automatically starts up when the machine is started} {0 4 hiding unnecessary information to outside world} {0 3 method overriding} {0 10 has to implement none of the methods from interface} {0 7 performance testing} {0 6 stack} {0 5 a method that iterates over a block of code until a condition is solved}]
TRACE: 2017/05/10 16:09:46 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:09:46 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:09:48 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:09:48 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:09:50 questionimpl.go:108: Type is shows path of current directory
TRACE: 2017/05/10 16:09:50 questionimpl.go:111: correct Answer fir ID 8 shows path of current directory
TRACE: 2017/05/10 16:09:50 CalculateScore.go:39: Binomial took %s 4.6841072s
TRACE: 2017/05/10 16:09:50 CalculateScore.go:41: actual vs correct shows the access defination for a diractory shows path of current directory
TRACE: 2017/05/10 16:09:50 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:09:50 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:09:53 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:09:53 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:09:55 questionimpl.go:108: Type is both
TRACE: 2017/05/10 16:09:55 questionimpl.go:111: correct Answer fir ID 1 both
TRACE: 2017/05/10 16:09:55 CalculateScore.go:39: Binomial took %s 4.5875708s
TRACE: 2017/05/10 16:09:55 CalculateScore.go:41: actual vs correct both  both
TRACE: 2017/05/10 16:09:55 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:09:55 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:09:57 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:09:57 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:10:00 questionimpl.go:108: Type is c
TRACE: 2017/05/10 16:10:00 questionimpl.go:111: correct Answer fir ID 2 c
TRACE: 2017/05/10 16:10:00 CalculateScore.go:39: Binomial took %s 4.6959926s
TRACE: 2017/05/10 16:10:00 CalculateScore.go:41: actual vs correct java c
TRACE: 2017/05/10 16:10:00 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:10:00 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:10:02 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 16:10:02 QuestionList.go:18: java
TRACE: 2017/05/10 16:10:02 QuestionList.go:19: mHKcjGopanYIOpjAgiaN
TRACE: 2017/05/10 16:10:02 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 16:10:02 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 16:10:02 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 16:10:02 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 16:10:02 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:10:02 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:10:04 questionimpl.go:108: Type is a long running background process
TRACE: 2017/05/10 16:10:04 questionimpl.go:111: correct Answer fir ID 9 a long running background process
TRACE: 2017/05/10 16:10:04 CalculateScore.go:39: Binomial took %s 4.808863s
TRACE: 2017/05/10 16:10:04 CalculateScore.go:41: actual vs correct a process that automatically starts up when the machine is started a long running background process
TRACE: 2017/05/10 16:10:04 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:10:04 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:10:05 authenticatetokenimpl.go:47: mHKcjGopanYIOpjAgiaN
TRACE: 2017/05/10 16:10:05 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 16:10:05 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 16:10:07 authenticatetokenimpl.go:51: mHKcjGopanYIOpjAgiaN
TRACE: 2017/05/10 16:10:07 authenticatetokenimpl.go:59: Type is mHKcjGopanYIOpjAgiaN
TRACE: 2017/05/10 16:10:07 aunthenticate.go:42: 2017-05-10 16:10:07
TRACE: 2017/05/10 16:10:07 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 16:10:07 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:10:07 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:10:09 questionimpl.go:108: Type is wraping up properties and methods
TRACE: 2017/05/10 16:10:09 questionimpl.go:111: correct Answer fir ID 4 wraping up properties and methods
TRACE: 2017/05/10 16:10:09 CalculateScore.go:39: Binomial took %s 4.5729139s
TRACE: 2017/05/10 16:10:09 CalculateScore.go:41: actual vs correct hiding unnecessary information to outside world wraping up properties and methods
TRACE: 2017/05/10 16:10:09 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:10:09 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:10:09 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 16:10:09 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 16:10:11 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:10:11 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:10:12 authenticatetokenimpl.go:30: {0xc04211af50 0xc0421148c0}
TRACE: 2017/05/10 16:10:12 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 16:10:12 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 16:10:12 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 16:10:12 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 16:10:12 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 16:10:12 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 16:10:12 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 16:10:14 questionimpl.go:108: Type is method overriding
TRACE: 2017/05/10 16:10:14 questionimpl.go:111: correct Answer fir ID 3 method overriding
TRACE: 2017/05/10 16:10:14 CalculateScore.go:39: Binomial took %s 4.7160273s
TRACE: 2017/05/10 16:10:14 CalculateScore.go:41: actual vs correct method overriding method overriding
TRACE: 2017/05/10 16:10:14 CalculateScore.go:47: 263409560461970212832400
TRACE: 2017/05/10 16:10:14 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc04203b680 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 16:10:15 CalculateScore.go:50: Binomial took %s 1.0031563s
TRACE: 2017/05/10 16:10:15 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:10:15 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:10:16 questionimpl.go:30: &{0xc04211c3f0 0x718ea0 0xc0420fa4e0 false [] <nil> 0xc042006c60}
TRACE: 2017/05/10 16:10:17 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:10:17 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:10:19 questionimpl.go:108: Type is has to implement all method defination from the interface
TRACE: 2017/05/10 16:10:19 questionimpl.go:111: correct Answer fir ID 10 has to implement all method defination from the interface
TRACE: 2017/05/10 16:10:19 CalculateScore.go:39: Binomial took %s 4.7655495s
TRACE: 2017/05/10 16:10:19 CalculateScore.go:41: actual vs correct has to implement none of the methods from interface has to implement all method defination from the interface
TRACE: 2017/05/10 16:10:19 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:10:19 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:10:22 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:10:22 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:10:24 questionimpl.go:108: Type is big O notation
TRACE: 2017/05/10 16:10:24 questionimpl.go:111: correct Answer fir ID 7 big O notation
TRACE: 2017/05/10 16:10:24 CalculateScore.go:39: Binomial took %s 4.6077161s
TRACE: 2017/05/10 16:10:24 CalculateScore.go:41: actual vs correct performance testing big O notation
TRACE: 2017/05/10 16:10:24 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:10:24 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:10:27 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:10:27 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:10:29 questionimpl.go:108: Type is stack
TRACE: 2017/05/10 16:10:29 questionimpl.go:111: correct Answer fir ID 6 stack
TRACE: 2017/05/10 16:10:29 CalculateScore.go:39: Binomial took %s 4.6567905s
TRACE: 2017/05/10 16:10:29 CalculateScore.go:41: actual vs correct stack stack
TRACE: 2017/05/10 16:10:29 CalculateScore.go:47: 263409560461970212832400
TRACE: 2017/05/10 16:10:30 CalculateScore.go:50: Binomial took %s 1.0018498s
TRACE: 2017/05/10 16:10:30 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:10:30 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:10:32 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:10:32 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:10:34 questionimpl.go:108: Type is a method that calls itself
TRACE: 2017/05/10 16:10:34 questionimpl.go:111: correct Answer fir ID 5 a method that calls itself
TRACE: 2017/05/10 16:10:34 CalculateScore.go:39: Binomial took %s 4.4340496s
TRACE: 2017/05/10 16:10:34 CalculateScore.go:41: actual vs correct a method that iterates over a block of code until a condition is solved a method that calls itself
TRACE: 2017/05/10 16:10:34 CalculateScore.go:55: Binomial took %s 48.5380554s
TRACE: 2017/05/10 16:11:29 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 16:11:29 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 16:11:29 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/10 16:11:29 Login.go:16: entering manager.login
TRACE: 2017/05/10 16:11:29 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 16:11:29 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 16:11:29 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 16:11:33 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/10 16:11:33 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/10 16:11:33 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/10 16:11:36 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/10 16:11:36 loginimpl.go:81: executing query.....
TRACE: 2017/05/10 16:11:38 loginimpl.go:93: {0xc0421bf7a0 0xc042115bc0}
TRACE: 2017/05/10 16:11:38 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/10 16:11:38 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/10 16:11:38 loginimpl.go:16: exntering in SaveToken() function {0 2 sZOrvOgRGBXrfFuprlaf 2017-05-10 16:11:33.8664078 +0530 IST}
TRACE: 2017/05/10 16:11:38 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/10 16:11:40 loginimpl.go:20: token inserted
TRACE: 2017/05/10 16:11:40 loginimpl.go:21: {0 2 sZOrvOgRGBXrfFuprlaf 2017-05-10 16:11:33.8664078 +0530 IST}
TRACE: 2017/05/10 16:11:42 loginimpl.go:33: {0xc0421492d0 0xc042115df0}
TRACE: 2017/05/10 16:11:42 Login.go:48: {2 rakesh sZOrvOgRGBXrfFuprlaf user}
TRACE: 2017/05/10 16:11:51 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 16:11:51 QuestionList.go:18: fundamental
TRACE: 2017/05/10 16:11:51 QuestionList.go:19: sZOrvOgRGBXrfFuprlaf
TRACE: 2017/05/10 16:11:51 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 16:11:51 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 16:11:51 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 16:11:51 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 16:11:53 authenticatetokenimpl.go:47: sZOrvOgRGBXrfFuprlaf
TRACE: 2017/05/10 16:11:53 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 16:11:53 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 16:11:55 authenticatetokenimpl.go:51: sZOrvOgRGBXrfFuprlaf
TRACE: 2017/05/10 16:11:55 authenticatetokenimpl.go:59: Type is sZOrvOgRGBXrfFuprlaf
TRACE: 2017/05/10 16:11:55 aunthenticate.go:42: 2017-05-10 16:11:55
TRACE: 2017/05/10 16:11:55 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 16:11:58 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 16:11:58 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 16:12:00 authenticatetokenimpl.go:30: {0xc0421480e0 0xc04245c870}
TRACE: 2017/05/10 16:12:00 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 16:12:00 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 16:12:00 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 16:12:00 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 16:12:00 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 16:12:00 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 16:12:00 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 16:12:03 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0422f8600 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 16:12:05 questionimpl.go:30: &{0xc04211a620 0x718ea0 0xc0423763e0 false [] <nil> 0xc042284930}
TRACE: 2017/05/10 16:12:20 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/10 16:12:20 AnswerList.go:23: [{0 8 shows password of the user} {0 10 has to implement at least one method from the interface} {0 4 a way of delivering a class from another class } {0 2 c} {0 3 abstract class} {0 7 SLOC} {0 5 a method that contains multiple defination} {0 6 linked list} {0 1 monitor} {0 9 a process that is dead}]
TRACE: 2017/05/10 16:12:20 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/10 16:12:20 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/10 16:12:20 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/10 16:12:20 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/10 16:12:20 CalculateScore.go:30: answerList [{0 8 shows password of the user} {0 10 has to implement at least one method from the interface} {0 4 a way of delivering a class from another class } {0 2 c} {0 3 abstract class} {0 7 SLOC} {0 5 a method that contains multiple defination} {0 6 linked list} {0 1 monitor} {0 9 a process that is dead}]
TRACE: 2017/05/10 16:12:20 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:12:20 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:12:23 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:12:23 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:12:25 questionimpl.go:108: Type is shows path of current directory
TRACE: 2017/05/10 16:12:25 questionimpl.go:111: correct Answer fir ID 8 shows path of current directory
TRACE: 2017/05/10 16:12:25 CalculateScore.go:39: Binomial took %s 4.8516695s
TRACE: 2017/05/10 16:12:25 CalculateScore.go:41: actual vs correct shows password of the user shows path of current directory
TRACE: 2017/05/10 16:12:25 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:12:25 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:12:28 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:12:28 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:12:30 questionimpl.go:108: Type is has to implement all method defination from the interface
TRACE: 2017/05/10 16:12:30 questionimpl.go:111: correct Answer fir ID 10 has to implement all method defination from the interface
TRACE: 2017/05/10 16:12:30 CalculateScore.go:39: Binomial took %s 4.7936687s
TRACE: 2017/05/10 16:12:30 CalculateScore.go:41: actual vs correct has to implement at least one method from the interface has to implement all method defination from the interface
TRACE: 2017/05/10 16:12:30 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:12:30 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:12:32 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:12:32 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:12:34 questionimpl.go:108: Type is wraping up properties and methods
TRACE: 2017/05/10 16:12:34 questionimpl.go:111: correct Answer fir ID 4 wraping up properties and methods
TRACE: 2017/05/10 16:12:34 CalculateScore.go:39: Binomial took %s 4.3527339s
TRACE: 2017/05/10 16:12:34 CalculateScore.go:41: actual vs correct a way of delivering a class from another class  wraping up properties and methods
TRACE: 2017/05/10 16:12:34 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:12:34 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:12:37 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:12:37 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:12:39 questionimpl.go:108: Type is c
TRACE: 2017/05/10 16:12:39 questionimpl.go:111: correct Answer fir ID 2 c
TRACE: 2017/05/10 16:12:39 CalculateScore.go:39: Binomial took %s 4.4157639s
TRACE: 2017/05/10 16:12:39 CalculateScore.go:41: actual vs correct c c
TRACE: 2017/05/10 16:12:39 CalculateScore.go:47: 263409560461970212832400
TRACE: 2017/05/10 16:12:40 CalculateScore.go:50: Binomial took %s 1.0023524s
TRACE: 2017/05/10 16:12:40 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:12:40 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:13:01 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:13:37 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 16:13:37 QuestionList.go:18: java
TRACE: 2017/05/10 16:13:37 QuestionList.go:19: sZOrvOgRGBXrfFuprlaf
TRACE: 2017/05/10 16:13:37 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 16:13:37 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 16:13:37 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 16:13:37 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 16:13:40 authenticatetokenimpl.go:47: sZOrvOgRGBXrfFuprlaf
TRACE: 2017/05/10 16:13:40 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 16:13:40 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 16:13:42 authenticatetokenimpl.go:51: sZOrvOgRGBXrfFuprlaf
TRACE: 2017/05/10 16:13:42 authenticatetokenimpl.go:59: Type is sZOrvOgRGBXrfFuprlaf
TRACE: 2017/05/10 16:13:42 aunthenticate.go:42: 2017-05-10 16:13:42
TRACE: 2017/05/10 16:13:42 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 16:13:44 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 16:13:44 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 16:13:46 authenticatetokenimpl.go:30: {0xc04211aee0 0xc04245dc20}
TRACE: 2017/05/10 16:13:46 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 16:13:46 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 16:13:46 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 16:13:46 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 16:13:46 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 16:13:46 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 16:13:46 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 16:13:49 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc04203aa20 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 16:13:51 questionimpl.go:30: &{0xc0421beaf0 0x718ea0 0xc0420fb320 false [] <nil> 0xc0424047b0}
TRACE: 2017/05/10 16:13:54 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 16:13:54 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 16:13:54 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/10 16:13:54 Login.go:16: entering manager.login
TRACE: 2017/05/10 16:13:54 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 16:13:54 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 16:13:54 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 16:13:59 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/10 16:13:59 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/10 16:13:59 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/10 16:14:01 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/10 16:14:01 loginimpl.go:81: executing query.....
TRACE: 2017/05/10 16:14:04 loginimpl.go:93: {0xc0421483f0 0xc042136b00}
TRACE: 2017/05/10 16:14:04 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/10 16:14:04 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/10 16:14:04 loginimpl.go:16: exntering in SaveToken() function {0 2 sMsYZPxnkGGAOsPZhkAj 2017-05-10 16:13:59.4459186 +0530 IST}
TRACE: 2017/05/10 16:14:04 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/10 16:14:06 loginimpl.go:20: token inserted
TRACE: 2017/05/10 16:14:06 loginimpl.go:21: {0 2 sMsYZPxnkGGAOsPZhkAj 2017-05-10 16:13:59.4459186 +0530 IST}
TRACE: 2017/05/10 16:14:08 loginimpl.go:33: {0xc04211a700 0xc0422f6710}
TRACE: 2017/05/10 16:14:08 Login.go:48: {2 rakesh sMsYZPxnkGGAOsPZhkAj user}
TRACE: 2017/05/10 16:14:18 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 16:14:18 QuestionList.go:18: fundamental
TRACE: 2017/05/10 16:14:18 QuestionList.go:19: sMsYZPxnkGGAOsPZhkAj
TRACE: 2017/05/10 16:14:18 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 16:14:18 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 16:14:18 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 16:14:18 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 16:14:20 authenticatetokenimpl.go:47: sMsYZPxnkGGAOsPZhkAj
TRACE: 2017/05/10 16:14:20 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 16:14:20 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 16:14:23 authenticatetokenimpl.go:51: sMsYZPxnkGGAOsPZhkAj
TRACE: 2017/05/10 16:14:23 authenticatetokenimpl.go:59: Type is sMsYZPxnkGGAOsPZhkAj
TRACE: 2017/05/10 16:14:23 aunthenticate.go:42: 2017-05-10 16:14:23
TRACE: 2017/05/10 16:14:23 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 16:14:25 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 16:14:25 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 16:14:27 authenticatetokenimpl.go:30: {0xc04211c460 0xc042106ca0}
TRACE: 2017/05/10 16:14:27 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 16:14:27 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 16:14:27 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 16:14:27 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 16:14:27 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 16:14:27 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 16:14:27 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 16:14:30 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc042311740 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 16:14:32 questionimpl.go:30: &{0xc04211c700 0x718ea0 0xc042031b60 false [] <nil> 0xc042404ea0}
TRACE: 2017/05/10 16:14:40 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/10 16:14:40 AnswerList.go:23: [{0 9 } {0 6 } {0 4 } {0 8 } {0 7 } {0 3 } {0 10 } {0 1 monitor} {0 5 a method that contains multiple defination} {0 2 }]
TRACE: 2017/05/10 16:14:40 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/10 16:14:40 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/10 16:14:40 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/10 16:14:40 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/10 16:14:40 CalculateScore.go:30: answerList [{0 9 } {0 6 } {0 4 } {0 8 } {0 7 } {0 3 } {0 10 } {0 1 monitor} {0 5 a method that contains multiple defination} {0 2 }]
TRACE: 2017/05/10 16:14:40 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:14:40 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:14:43 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:14:43 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:14:45 questionimpl.go:108: Type is a long running background process
TRACE: 2017/05/10 16:14:45 questionimpl.go:111: correct Answer fir ID 9 a long running background process
TRACE: 2017/05/10 16:14:45 CalculateScore.go:39: Binomial took %s 4.5722014s
TRACE: 2017/05/10 16:14:45 CalculateScore.go:41: actual vs correct  a long running background process
TRACE: 2017/05/10 16:14:45 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:14:45 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:14:47 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:14:47 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:14:49 questionimpl.go:108: Type is stack
TRACE: 2017/05/10 16:14:49 questionimpl.go:111: correct Answer fir ID 6 stack
TRACE: 2017/05/10 16:14:49 CalculateScore.go:39: Binomial took %s 4.2444206s
TRACE: 2017/05/10 16:14:49 CalculateScore.go:41: actual vs correct  stack
TRACE: 2017/05/10 16:14:49 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:14:49 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:14:52 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:14:52 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:14:54 questionimpl.go:108: Type is wraping up properties and methods
TRACE: 2017/05/10 16:14:54 questionimpl.go:111: correct Answer fir ID 4 wraping up properties and methods
TRACE: 2017/05/10 16:14:54 CalculateScore.go:39: Binomial took %s 4.8088007s
TRACE: 2017/05/10 16:14:54 CalculateScore.go:41: actual vs correct  wraping up properties and methods
TRACE: 2017/05/10 16:14:54 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:14:54 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:14:57 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:14:57 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:14:59 questionimpl.go:108: Type is shows path of current directory
TRACE: 2017/05/10 16:14:59 questionimpl.go:111: correct Answer fir ID 8 shows path of current directory
TRACE: 2017/05/10 16:14:59 CalculateScore.go:39: Binomial took %s 4.6213258s
TRACE: 2017/05/10 16:14:59 CalculateScore.go:41: actual vs correct  shows path of current directory
TRACE: 2017/05/10 16:14:59 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:14:59 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:15:01 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:15:01 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:15:03 questionimpl.go:108: Type is big O notation
TRACE: 2017/05/10 16:15:03 questionimpl.go:111: correct Answer fir ID 7 big O notation
TRACE: 2017/05/10 16:15:03 CalculateScore.go:39: Binomial took %s 4.7916709s
TRACE: 2017/05/10 16:15:03 CalculateScore.go:41: actual vs correct  big O notation
TRACE: 2017/05/10 16:15:03 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:15:03 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:15:06 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:15:06 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:15:08 questionimpl.go:108: Type is method overriding
TRACE: 2017/05/10 16:15:08 questionimpl.go:111: correct Answer fir ID 3 method overriding
TRACE: 2017/05/10 16:15:08 CalculateScore.go:39: Binomial took %s 4.3231773s
TRACE: 2017/05/10 16:15:08 CalculateScore.go:41: actual vs correct  method overriding
TRACE: 2017/05/10 16:15:08 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:15:08 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:15:10 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:15:10 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:15:12 questionimpl.go:108: Type is has to implement all method defination from the interface
TRACE: 2017/05/10 16:15:12 questionimpl.go:111: correct Answer fir ID 10 has to implement all method defination from the interface
TRACE: 2017/05/10 16:15:12 CalculateScore.go:39: Binomial took %s 4.6121511s
TRACE: 2017/05/10 16:15:12 CalculateScore.go:41: actual vs correct  has to implement all method defination from the interface
TRACE: 2017/05/10 16:15:12 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:15:12 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:15:15 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:15:15 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:15:17 questionimpl.go:108: Type is both
TRACE: 2017/05/10 16:15:17 questionimpl.go:111: correct Answer fir ID 1 both
TRACE: 2017/05/10 16:15:17 CalculateScore.go:39: Binomial took %s 4.5244619s
TRACE: 2017/05/10 16:15:17 CalculateScore.go:41: actual vs correct monitor both
TRACE: 2017/05/10 16:15:17 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:15:17 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:15:19 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:15:19 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:15:22 questionimpl.go:108: Type is a method that calls itself
TRACE: 2017/05/10 16:15:22 questionimpl.go:111: correct Answer fir ID 5 a method that calls itself
TRACE: 2017/05/10 16:15:22 CalculateScore.go:39: Binomial took %s 4.6003945s
TRACE: 2017/05/10 16:15:22 CalculateScore.go:41: actual vs correct a method that contains multiple defination a method that calls itself
TRACE: 2017/05/10 16:15:22 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:15:22 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:15:24 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:15:24 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:15:26 questionimpl.go:108: Type is c
TRACE: 2017/05/10 16:15:26 questionimpl.go:111: correct Answer fir ID 2 c
TRACE: 2017/05/10 16:15:26 CalculateScore.go:39: Binomial took %s 4.2911552s
TRACE: 2017/05/10 16:15:26 CalculateScore.go:41: actual vs correct  c
TRACE: 2017/05/10 16:15:26 CalculateScore.go:55: Binomial took %s 45.3932225s
TRACE: 2017/05/10 16:16:31 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 16:16:31 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 16:16:31 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/10 16:16:31 Login.go:16: entering manager.login
TRACE: 2017/05/10 16:16:31 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 16:16:31 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 16:16:31 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 16:16:35 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/10 16:16:35 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/10 16:16:35 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/10 16:16:38 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/10 16:16:38 loginimpl.go:81: executing query.....
TRACE: 2017/05/10 16:16:40 loginimpl.go:93: {0xc042148a80 0xc04245cbf0}
TRACE: 2017/05/10 16:16:40 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/10 16:16:40 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/10 16:16:40 loginimpl.go:16: exntering in SaveToken() function {0 2 SxdQCOVONbRWZXdyUUQj 2017-05-10 16:16:35.6138404 +0530 IST}
TRACE: 2017/05/10 16:16:40 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/10 16:16:42 loginimpl.go:20: token inserted
TRACE: 2017/05/10 16:16:42 loginimpl.go:21: {0 2 SxdQCOVONbRWZXdyUUQj 2017-05-10 16:16:35.6138404 +0530 IST}
TRACE: 2017/05/10 16:16:44 loginimpl.go:33: {0xc0421be0e0 0xc042114260}
TRACE: 2017/05/10 16:16:44 Login.go:48: {2 rakesh SxdQCOVONbRWZXdyUUQj user}
TRACE: 2017/05/10 16:16:50 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 16:16:50 QuestionList.go:18: fundamental
TRACE: 2017/05/10 16:16:50 QuestionList.go:19: SxdQCOVONbRWZXdyUUQj
TRACE: 2017/05/10 16:16:50 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 16:16:50 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 16:16:50 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 16:16:50 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 16:16:53 authenticatetokenimpl.go:47: SxdQCOVONbRWZXdyUUQj
TRACE: 2017/05/10 16:16:53 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 16:16:53 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 16:16:55 authenticatetokenimpl.go:51: SxdQCOVONbRWZXdyUUQj
TRACE: 2017/05/10 16:16:55 authenticatetokenimpl.go:59: Type is SxdQCOVONbRWZXdyUUQj
TRACE: 2017/05/10 16:16:55 aunthenticate.go:42: 2017-05-10 16:16:55
TRACE: 2017/05/10 16:16:55 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 16:16:57 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 16:16:57 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 16:16:59 authenticatetokenimpl.go:30: {0xc0421490a0 0xc04245d330}
TRACE: 2017/05/10 16:16:59 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 16:16:59 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 16:16:59 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 16:16:59 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 16:16:59 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 16:16:59 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 16:16:59 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 16:17:02 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0422c7020 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 16:17:04 questionimpl.go:30: &{0xc04211c690 0x718ea0 0xc042369a80 false [] <nil> 0xc042145710}
TRACE: 2017/05/10 16:17:42 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/10 16:17:42 AnswerList.go:23: [{0 6 linked list} {0 8 shows path of current directory} {0 9 a process that automatically starts up when the machine is started} {0 7 big O notation} {0 3 method overriding} {0 2 python} {0 5 a method that iterates over a block of code until a condition is solved} {0 10 has to implement all method defination from the interface} {0 1 printer} {0 4 wraping up properties and method}]
TRACE: 2017/05/10 16:17:42 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/10 16:17:42 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/10 16:17:42 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/10 16:17:42 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/10 16:17:42 CalculateScore.go:30: answerList [{0 6 linked list} {0 8 shows path of current directory} {0 9 a process that automatically starts up when the machine is started} {0 7 big O notation} {0 3 method overriding} {0 2 python} {0 5 a method that iterates over a block of code until a condition is solved} {0 10 has to implement all method defination from the interface} {0 1 printer} {0 4 wraping up properties and method}]
TRACE: 2017/05/10 16:17:42 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:17:42 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:17:45 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:17:45 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:17:47 questionimpl.go:108: Type is stack
TRACE: 2017/05/10 16:17:47 questionimpl.go:111: correct Answer fir ID 6 stack
TRACE: 2017/05/10 16:17:47 CalculateScore.go:39: Binomial took %s 5.1346516s
TRACE: 2017/05/10 16:17:47 CalculateScore.go:41: actual vs correct linked list stack
TRACE: 2017/05/10 16:17:47 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:17:47 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:17:50 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:17:50 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:17:52 questionimpl.go:108: Type is shows path of current directory
TRACE: 2017/05/10 16:17:52 questionimpl.go:111: correct Answer fir ID 8 shows path of current directory
TRACE: 2017/05/10 16:17:52 CalculateScore.go:39: Binomial took %s 4.4466328s
TRACE: 2017/05/10 16:17:52 CalculateScore.go:41: actual vs correct shows path of current directory shows path of current directory
TRACE: 2017/05/10 16:17:52 CalculateScore.go:47: 263409560461970212832400
TRACE: 2017/05/10 16:17:53 CalculateScore.go:50: Binomial took %s 1.0011519s
TRACE: 2017/05/10 16:17:53 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:17:53 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:17:55 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:17:55 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:17:57 questionimpl.go:108: Type is a long running background process
TRACE: 2017/05/10 16:17:57 questionimpl.go:111: correct Answer fir ID 9 a long running background process
TRACE: 2017/05/10 16:17:57 CalculateScore.go:39: Binomial took %s 4.6825773s
TRACE: 2017/05/10 16:17:57 CalculateScore.go:41: actual vs correct a process that automatically starts up when the machine is started a long running background process
TRACE: 2017/05/10 16:17:57 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:17:57 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:18:00 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:18:00 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:18:02 questionimpl.go:108: Type is big O notation
TRACE: 2017/05/10 16:18:02 questionimpl.go:111: correct Answer fir ID 7 big O notation
TRACE: 2017/05/10 16:18:02 CalculateScore.go:39: Binomial took %s 4.7863344s
TRACE: 2017/05/10 16:18:02 CalculateScore.go:41: actual vs correct big O notation big O notation
TRACE: 2017/05/10 16:18:02 CalculateScore.go:47: 263409560461970212832400
TRACE: 2017/05/10 16:18:03 CalculateScore.go:50: Binomial took %s 1.0010012s
TRACE: 2017/05/10 16:18:03 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:18:03 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:18:06 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:18:06 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:18:08 questionimpl.go:108: Type is method overriding
TRACE: 2017/05/10 16:18:08 questionimpl.go:111: correct Answer fir ID 3 method overriding
TRACE: 2017/05/10 16:18:08 CalculateScore.go:39: Binomial took %s 4.9221263s
TRACE: 2017/05/10 16:18:08 CalculateScore.go:41: actual vs correct method overriding method overriding
TRACE: 2017/05/10 16:18:08 CalculateScore.go:47: 263409560461970212832400
TRACE: 2017/05/10 16:18:09 CalculateScore.go:50: Binomial took %s 1.002802s
TRACE: 2017/05/10 16:18:09 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:18:09 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:18:11 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:18:11 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:18:13 questionimpl.go:108: Type is c
TRACE: 2017/05/10 16:18:13 questionimpl.go:111: correct Answer fir ID 2 c
TRACE: 2017/05/10 16:18:13 CalculateScore.go:39: Binomial took %s 4.3982802s
TRACE: 2017/05/10 16:18:13 CalculateScore.go:41: actual vs correct python c
TRACE: 2017/05/10 16:18:13 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:18:13 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:18:16 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:18:16 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:18:18 questionimpl.go:108: Type is a method that calls itself
TRACE: 2017/05/10 16:18:18 questionimpl.go:111: correct Answer fir ID 5 a method that calls itself
TRACE: 2017/05/10 16:18:18 CalculateScore.go:39: Binomial took %s 4.292526s
TRACE: 2017/05/10 16:18:18 CalculateScore.go:41: actual vs correct a method that iterates over a block of code until a condition is solved a method that calls itself
TRACE: 2017/05/10 16:18:18 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:18:18 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:18:20 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:18:20 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:18:22 questionimpl.go:108: Type is has to implement all method defination from the interface
TRACE: 2017/05/10 16:18:22 questionimpl.go:111: correct Answer fir ID 10 has to implement all method defination from the interface
TRACE: 2017/05/10 16:18:22 CalculateScore.go:39: Binomial took %s 4.1027715s
TRACE: 2017/05/10 16:18:22 CalculateScore.go:41: actual vs correct has to implement all method defination from the interface has to implement all method defination from the interface
TRACE: 2017/05/10 16:18:22 CalculateScore.go:47: 263409560461970212832400
TRACE: 2017/05/10 16:18:23 CalculateScore.go:50: Binomial took %s 1.0053427s
TRACE: 2017/05/10 16:18:23 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:18:23 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:18:25 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:18:25 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:18:27 questionimpl.go:108: Type is both
TRACE: 2017/05/10 16:18:27 questionimpl.go:111: correct Answer fir ID 1 both
TRACE: 2017/05/10 16:18:27 CalculateScore.go:39: Binomial took %s 4.4629062s
TRACE: 2017/05/10 16:18:27 CalculateScore.go:41: actual vs correct printer both
TRACE: 2017/05/10 16:18:27 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:18:27 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:18:30 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:18:30 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:18:32 questionimpl.go:108: Type is wraping up properties and methods
TRACE: 2017/05/10 16:18:32 questionimpl.go:111: correct Answer fir ID 4 wraping up properties and methods
TRACE: 2017/05/10 16:18:32 CalculateScore.go:39: Binomial took %s 4.5882227s
TRACE: 2017/05/10 16:18:32 CalculateScore.go:41: actual vs correct wraping up properties and method wraping up properties and methods
TRACE: 2017/05/10 16:18:32 CalculateScore.go:55: Binomial took %s 49.8303178s
TRACE: 2017/05/10 16:18:34 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 16:18:34 QuestionList.go:18: java
TRACE: 2017/05/10 16:18:34 QuestionList.go:19: SxdQCOVONbRWZXdyUUQj
TRACE: 2017/05/10 16:18:34 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 16:18:34 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 16:18:34 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 16:18:34 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 16:18:36 authenticatetokenimpl.go:47: SxdQCOVONbRWZXdyUUQj
TRACE: 2017/05/10 16:18:36 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 16:18:36 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 16:18:38 authenticatetokenimpl.go:51: SxdQCOVONbRWZXdyUUQj
TRACE: 2017/05/10 16:18:38 authenticatetokenimpl.go:59: Type is SxdQCOVONbRWZXdyUUQj
TRACE: 2017/05/10 16:18:38 aunthenticate.go:42: 2017-05-10 16:18:38
TRACE: 2017/05/10 16:18:38 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 16:18:40 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 16:18:40 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 16:18:42 authenticatetokenimpl.go:30: {0xc0421be700 0xc0420046e0}
TRACE: 2017/05/10 16:18:42 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 16:18:42 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 16:18:42 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 16:18:42 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 16:18:42 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 16:18:42 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 16:18:42 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 16:18:45 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc042311080 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 16:18:47 questionimpl.go:30: &{0xc04211c2a0 0x718ea0 0xc042030d40 false [] <nil> 0xc042326ff0}
TRACE: 2017/05/10 16:20:01 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 16:20:01 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 16:20:01 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/10 16:20:01 Login.go:16: entering manager.login
TRACE: 2017/05/10 16:20:01 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 16:20:01 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 16:20:01 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 16:20:06 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/10 16:20:06 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/10 16:20:06 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/10 16:20:08 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/10 16:20:08 loginimpl.go:81: executing query.....
TRACE: 2017/05/10 16:20:10 loginimpl.go:93: {0xc04211ca10 0xc042004ea0}
TRACE: 2017/05/10 16:20:10 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/10 16:20:10 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/10 16:20:10 loginimpl.go:16: exntering in SaveToken() function {0 2 JGKZJNvYWNzviBrPjUhC 2017-05-10 16:20:06.5106633 +0530 IST}
TRACE: 2017/05/10 16:20:10 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/10 16:20:13 loginimpl.go:20: token inserted
TRACE: 2017/05/10 16:20:13 loginimpl.go:21: {0 2 JGKZJNvYWNzviBrPjUhC 2017-05-10 16:20:06.5106633 +0530 IST}
TRACE: 2017/05/10 16:20:15 loginimpl.go:33: {0xc04211abd0 0xc042107c20}
TRACE: 2017/05/10 16:20:15 Login.go:48: {2 rakesh JGKZJNvYWNzviBrPjUhC user}
TRACE: 2017/05/10 16:20:36 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 16:20:36 QuestionList.go:18: fundamental
TRACE: 2017/05/10 16:20:36 QuestionList.go:19: JGKZJNvYWNzviBrPjUhC
TRACE: 2017/05/10 16:20:36 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 16:20:36 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 16:20:36 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 16:20:36 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 16:20:39 authenticatetokenimpl.go:47: JGKZJNvYWNzviBrPjUhC
TRACE: 2017/05/10 16:20:39 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 16:20:39 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 16:20:41 authenticatetokenimpl.go:51: JGKZJNvYWNzviBrPjUhC
TRACE: 2017/05/10 16:20:41 authenticatetokenimpl.go:59: Type is JGKZJNvYWNzviBrPjUhC
TRACE: 2017/05/10 16:20:41 aunthenticate.go:42: 2017-05-10 16:20:41
TRACE: 2017/05/10 16:20:41 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 16:20:43 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 16:20:43 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 16:20:45 authenticatetokenimpl.go:30: {0xc042148460 0xc042136f00}
TRACE: 2017/05/10 16:20:45 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 16:20:45 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 16:20:45 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 16:20:45 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 16:20:45 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 16:20:45 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 16:20:45 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 16:20:47 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0423e7980 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 16:20:49 questionimpl.go:30: &{0xc042148a10 0x718ea0 0xc0420fa200 false [] <nil> 0xc042326b10}
TRACE: 2017/05/10 16:20:54 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 16:20:54 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 16:20:54 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/10 16:20:54 Login.go:16: entering manager.login
TRACE: 2017/05/10 16:20:54 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 16:20:54 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 16:20:54 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 16:20:59 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/10 16:20:59 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/10 16:20:59 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/10 16:21:01 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/10 16:21:01 loginimpl.go:81: executing query.....
TRACE: 2017/05/10 16:21:03 loginimpl.go:93: {0xc042149030 0xc0421e21d0}
TRACE: 2017/05/10 16:21:03 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/10 16:21:03 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/10 16:21:03 loginimpl.go:16: exntering in SaveToken() function {0 2 ccQvNHefAlsfNYhRDrhr 2017-05-10 16:20:59.0911449 +0530 IST}
TRACE: 2017/05/10 16:21:03 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/10 16:21:06 loginimpl.go:20: token inserted
TRACE: 2017/05/10 16:21:06 loginimpl.go:21: {0 2 ccQvNHefAlsfNYhRDrhr 2017-05-10 16:20:59.0911449 +0530 IST}
TRACE: 2017/05/10 16:21:08 loginimpl.go:33: {0xc04211c700 0xc042045ed0}
TRACE: 2017/05/10 16:21:08 Login.go:48: {2 rakesh ccQvNHefAlsfNYhRDrhr user}
TRACE: 2017/05/10 16:21:11 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/10 16:21:11 AnswerList.go:23: [{0 7 big O notation} {0 6 doubly linked list} {0 5 a method that contains multiple defination} {0 2 c} {0 1 both } {0 8 shows password of the user} {0 9 } {0 3 method overloading} {0 10 has to overload the method from the interface} {0 4 wraping up properties and method}]
TRACE: 2017/05/10 16:21:11 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/10 16:21:11 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/10 16:21:11 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/10 16:21:11 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/10 16:21:11 CalculateScore.go:30: answerList [{0 7 big O notation} {0 6 doubly linked list} {0 5 a method that contains multiple defination} {0 2 c} {0 1 both } {0 8 shows password of the user} {0 9 } {0 3 method overloading} {0 10 has to overload the method from the interface} {0 4 wraping up properties and method}]
TRACE: 2017/05/10 16:21:11 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:21:11 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:21:14 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:21:14 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:21:16 questionimpl.go:108: Type is big O notation
TRACE: 2017/05/10 16:21:16 questionimpl.go:111: correct Answer fir ID 7 big O notation
TRACE: 2017/05/10 16:21:16 CalculateScore.go:39: Binomial took %s 4.5025115s
TRACE: 2017/05/10 16:21:16 CalculateScore.go:41: actual vs correct big O notation big O notation
TRACE: 2017/05/10 16:21:16 CalculateScore.go:47: 263409560461970212832400
TRACE: 2017/05/10 16:21:17 CalculateScore.go:50: Binomial took %s 1.0020094s
TRACE: 2017/05/10 16:21:17 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:21:17 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:21:19 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:21:19 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:21:22 questionimpl.go:108: Type is stack
TRACE: 2017/05/10 16:21:22 questionimpl.go:111: correct Answer fir ID 6 stack
TRACE: 2017/05/10 16:21:22 CalculateScore.go:39: Binomial took %s 4.7308206s
TRACE: 2017/05/10 16:21:22 CalculateScore.go:41: actual vs correct doubly linked list stack
TRACE: 2017/05/10 16:21:22 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:21:22 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:21:24 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:21:24 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:21:26 questionimpl.go:108: Type is a method that calls itself
TRACE: 2017/05/10 16:21:26 questionimpl.go:111: correct Answer fir ID 5 a method that calls itself
TRACE: 2017/05/10 16:21:26 CalculateScore.go:39: Binomial took %s 4.3662009s
TRACE: 2017/05/10 16:21:26 CalculateScore.go:41: actual vs correct a method that contains multiple defination a method that calls itself
TRACE: 2017/05/10 16:21:26 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:21:26 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:21:28 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:21:28 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:21:30 questionimpl.go:108: Type is c
TRACE: 2017/05/10 16:21:30 questionimpl.go:111: correct Answer fir ID 2 c
TRACE: 2017/05/10 16:21:30 CalculateScore.go:39: Binomial took %s 4.3930304s
TRACE: 2017/05/10 16:21:30 CalculateScore.go:41: actual vs correct c c
TRACE: 2017/05/10 16:21:30 CalculateScore.go:47: 263409560461970212832400
TRACE: 2017/05/10 16:21:31 CalculateScore.go:50: Binomial took %s 1.0009049s
TRACE: 2017/05/10 16:21:31 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:21:31 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:21:34 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:21:34 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:21:36 questionimpl.go:108: Type is both
TRACE: 2017/05/10 16:21:36 questionimpl.go:111: correct Answer fir ID 1 both
TRACE: 2017/05/10 16:21:36 CalculateScore.go:39: Binomial took %s 4.5203707s
TRACE: 2017/05/10 16:21:36 CalculateScore.go:41: actual vs correct both  both
TRACE: 2017/05/10 16:21:36 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:21:36 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:21:38 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:21:38 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:21:39 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 16:21:39 QuestionList.go:18: java
TRACE: 2017/05/10 16:21:39 QuestionList.go:19: ccQvNHefAlsfNYhRDrhr
TRACE: 2017/05/10 16:21:39 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 16:21:39 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 16:21:39 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 16:21:39 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 16:21:40 questionimpl.go:108: Type is shows path of current directory
TRACE: 2017/05/10 16:21:40 questionimpl.go:111: correct Answer fir ID 8 shows path of current directory
TRACE: 2017/05/10 16:21:40 CalculateScore.go:39: Binomial took %s 4.1946257s
TRACE: 2017/05/10 16:21:40 CalculateScore.go:41: actual vs correct shows password of the user shows path of current directory
TRACE: 2017/05/10 16:21:40 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:21:40 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:21:42 authenticatetokenimpl.go:47: ccQvNHefAlsfNYhRDrhr
TRACE: 2017/05/10 16:21:42 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 16:21:42 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 16:21:43 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:21:43 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:21:44 authenticatetokenimpl.go:51: ccQvNHefAlsfNYhRDrhr
TRACE: 2017/05/10 16:21:44 authenticatetokenimpl.go:59: Type is ccQvNHefAlsfNYhRDrhr
TRACE: 2017/05/10 16:21:44 aunthenticate.go:42: 2017-05-10 16:21:44
TRACE: 2017/05/10 16:21:44 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 16:21:45 questionimpl.go:108: Type is a long running background process
TRACE: 2017/05/10 16:21:45 questionimpl.go:111: correct Answer fir ID 9 a long running background process
TRACE: 2017/05/10 16:21:45 CalculateScore.go:39: Binomial took %s 4.5883766s
TRACE: 2017/05/10 16:21:45 CalculateScore.go:41: actual vs correct  a long running background process
TRACE: 2017/05/10 16:21:45 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:21:45 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:21:46 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 16:21:46 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 16:21:47 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:21:47 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:21:48 authenticatetokenimpl.go:30: {0xc0421bebd0 0xc0420feec0}
TRACE: 2017/05/10 16:21:48 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 16:21:48 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 16:21:48 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 16:21:48 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 16:21:48 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 16:21:48 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 16:21:48 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 16:21:49 questionimpl.go:108: Type is method overriding
TRACE: 2017/05/10 16:21:49 questionimpl.go:111: correct Answer fir ID 3 method overriding
TRACE: 2017/05/10 16:21:49 CalculateScore.go:39: Binomial took %s 4.6505287s
TRACE: 2017/05/10 16:21:49 CalculateScore.go:41: actual vs correct method overloading method overriding
TRACE: 2017/05/10 16:21:49 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:21:49 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:21:50 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0423849c0 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 16:21:52 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:21:52 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:21:53 questionimpl.go:30: &{0xc042128150 0x718ea0 0xc0423ae2a0 false [] <nil> 0xc042389110}
TRACE: 2017/05/10 16:21:54 questionimpl.go:108: Type is has to implement all method defination from the interface
TRACE: 2017/05/10 16:21:54 questionimpl.go:111: correct Answer fir ID 10 has to implement all method defination from the interface
TRACE: 2017/05/10 16:21:54 CalculateScore.go:39: Binomial took %s 4.6758778s
TRACE: 2017/05/10 16:21:54 CalculateScore.go:41: actual vs correct has to overload the method from the interface has to implement all method defination from the interface
TRACE: 2017/05/10 16:21:54 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:21:54 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:21:56 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:21:56 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:21:58 questionimpl.go:108: Type is wraping up properties and methods
TRACE: 2017/05/10 16:21:58 questionimpl.go:111: correct Answer fir ID 4 wraping up properties and methods
TRACE: 2017/05/10 16:21:58 CalculateScore.go:39: Binomial took %s 4.437919s
TRACE: 2017/05/10 16:21:58 CalculateScore.go:41: actual vs correct wraping up properties and method wraping up properties and methods
TRACE: 2017/05/10 16:21:58 CalculateScore.go:55: Binomial took %s 47.0646769s
TRACE: 2017/05/10 16:26:48 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 16:26:48 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 16:26:48 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/10 16:26:48 Login.go:16: entering manager.login
TRACE: 2017/05/10 16:26:48 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 16:26:48 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 16:26:48 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 16:26:53 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/10 16:26:53 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/10 16:26:53 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/10 16:26:55 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/10 16:26:55 loginimpl.go:81: executing query.....
TRACE: 2017/05/10 16:26:57 loginimpl.go:93: {0xc0421be070 0xc042045270}
TRACE: 2017/05/10 16:26:57 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/10 16:26:57 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/10 16:26:57 loginimpl.go:16: exntering in SaveToken() function {0 2 BihyesCQZsePDPPiowRG 2017-05-10 16:26:53.272736 +0530 IST}
TRACE: 2017/05/10 16:26:57 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/10 16:27:00 loginimpl.go:20: token inserted
TRACE: 2017/05/10 16:27:00 loginimpl.go:21: {0 2 BihyesCQZsePDPPiowRG 2017-05-10 16:26:53.272736 +0530 IST}
TRACE: 2017/05/10 16:27:02 loginimpl.go:33: {0xc0421be1c0 0xc042045130}
TRACE: 2017/05/10 16:27:02 Login.go:48: {2 rakesh BihyesCQZsePDPPiowRG user}
TRACE: 2017/05/10 16:27:10 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 16:27:10 QuestionList.go:18: fundamental
TRACE: 2017/05/10 16:27:10 QuestionList.go:19: BihyesCQZsePDPPiowRG
TRACE: 2017/05/10 16:27:10 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 16:27:10 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 16:27:10 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 16:27:10 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 16:27:12 authenticatetokenimpl.go:47: BihyesCQZsePDPPiowRG
TRACE: 2017/05/10 16:27:12 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 16:27:12 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 16:27:14 authenticatetokenimpl.go:51: BihyesCQZsePDPPiowRG
TRACE: 2017/05/10 16:27:14 authenticatetokenimpl.go:59: Type is BihyesCQZsePDPPiowRG
TRACE: 2017/05/10 16:27:14 aunthenticate.go:42: 2017-05-10 16:27:14
TRACE: 2017/05/10 16:27:14 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 16:27:17 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 16:27:17 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 16:27:19 authenticatetokenimpl.go:30: {0xc0421be770 0xc0420042b0}
TRACE: 2017/05/10 16:27:19 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 16:27:19 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 16:27:19 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 16:27:19 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 16:27:19 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 16:27:19 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 16:27:19 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 16:27:21 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc042384720 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 16:27:23 questionimpl.go:30: &{0xc042128620 0x718ea0 0xc042083160 false [] <nil> 0xc04237e5a0}
TRACE: 2017/05/10 16:27:43 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/10 16:27:43 AnswerList.go:23: [{0 6 stack} {0 1 monitor} {0 8 shows the list of files in the directory} {0 2 objective c} {0 7 SLOC} {0 9 a process that is eating memory} {0 3 abstract class} {0 10 has to implement all method defination from the interface} {0 5 } {0 4 }]
TRACE: 2017/05/10 16:27:43 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/10 16:27:43 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/10 16:27:43 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/10 16:27:43 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/10 16:27:43 CalculateScore.go:30: answerList [{0 6 stack} {0 1 monitor} {0 8 shows the list of files in the directory} {0 2 objective c} {0 7 SLOC} {0 9 a process that is eating memory} {0 3 abstract class} {0 10 has to implement all method defination from the interface} {0 5 } {0 4 }]
TRACE: 2017/05/10 16:27:43 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:27:43 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:27:45 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:27:45 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:27:47 questionimpl.go:108: Type is stack
TRACE: 2017/05/10 16:27:47 questionimpl.go:111: correct Answer fir ID 6 stack
TRACE: 2017/05/10 16:27:47 CalculateScore.go:39: Binomial took %s 4.200373s
TRACE: 2017/05/10 16:27:47 CalculateScore.go:41: actual vs correct stack stack
TRACE: 2017/05/10 16:27:47 CalculateScore.go:47: 263409560461970212832400
TRACE: 2017/05/10 16:27:48 CalculateScore.go:50: Binomial took %s 1.002119s
TRACE: 2017/05/10 16:27:48 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:27:48 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:27:50 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:27:50 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:27:52 questionimpl.go:108: Type is both
TRACE: 2017/05/10 16:27:52 questionimpl.go:111: correct Answer fir ID 1 both
TRACE: 2017/05/10 16:27:52 CalculateScore.go:39: Binomial took %s 4.2422261s
TRACE: 2017/05/10 16:27:52 CalculateScore.go:41: actual vs correct monitor both
TRACE: 2017/05/10 16:27:52 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:27:52 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:27:54 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:27:54 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:27:56 questionimpl.go:108: Type is shows path of current directory
TRACE: 2017/05/10 16:27:56 questionimpl.go:111: correct Answer fir ID 8 shows path of current directory
TRACE: 2017/05/10 16:27:56 CalculateScore.go:39: Binomial took %s 3.9969855s
TRACE: 2017/05/10 16:27:56 CalculateScore.go:41: actual vs correct shows the list of files in the directory shows path of current directory
TRACE: 2017/05/10 16:27:56 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:27:56 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:27:58 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:27:58 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:28:00 questionimpl.go:108: Type is c
TRACE: 2017/05/10 16:28:00 questionimpl.go:111: correct Answer fir ID 2 c
TRACE: 2017/05/10 16:28:00 CalculateScore.go:39: Binomial took %s 3.9203791s
TRACE: 2017/05/10 16:28:00 CalculateScore.go:41: actual vs correct objective c c
TRACE: 2017/05/10 16:28:00 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:28:00 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:28:02 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:28:02 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:28:04 questionimpl.go:108: Type is big O notation
TRACE: 2017/05/10 16:28:04 questionimpl.go:111: correct Answer fir ID 7 big O notation
TRACE: 2017/05/10 16:28:04 CalculateScore.go:39: Binomial took %s 4.0575271s
TRACE: 2017/05/10 16:28:04 CalculateScore.go:41: actual vs correct SLOC big O notation
TRACE: 2017/05/10 16:28:04 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:28:04 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:28:06 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:28:06 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:28:08 questionimpl.go:108: Type is a long running background process
TRACE: 2017/05/10 16:28:08 questionimpl.go:111: correct Answer fir ID 9 a long running background process
TRACE: 2017/05/10 16:28:08 CalculateScore.go:39: Binomial took %s 4.2492296s
TRACE: 2017/05/10 16:28:08 CalculateScore.go:41: actual vs correct a process that is eating memory a long running background process
TRACE: 2017/05/10 16:28:08 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:28:08 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:28:11 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:28:11 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:28:13 questionimpl.go:108: Type is method overriding
TRACE: 2017/05/10 16:28:13 questionimpl.go:111: correct Answer fir ID 3 method overriding
TRACE: 2017/05/10 16:28:13 CalculateScore.go:39: Binomial took %s 4.4300881s
TRACE: 2017/05/10 16:28:13 CalculateScore.go:41: actual vs correct abstract class method overriding
TRACE: 2017/05/10 16:28:13 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:28:13 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:28:15 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:28:15 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:28:17 questionimpl.go:108: Type is has to implement all method defination from the interface
TRACE: 2017/05/10 16:28:17 questionimpl.go:111: correct Answer fir ID 10 has to implement all method defination from the interface
TRACE: 2017/05/10 16:28:17 CalculateScore.go:39: Binomial took %s 4.4053562s
TRACE: 2017/05/10 16:28:17 CalculateScore.go:41: actual vs correct has to implement all method defination from the interface has to implement all method defination from the interface
TRACE: 2017/05/10 16:28:17 CalculateScore.go:47: 263409560461970212832400
TRACE: 2017/05/10 16:28:18 CalculateScore.go:50: Binomial took %s 1.0008009s
TRACE: 2017/05/10 16:28:18 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:28:18 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:28:20 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:28:20 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:28:22 questionimpl.go:108: Type is a method that calls itself
TRACE: 2017/05/10 16:28:22 questionimpl.go:111: correct Answer fir ID 5 a method that calls itself
TRACE: 2017/05/10 16:28:22 CalculateScore.go:39: Binomial took %s 4.0335263s
TRACE: 2017/05/10 16:28:22 CalculateScore.go:41: actual vs correct  a method that calls itself
TRACE: 2017/05/10 16:28:22 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:28:22 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:28:24 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:28:24 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:28:26 questionimpl.go:108: Type is wraping up properties and methods
TRACE: 2017/05/10 16:28:26 questionimpl.go:111: correct Answer fir ID 4 wraping up properties and methods
TRACE: 2017/05/10 16:28:26 CalculateScore.go:39: Binomial took %s 4.4529149s
TRACE: 2017/05/10 16:28:26 CalculateScore.go:41: actual vs correct  wraping up properties and methods
TRACE: 2017/05/10 16:28:26 CalculateScore.go:55: Binomial took %s 43.9940159s
TRACE: 2017/05/10 16:35:29 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 16:35:29 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 16:35:29 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/10 16:35:29 Login.go:16: entering manager.login
TRACE: 2017/05/10 16:35:29 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 16:35:29 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 16:35:29 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 16:35:33 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/10 16:35:33 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/10 16:35:33 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/10 16:35:36 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/10 16:35:36 loginimpl.go:81: executing query.....
TRACE: 2017/05/10 16:35:38 loginimpl.go:93: {0xc042128770 0xc0421369c0}
TRACE: 2017/05/10 16:35:38 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/10 16:35:38 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/10 16:35:38 loginimpl.go:16: exntering in SaveToken() function {0 2 bcmaPoBlogJuAmPgPjId 2017-05-10 16:35:33.7125501 +0530 IST}
TRACE: 2017/05/10 16:35:38 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/10 16:35:40 loginimpl.go:20: token inserted
TRACE: 2017/05/10 16:35:40 loginimpl.go:21: {0 2 bcmaPoBlogJuAmPgPjId 2017-05-10 16:35:33.7125501 +0530 IST}
TRACE: 2017/05/10 16:35:42 loginimpl.go:33: {0xc04211c0e0 0xc042045910}
TRACE: 2017/05/10 16:35:42 Login.go:48: {2 rakesh bcmaPoBlogJuAmPgPjId user}
TRACE: 2017/05/10 16:35:49 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 16:35:49 QuestionList.go:18: fundamental
TRACE: 2017/05/10 16:35:49 QuestionList.go:19: bcmaPoBlogJuAmPgPjId
TRACE: 2017/05/10 16:35:49 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 16:35:49 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 16:35:49 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 16:35:49 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 16:35:51 authenticatetokenimpl.go:47: bcmaPoBlogJuAmPgPjId
TRACE: 2017/05/10 16:35:51 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 16:35:51 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 16:35:53 authenticatetokenimpl.go:51: bcmaPoBlogJuAmPgPjId
TRACE: 2017/05/10 16:35:53 authenticatetokenimpl.go:59: Type is bcmaPoBlogJuAmPgPjId
TRACE: 2017/05/10 16:35:53 aunthenticate.go:42: 2017-05-10 16:35:53
TRACE: 2017/05/10 16:35:53 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 16:35:56 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 16:35:56 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 16:35:58 authenticatetokenimpl.go:30: {0xc04211c230 0xc042004340}
TRACE: 2017/05/10 16:35:58 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 16:35:58 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 16:35:58 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 16:35:58 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 16:35:58 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 16:35:58 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 16:35:58 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 16:36:00 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc04204ac60 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 16:36:02 questionimpl.go:30: &{0xc042148770 0x718ea0 0xc0420fa060 false [] <nil> 0xc042326ae0}
TRACE: 2017/05/10 16:36:24 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/10 16:36:24 AnswerList.go:23: [{0 6 stack} {0 10 has to implement none of the methods from interface} {0 5 a method that loops through a list} {0 9 a process that is dead} {0 1 none} {0 2 python} {0 4 hiding unnecessary information to outside world} {0 7 big O notation} {0 3 method overloading} {0 8 shows the list of files in the directory}]
TRACE: 2017/05/10 16:36:24 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/10 16:36:24 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/10 16:36:24 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/10 16:36:24 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/10 16:36:24 CalculateScore.go:30: answerList [{0 6 stack} {0 10 has to implement none of the methods from interface} {0 5 a method that loops through a list} {0 9 a process that is dead} {0 1 none} {0 2 python} {0 4 hiding unnecessary information to outside world} {0 7 big O notation} {0 3 method overloading} {0 8 shows the list of files in the directory}]
TRACE: 2017/05/10 16:36:24 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:36:24 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:36:26 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:36:26 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:36:28 questionimpl.go:108: Type is stack
TRACE: 2017/05/10 16:36:28 questionimpl.go:111: correct Answer fir ID 6 stack
TRACE: 2017/05/10 16:36:28 CalculateScore.go:39: Binomial took %s 4.2044706s
TRACE: 2017/05/10 16:36:28 CalculateScore.go:41: actual vs correct stack stack
TRACE: 2017/05/10 16:36:28 CalculateScore.go:47: 263409560461970212832400
TRACE: 2017/05/10 16:36:29 CalculateScore.go:50: Binomial took %s 1.0009211s
TRACE: 2017/05/10 16:36:29 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:36:29 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:36:31 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:36:31 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:36:33 questionimpl.go:108: Type is has to implement all method defination from the interface
TRACE: 2017/05/10 16:36:33 questionimpl.go:111: correct Answer fir ID 10 has to implement all method defination from the interface
TRACE: 2017/05/10 16:36:33 CalculateScore.go:39: Binomial took %s 4.1862412s
TRACE: 2017/05/10 16:36:33 CalculateScore.go:41: actual vs correct has to implement none of the methods from interface has to implement all method defination from the interface
TRACE: 2017/05/10 16:36:33 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:36:33 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:36:36 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:36:36 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:36:38 questionimpl.go:108: Type is a method that calls itself
TRACE: 2017/05/10 16:36:38 questionimpl.go:111: correct Answer fir ID 5 a method that calls itself
TRACE: 2017/05/10 16:36:38 CalculateScore.go:39: Binomial took %s 4.1880249s
TRACE: 2017/05/10 16:36:38 CalculateScore.go:41: actual vs correct a method that loops through a list a method that calls itself
TRACE: 2017/05/10 16:36:38 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:36:38 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:36:40 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:36:40 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:36:42 questionimpl.go:108: Type is a long running background process
TRACE: 2017/05/10 16:36:42 questionimpl.go:111: correct Answer fir ID 9 a long running background process
TRACE: 2017/05/10 16:36:42 CalculateScore.go:39: Binomial took %s 3.9512944s
TRACE: 2017/05/10 16:36:42 CalculateScore.go:41: actual vs correct a process that is dead a long running background process
TRACE: 2017/05/10 16:36:42 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:36:42 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:36:44 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:36:44 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:36:46 questionimpl.go:108: Type is both
TRACE: 2017/05/10 16:36:46 questionimpl.go:111: correct Answer fir ID 1 both
TRACE: 2017/05/10 16:36:46 CalculateScore.go:39: Binomial took %s 4.4065411s
TRACE: 2017/05/10 16:36:46 CalculateScore.go:41: actual vs correct none both
TRACE: 2017/05/10 16:36:46 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:36:46 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:36:48 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:36:48 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:36:50 questionimpl.go:108: Type is c
TRACE: 2017/05/10 16:36:50 questionimpl.go:111: correct Answer fir ID 2 c
TRACE: 2017/05/10 16:36:50 CalculateScore.go:39: Binomial took %s 4.421255s
TRACE: 2017/05/10 16:36:50 CalculateScore.go:41: actual vs correct python c
TRACE: 2017/05/10 16:36:50 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:36:50 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:36:53 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:36:53 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:36:55 questionimpl.go:108: Type is wraping up properties and methods
TRACE: 2017/05/10 16:36:55 questionimpl.go:111: correct Answer fir ID 4 wraping up properties and methods
TRACE: 2017/05/10 16:36:55 CalculateScore.go:39: Binomial took %s 4.1780587s
TRACE: 2017/05/10 16:36:55 CalculateScore.go:41: actual vs correct hiding unnecessary information to outside world wraping up properties and methods
TRACE: 2017/05/10 16:36:55 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:36:55 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:36:57 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:36:57 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:36:59 questionimpl.go:108: Type is big O notation
TRACE: 2017/05/10 16:36:59 questionimpl.go:111: correct Answer fir ID 7 big O notation
TRACE: 2017/05/10 16:36:59 CalculateScore.go:39: Binomial took %s 4.3774274s
TRACE: 2017/05/10 16:36:59 CalculateScore.go:41: actual vs correct big O notation big O notation
TRACE: 2017/05/10 16:36:59 CalculateScore.go:47: 263409560461970212832400
TRACE: 2017/05/10 16:37:00 CalculateScore.go:50: Binomial took %s 1.0006903s
TRACE: 2017/05/10 16:37:00 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:37:00 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:37:02 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:37:02 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:37:04 questionimpl.go:108: Type is method overriding
TRACE: 2017/05/10 16:37:04 questionimpl.go:111: correct Answer fir ID 3 method overriding
TRACE: 2017/05/10 16:37:04 CalculateScore.go:39: Binomial took %s 4.2023602s
TRACE: 2017/05/10 16:37:04 CalculateScore.go:41: actual vs correct method overloading method overriding
TRACE: 2017/05/10 16:37:04 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:37:04 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:37:06 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:37:06 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:37:08 questionimpl.go:108: Type is shows path of current directory
TRACE: 2017/05/10 16:37:08 questionimpl.go:111: correct Answer fir ID 8 shows path of current directory
TRACE: 2017/05/10 16:37:08 CalculateScore.go:39: Binomial took %s 4.1374894s
TRACE: 2017/05/10 16:37:08 CalculateScore.go:41: actual vs correct shows the list of files in the directory shows path of current directory
TRACE: 2017/05/10 16:37:08 CalculateScore.go:55: Binomial took %s 44.2567636s
TRACE: 2017/05/10 16:41:41 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 16:41:41 QuestionList.go:18: java
TRACE: 2017/05/10 16:41:41 QuestionList.go:19: VblXiYeBoQgRcOhQvYde
TRACE: 2017/05/10 16:41:41 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 16:41:41 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 16:41:41 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 16:41:41 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 16:41:43 authenticatetokenimpl.go:47: VblXiYeBoQgRcOhQvYde
TRACE: 2017/05/10 16:41:43 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 16:41:43 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 16:41:45 authenticatetokenimpl.go:51: 
TRACE: 2017/05/10 16:41:45 authenticatetokenimpl.go:54: No uid with that token.
TRACE: 2017/05/10 16:49:49 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 16:49:49 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 16:49:49 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/10 16:49:49 Login.go:16: entering manager.login
TRACE: 2017/05/10 16:49:49 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 16:49:49 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 16:49:49 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 16:49:53 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/10 16:49:53 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/10 16:49:53 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/10 16:49:55 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/10 16:49:55 loginimpl.go:81: executing query.....
TRACE: 2017/05/10 16:49:57 loginimpl.go:93: {0xc042128620 0xc042136d30}
TRACE: 2017/05/10 16:49:57 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/10 16:49:57 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/10 16:49:57 loginimpl.go:16: exntering in SaveToken() function {0 2 AmsFFDyjmMCBChYOZftu 2017-05-10 16:49:53.3712587 +0530 IST}
TRACE: 2017/05/10 16:49:57 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/10 16:49:59 loginimpl.go:20: token inserted
TRACE: 2017/05/10 16:49:59 loginimpl.go:21: {0 2 AmsFFDyjmMCBChYOZftu 2017-05-10 16:49:53.3712587 +0530 IST}
TRACE: 2017/05/10 16:50:01 loginimpl.go:33: {0xc0421480e0 0xc0421c44b0}
TRACE: 2017/05/10 16:50:01 Login.go:48: {2 rakesh AmsFFDyjmMCBChYOZftu user}
TRACE: 2017/05/10 16:50:09 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 16:50:09 QuestionList.go:18: fundamental
TRACE: 2017/05/10 16:50:09 QuestionList.go:19: AmsFFDyjmMCBChYOZftu
TRACE: 2017/05/10 16:50:09 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 16:50:09 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 16:50:09 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 16:50:09 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 16:50:11 authenticatetokenimpl.go:47: AmsFFDyjmMCBChYOZftu
TRACE: 2017/05/10 16:50:11 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 16:50:11 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 16:50:13 authenticatetokenimpl.go:51: AmsFFDyjmMCBChYOZftu
TRACE: 2017/05/10 16:50:13 authenticatetokenimpl.go:59: Type is AmsFFDyjmMCBChYOZftu
TRACE: 2017/05/10 16:50:13 aunthenticate.go:42: 2017-05-10 16:50:13
TRACE: 2017/05/10 16:50:13 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 16:50:15 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 16:50:15 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 16:50:17 authenticatetokenimpl.go:30: {0xc0421483f0 0xc0421c4930}
TRACE: 2017/05/10 16:50:17 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 16:50:17 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 16:50:17 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 16:50:17 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 16:50:17 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 16:50:17 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 16:50:17 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 16:50:19 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0421c3980 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 16:50:21 questionimpl.go:30: &{0xc04211c8c0 0x718ea0 0xc0420d5840 false [] <nil> 0xc04237eab0}
TRACE: 2017/05/10 16:50:38 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/10 16:50:38 AnswerList.go:23: [{0 5 a method that iterates over a block of code until a condition is solved} {0 10 has to implement at least one method from the interface} {0 4 none of the above} {0 9 a long running background process} {0 7 SLOC} {0 1 none} {0 8 shows the list of files in the directory} {0 3 method overriding} {0 2 java} {0 6 queue}]
TRACE: 2017/05/10 16:50:38 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/10 16:50:38 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/10 16:50:38 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/10 16:50:38 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/10 16:50:38 CalculateScore.go:30: answerList [{0 5 a method that iterates over a block of code until a condition is solved} {0 10 has to implement at least one method from the interface} {0 4 none of the above} {0 9 a long running background process} {0 7 SLOC} {0 1 none} {0 8 shows the list of files in the directory} {0 3 method overriding} {0 2 java} {0 6 queue}]
TRACE: 2017/05/10 16:50:38 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:50:38 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:50:41 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:50:41 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:50:43 questionimpl.go:108: Type is a method that calls itself
TRACE: 2017/05/10 16:50:43 questionimpl.go:111: correct Answer fir ID 5 a method that calls itself
TRACE: 2017/05/10 16:50:43 CalculateScore.go:39: Binomial took %s 4.1595795s
TRACE: 2017/05/10 16:50:43 CalculateScore.go:41: actual vs correct a method that iterates over a block of code until a condition is solved a method that calls itself
TRACE: 2017/05/10 16:50:43 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:50:43 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:50:45 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:50:45 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:50:47 questionimpl.go:108: Type is has to implement all method defination from the interface
TRACE: 2017/05/10 16:50:47 questionimpl.go:111: correct Answer fir ID 10 has to implement all method defination from the interface
TRACE: 2017/05/10 16:50:47 CalculateScore.go:39: Binomial took %s 3.9327584s
TRACE: 2017/05/10 16:50:47 CalculateScore.go:41: actual vs correct has to implement at least one method from the interface has to implement all method defination from the interface
TRACE: 2017/05/10 16:50:47 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:50:47 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:50:49 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:50:49 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:50:51 questionimpl.go:108: Type is wraping up properties and methods
TRACE: 2017/05/10 16:50:51 questionimpl.go:111: correct Answer fir ID 4 wraping up properties and methods
TRACE: 2017/05/10 16:50:51 CalculateScore.go:39: Binomial took %s 4.2616627s
TRACE: 2017/05/10 16:50:51 CalculateScore.go:41: actual vs correct none of the above wraping up properties and methods
TRACE: 2017/05/10 16:50:51 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:50:51 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:50:53 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:50:53 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:50:55 questionimpl.go:108: Type is a long running background process
TRACE: 2017/05/10 16:50:55 questionimpl.go:111: correct Answer fir ID 9 a long running background process
TRACE: 2017/05/10 16:50:55 CalculateScore.go:39: Binomial took %s 4.0336805s
TRACE: 2017/05/10 16:50:55 CalculateScore.go:41: actual vs correct a long running background process a long running background process
TRACE: 2017/05/10 16:50:55 CalculateScore.go:47: 263409560461970212832400
TRACE: 2017/05/10 16:50:56 CalculateScore.go:50: Binomial took %s 1.0029745s
TRACE: 2017/05/10 16:50:56 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:50:56 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:50:58 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:50:58 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:51:00 questionimpl.go:108: Type is big O notation
TRACE: 2017/05/10 16:51:00 questionimpl.go:111: correct Answer fir ID 7 big O notation
TRACE: 2017/05/10 16:51:00 CalculateScore.go:39: Binomial took %s 4.1228036s
TRACE: 2017/05/10 16:51:00 CalculateScore.go:41: actual vs correct SLOC big O notation
TRACE: 2017/05/10 16:51:00 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:51:00 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:51:02 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:51:02 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:51:04 questionimpl.go:108: Type is both
TRACE: 2017/05/10 16:51:04 questionimpl.go:111: correct Answer fir ID 1 both
TRACE: 2017/05/10 16:51:04 CalculateScore.go:39: Binomial took %s 3.9315825s
TRACE: 2017/05/10 16:51:04 CalculateScore.go:41: actual vs correct none both
TRACE: 2017/05/10 16:51:04 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:51:04 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:51:06 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:51:06 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:51:08 questionimpl.go:108: Type is shows path of current directory
TRACE: 2017/05/10 16:51:08 questionimpl.go:111: correct Answer fir ID 8 shows path of current directory
TRACE: 2017/05/10 16:51:08 CalculateScore.go:39: Binomial took %s 4.2875904s
TRACE: 2017/05/10 16:51:08 CalculateScore.go:41: actual vs correct shows the list of files in the directory shows path of current directory
TRACE: 2017/05/10 16:51:08 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:51:08 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:51:10 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:51:10 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:51:12 questionimpl.go:108: Type is method overriding
TRACE: 2017/05/10 16:51:12 questionimpl.go:111: correct Answer fir ID 3 method overriding
TRACE: 2017/05/10 16:51:12 CalculateScore.go:39: Binomial took %s 4.3221334s
TRACE: 2017/05/10 16:51:12 CalculateScore.go:41: actual vs correct method overriding method overriding
TRACE: 2017/05/10 16:51:12 CalculateScore.go:47: 263409560461970212832400
TRACE: 2017/05/10 16:51:13 CalculateScore.go:50: Binomial took %s 1.0003609s
TRACE: 2017/05/10 16:51:13 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:51:13 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:51:16 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:51:16 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:51:18 questionimpl.go:108: Type is c
TRACE: 2017/05/10 16:51:18 questionimpl.go:111: correct Answer fir ID 2 c
TRACE: 2017/05/10 16:51:18 CalculateScore.go:39: Binomial took %s 4.289413s
TRACE: 2017/05/10 16:51:18 CalculateScore.go:41: actual vs correct java c
TRACE: 2017/05/10 16:51:18 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:51:18 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:51:20 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:51:20 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:51:22 questionimpl.go:108: Type is stack
TRACE: 2017/05/10 16:51:22 questionimpl.go:111: correct Answer fir ID 6 stack
TRACE: 2017/05/10 16:51:22 CalculateScore.go:39: Binomial took %s 4.455565s
TRACE: 2017/05/10 16:51:22 CalculateScore.go:41: actual vs correct queue stack
TRACE: 2017/05/10 16:51:22 CalculateScore.go:55: Binomial took %s 43.8011049s
TRACE: 2017/05/10 16:53:07 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 16:53:07 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 16:53:07 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/10 16:53:07 Login.go:16: entering manager.login
TRACE: 2017/05/10 16:53:07 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 16:53:07 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 16:53:07 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 16:53:11 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/10 16:53:11 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/10 16:53:11 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/10 16:53:13 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/10 16:53:13 loginimpl.go:81: executing query.....
TRACE: 2017/05/10 16:53:15 loginimpl.go:93: {0xc042108700 0xc042106340}
TRACE: 2017/05/10 16:53:15 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/10 16:53:15 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/10 16:53:15 loginimpl.go:16: exntering in SaveToken() function {0 2 cXwjvpQPDQGoslHvmrMu 2017-05-10 16:53:11.9457151 +0530 IST}
TRACE: 2017/05/10 16:53:15 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/10 16:53:17 loginimpl.go:20: token inserted
TRACE: 2017/05/10 16:53:17 loginimpl.go:21: {0 2 cXwjvpQPDQGoslHvmrMu 2017-05-10 16:53:11.9457151 +0530 IST}
TRACE: 2017/05/10 16:53:19 loginimpl.go:33: {0xc042148000 0xc0421e2090}
TRACE: 2017/05/10 16:53:19 Login.go:48: {2 rakesh cXwjvpQPDQGoslHvmrMu user}
TRACE: 2017/05/10 16:53:25 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 16:53:25 QuestionList.go:18: fundamental
TRACE: 2017/05/10 16:53:25 QuestionList.go:19: cXwjvpQPDQGoslHvmrMu
TRACE: 2017/05/10 16:53:25 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 16:53:25 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 16:53:25 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 16:53:25 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 16:53:27 authenticatetokenimpl.go:47: cXwjvpQPDQGoslHvmrMu
TRACE: 2017/05/10 16:53:27 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 16:53:27 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 16:53:29 authenticatetokenimpl.go:51: cXwjvpQPDQGoslHvmrMu
TRACE: 2017/05/10 16:53:29 authenticatetokenimpl.go:59: Type is cXwjvpQPDQGoslHvmrMu
TRACE: 2017/05/10 16:53:29 aunthenticate.go:42: 2017-05-10 16:53:29
TRACE: 2017/05/10 16:53:29 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 16:53:31 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 16:53:31 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 16:53:33 authenticatetokenimpl.go:30: {0xc042128000 0xc0420453d0}
TRACE: 2017/05/10 16:53:33 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 16:53:33 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 16:53:33 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 16:53:33 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 16:53:33 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 16:53:33 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 16:53:33 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 16:53:35 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc042315320 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 16:53:40 questionimpl.go:30: &{0xc04211ca10 0x718ea0 0xc0421d2380 false [] <nil> 0xc042284ed0}
TRACE: 2017/05/10 16:53:50 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/10 16:53:50 AnswerList.go:23: [{0 7 } {0 5 } {0 4 } {0 10 } {0 8 } {0 9 } {0 2 objective c} {0 3 interface} {0 1 printer} {0 6 doubly linked list}]
TRACE: 2017/05/10 16:53:50 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/10 16:53:50 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/10 16:53:50 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/10 16:53:50 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/10 16:53:50 CalculateScore.go:30: answerList [{0 7 } {0 5 } {0 4 } {0 10 } {0 8 } {0 9 } {0 2 objective c} {0 3 interface} {0 1 printer} {0 6 doubly linked list}]
TRACE: 2017/05/10 16:53:50 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:53:50 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:53:52 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:53:52 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:53:53 questionimpl.go:108: Type is big O notation
TRACE: 2017/05/10 16:53:53 questionimpl.go:111: correct Answer fir ID 7 big O notation
TRACE: 2017/05/10 16:53:53 CalculateScore.go:39: Binomial took %s 3.9429351s
TRACE: 2017/05/10 16:53:53 CalculateScore.go:41: actual vs correct  big O notation
TRACE: 2017/05/10 16:53:53 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:53:53 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:53:56 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:53:56 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:53:57 questionimpl.go:108: Type is a method that calls itself
TRACE: 2017/05/10 16:53:57 questionimpl.go:111: correct Answer fir ID 5 a method that calls itself
TRACE: 2017/05/10 16:53:57 CalculateScore.go:39: Binomial took %s 3.7846134s
TRACE: 2017/05/10 16:53:57 CalculateScore.go:41: actual vs correct  a method that calls itself
TRACE: 2017/05/10 16:53:57 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:53:57 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:53:59 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:53:59 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:54:01 questionimpl.go:108: Type is wraping up properties and methods
TRACE: 2017/05/10 16:54:01 questionimpl.go:111: correct Answer fir ID 4 wraping up properties and methods
TRACE: 2017/05/10 16:54:01 CalculateScore.go:39: Binomial took %s 4.0650908s
TRACE: 2017/05/10 16:54:01 CalculateScore.go:41: actual vs correct  wraping up properties and methods
TRACE: 2017/05/10 16:54:01 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:54:01 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:54:04 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:54:04 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:54:05 questionimpl.go:108: Type is has to implement all method defination from the interface
TRACE: 2017/05/10 16:54:05 questionimpl.go:111: correct Answer fir ID 10 has to implement all method defination from the interface
TRACE: 2017/05/10 16:54:05 CalculateScore.go:39: Binomial took %s 4.1171744s
TRACE: 2017/05/10 16:54:05 CalculateScore.go:41: actual vs correct  has to implement all method defination from the interface
TRACE: 2017/05/10 16:54:05 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:54:05 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:54:08 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:54:08 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:54:09 questionimpl.go:108: Type is shows path of current directory
TRACE: 2017/05/10 16:54:09 questionimpl.go:111: correct Answer fir ID 8 shows path of current directory
TRACE: 2017/05/10 16:54:09 CalculateScore.go:39: Binomial took %s 3.8266146s
TRACE: 2017/05/10 16:54:09 CalculateScore.go:41: actual vs correct  shows path of current directory
TRACE: 2017/05/10 16:54:09 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:54:09 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:54:11 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:54:11 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:54:13 questionimpl.go:108: Type is a long running background process
TRACE: 2017/05/10 16:54:13 questionimpl.go:111: correct Answer fir ID 9 a long running background process
TRACE: 2017/05/10 16:54:13 CalculateScore.go:39: Binomial took %s 3.9946499s
TRACE: 2017/05/10 16:54:13 CalculateScore.go:41: actual vs correct  a long running background process
TRACE: 2017/05/10 16:54:13 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:54:13 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:54:15 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:54:15 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:54:17 questionimpl.go:108: Type is c
TRACE: 2017/05/10 16:54:17 questionimpl.go:111: correct Answer fir ID 2 c
TRACE: 2017/05/10 16:54:17 CalculateScore.go:39: Binomial took %s 4.0760462s
TRACE: 2017/05/10 16:54:17 CalculateScore.go:41: actual vs correct objective c c
TRACE: 2017/05/10 16:54:17 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:54:17 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:54:20 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:54:20 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:54:21 questionimpl.go:108: Type is method overriding
TRACE: 2017/05/10 16:54:21 questionimpl.go:111: correct Answer fir ID 3 method overriding
TRACE: 2017/05/10 16:54:21 CalculateScore.go:39: Binomial took %s 4.0423447s
TRACE: 2017/05/10 16:54:21 CalculateScore.go:41: actual vs correct interface method overriding
TRACE: 2017/05/10 16:54:21 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:54:21 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:54:24 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:54:24 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:54:26 questionimpl.go:108: Type is both
TRACE: 2017/05/10 16:54:26 questionimpl.go:111: correct Answer fir ID 1 both
TRACE: 2017/05/10 16:54:26 CalculateScore.go:39: Binomial took %s 4.1473547s
TRACE: 2017/05/10 16:54:26 CalculateScore.go:41: actual vs correct printer both
TRACE: 2017/05/10 16:54:26 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:54:26 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:54:28 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:54:28 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:54:29 questionimpl.go:108: Type is stack
TRACE: 2017/05/10 16:54:29 questionimpl.go:111: correct Answer fir ID 6 stack
TRACE: 2017/05/10 16:54:29 CalculateScore.go:39: Binomial took %s 3.9013569s
TRACE: 2017/05/10 16:54:29 CalculateScore.go:41: actual vs correct doubly linked list stack
TRACE: 2017/05/10 16:54:29 CalculateScore.go:55: Binomial took %s 39.9016896s
TRACE: 2017/05/10 16:56:21 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 16:56:21 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 16:56:21 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/10 16:56:21 Login.go:16: entering manager.login
TRACE: 2017/05/10 16:56:21 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 16:56:21 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 16:56:21 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 16:56:25 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/10 16:56:25 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/10 16:56:25 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/10 16:56:27 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/10 16:56:27 loginimpl.go:81: executing query.....
TRACE: 2017/05/10 16:56:28 loginimpl.go:93: {0xc0421483f0 0xc0421e25b0}
TRACE: 2017/05/10 16:56:28 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/10 16:56:28 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/10 16:56:28 loginimpl.go:16: exntering in SaveToken() function {0 2 LytGChAsXKDKvcaqvLVp 2017-05-10 16:56:25.0878191 +0530 IST}
TRACE: 2017/05/10 16:56:28 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/10 16:56:31 loginimpl.go:20: token inserted
TRACE: 2017/05/10 16:56:31 loginimpl.go:21: {0 2 LytGChAsXKDKvcaqvLVp 2017-05-10 16:56:25.0878191 +0530 IST}
TRACE: 2017/05/10 16:56:33 loginimpl.go:33: {0xc04211c5b0 0xc042004cb0}
TRACE: 2017/05/10 16:56:33 Login.go:48: {2 rakesh LytGChAsXKDKvcaqvLVp user}
TRACE: 2017/05/10 16:56:49 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 16:56:49 QuestionList.go:18: java
TRACE: 2017/05/10 16:56:49 QuestionList.go:19: LytGChAsXKDKvcaqvLVp
TRACE: 2017/05/10 16:56:49 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 16:56:49 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 16:56:49 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 16:56:49 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 16:56:51 authenticatetokenimpl.go:47: LytGChAsXKDKvcaqvLVp
TRACE: 2017/05/10 16:56:51 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 16:56:51 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 16:56:53 authenticatetokenimpl.go:51: LytGChAsXKDKvcaqvLVp
TRACE: 2017/05/10 16:56:53 authenticatetokenimpl.go:59: Type is LytGChAsXKDKvcaqvLVp
TRACE: 2017/05/10 16:56:53 aunthenticate.go:42: 2017-05-10 16:56:53
TRACE: 2017/05/10 16:56:53 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 16:56:55 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 16:56:55 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 16:56:57 authenticatetokenimpl.go:30: {0xc042128620 0xc042045750}
TRACE: 2017/05/10 16:56:57 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 16:56:57 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 16:56:57 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 16:56:57 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 16:56:57 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 16:56:57 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 16:56:57 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 16:56:59 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc042152360 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 16:57:01 questionimpl.go:30: &{0xc04211ce70 0x718ea0 0xc0421d37e0 false [] <nil> 0xc042006720}
TRACE: 2017/05/10 16:57:37 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/10 16:57:37 AnswerList.go:23: [{0 27 -(215) to (215) – 1} {0 22 Stack} {0 34 All of the above} {0 19 boxing} {0 33 if, break} {0 23 InputStream class} {0 30 max(Comparator comp)} {0 25 Interface} {0 26 Compilation error} {0 29 clear()} {0 12 No} {0 13 Can store multiple values} {0 28 File Filtering} {0 20 Destructors} {0 14 start() method} {0 11 parent class} {0 31 ambigous()} {0 24 volatile} {0 17 Singlethreaded} {0 35 final} {0 32 All of the mentioned} {0 21 int} {0 18 java.util.Time} {0 16 prepareCall()} {0 15 java.util.SortedSet}]
TRACE: 2017/05/10 16:57:37 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/10 16:57:37 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/10 16:57:37 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/10 16:57:37 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/10 16:57:37 CalculateScore.go:30: answerList [{0 27 -(215) to (215) – 1} {0 22 Stack} {0 34 All of the above} {0 19 boxing} {0 33 if, break} {0 23 InputStream class} {0 30 max(Comparator comp)} {0 25 Interface} {0 26 Compilation error} {0 29 clear()} {0 12 No} {0 13 Can store multiple values} {0 28 File Filtering} {0 20 Destructors} {0 14 start() method} {0 11 parent class} {0 31 ambigous()} {0 24 volatile} {0 17 Singlethreaded} {0 35 final} {0 32 All of the mentioned} {0 21 int} {0 18 java.util.Time} {0 16 prepareCall()} {0 15 java.util.SortedSet}]
TRACE: 2017/05/10 16:57:37 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:57:37 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:57:39 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:57:39 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:57:41 questionimpl.go:108: Type is 0 to 65535
TRACE: 2017/05/10 16:57:41 questionimpl.go:111: correct Answer fir ID 27 0 to 65535
TRACE: 2017/05/10 16:57:41 CalculateScore.go:39: Binomial took %s 4.0136147s
TRACE: 2017/05/10 16:57:41 CalculateScore.go:41: actual vs correct -(215) to (215) – 1 0 to 65535
TRACE: 2017/05/10 16:57:41 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:57:41 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:57:43 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:57:43 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:57:45 questionimpl.go:108: Type is Queue
TRACE: 2017/05/10 16:57:45 questionimpl.go:111: correct Answer fir ID 22 Queue
TRACE: 2017/05/10 16:57:45 CalculateScore.go:39: Binomial took %s 4.1205621s
TRACE: 2017/05/10 16:57:45 CalculateScore.go:41: actual vs correct Stack Queue
TRACE: 2017/05/10 16:57:45 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:57:45 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:57:47 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:57:47 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:57:49 questionimpl.go:108: Type is All of the above
TRACE: 2017/05/10 16:57:49 questionimpl.go:111: correct Answer fir ID 34 All of the above
TRACE: 2017/05/10 16:57:49 CalculateScore.go:39: Binomial took %s 3.7354833s
TRACE: 2017/05/10 16:57:49 CalculateScore.go:41: actual vs correct All of the above All of the above
TRACE: 2017/05/10 16:57:49 CalculateScore.go:47: 263409560461970212832400
TRACE: 2017/05/10 16:57:50 CalculateScore.go:50: Binomial took %s 1.0015903s
TRACE: 2017/05/10 16:57:50 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:57:50 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:57:52 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:57:52 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:57:54 questionimpl.go:108: Type is autoboxing
TRACE: 2017/05/10 16:57:54 questionimpl.go:111: correct Answer fir ID 19 autoboxing
TRACE: 2017/05/10 16:57:54 CalculateScore.go:39: Binomial took %s 4.206512s
TRACE: 2017/05/10 16:57:54 CalculateScore.go:41: actual vs correct boxing autoboxing
TRACE: 2017/05/10 16:57:54 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:57:54 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:57:56 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:57:56 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:57:58 questionimpl.go:108: Type is switch, if
TRACE: 2017/05/10 16:57:58 questionimpl.go:111: correct Answer fir ID 33 switch, if
TRACE: 2017/05/10 16:57:58 CalculateScore.go:39: Binomial took %s 3.8390644s
TRACE: 2017/05/10 16:57:58 CalculateScore.go:41: actual vs correct if, break switch, if
TRACE: 2017/05/10 16:57:58 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:57:58 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:58:00 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:58:00 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:58:02 questionimpl.go:108: Type is PrintStream class
TRACE: 2017/05/10 16:58:02 questionimpl.go:111: correct Answer fir ID 23 PrintStream class
TRACE: 2017/05/10 16:58:02 CalculateScore.go:39: Binomial took %s 4.0021981s
TRACE: 2017/05/10 16:58:02 CalculateScore.go:41: actual vs correct InputStream class PrintStream class
TRACE: 2017/05/10 16:58:02 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:58:02 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:58:04 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:58:04 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:58:06 questionimpl.go:108: Type is max(Comparator comp)
TRACE: 2017/05/10 16:58:06 questionimpl.go:111: correct Answer fir ID 30 max(Comparator comp)
TRACE: 2017/05/10 16:58:06 CalculateScore.go:39: Binomial took %s 3.8552725s
TRACE: 2017/05/10 16:58:06 CalculateScore.go:41: actual vs correct max(Comparator comp) max(Comparator comp)
TRACE: 2017/05/10 16:58:06 CalculateScore.go:47: 263409560461970212832400
TRACE: 2017/05/10 16:58:07 CalculateScore.go:50: Binomial took %s 1.0033324s
TRACE: 2017/05/10 16:58:07 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:58:07 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:58:09 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:58:09 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:58:11 questionimpl.go:108: Type is Interface
TRACE: 2017/05/10 16:58:11 questionimpl.go:111: correct Answer fir ID 25 Interface
TRACE: 2017/05/10 16:58:11 CalculateScore.go:39: Binomial took %s 3.9445336s
TRACE: 2017/05/10 16:58:11 CalculateScore.go:41: actual vs correct Interface Interface
TRACE: 2017/05/10 16:58:11 CalculateScore.go:47: 263409560461970212832400
TRACE: 2017/05/10 16:58:12 CalculateScore.go:50: Binomial took %s 1.0006214s
TRACE: 2017/05/10 16:58:12 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:58:12 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:58:14 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:58:14 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:58:16 questionimpl.go:108: Type is 100
TRACE: 2017/05/10 16:58:16 questionimpl.go:111: correct Answer fir ID 26 100
TRACE: 2017/05/10 16:58:16 CalculateScore.go:39: Binomial took %s 3.794604s
TRACE: 2017/05/10 16:58:16 CalculateScore.go:41: actual vs correct Compilation error 100
TRACE: 2017/05/10 16:58:16 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:58:16 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:58:18 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:58:18 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:58:20 questionimpl.go:108: Type is flush()
TRACE: 2017/05/10 16:58:20 questionimpl.go:111: correct Answer fir ID 29 flush()
TRACE: 2017/05/10 16:58:20 CalculateScore.go:39: Binomial took %s 4.1514884s
TRACE: 2017/05/10 16:58:20 CalculateScore.go:41: actual vs correct clear() flush()
TRACE: 2017/05/10 16:58:20 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:58:20 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:58:22 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:58:22 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:58:24 questionimpl.go:108: Type is No
TRACE: 2017/05/10 16:58:24 questionimpl.go:111: correct Answer fir ID 12 No
TRACE: 2017/05/10 16:58:24 CalculateScore.go:39: Binomial took %s 4.0366444s
TRACE: 2017/05/10 16:58:24 CalculateScore.go:41: actual vs correct No No
TRACE: 2017/05/10 16:58:24 CalculateScore.go:47: 263409560461970212832400
TRACE: 2017/05/10 16:58:25 CalculateScore.go:50: Binomial took %s 1.0012413s
TRACE: 2017/05/10 16:58:25 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:58:25 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:58:27 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:58:27 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:58:29 questionimpl.go:108: Type is Can store multiple values
TRACE: 2017/05/10 16:58:29 questionimpl.go:111: correct Answer fir ID 13 Can store multiple values
TRACE: 2017/05/10 16:58:29 CalculateScore.go:39: Binomial took %s 4.0229129s
TRACE: 2017/05/10 16:58:29 CalculateScore.go:41: actual vs correct Can store multiple values Can store multiple values
TRACE: 2017/05/10 16:58:29 CalculateScore.go:47: 263409560461970212832400
TRACE: 2017/05/10 16:58:30 CalculateScore.go:50: Binomial took %s 1.0015292s
TRACE: 2017/05/10 16:58:30 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:58:30 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:58:32 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:58:32 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:58:34 questionimpl.go:108: Type is Serialization
TRACE: 2017/05/10 16:58:34 questionimpl.go:111: correct Answer fir ID 28 Serialization
TRACE: 2017/05/10 16:58:34 CalculateScore.go:39: Binomial took %s 4.0421779s
TRACE: 2017/05/10 16:58:34 CalculateScore.go:41: actual vs correct File Filtering Serialization
TRACE: 2017/05/10 16:58:34 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:58:34 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:58:36 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:58:36 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:58:38 questionimpl.go:108: Type is Constructor
TRACE: 2017/05/10 16:58:38 questionimpl.go:111: correct Answer fir ID 20 Constructor
TRACE: 2017/05/10 16:58:38 CalculateScore.go:39: Binomial took %s 4.2024768s
TRACE: 2017/05/10 16:58:38 CalculateScore.go:41: actual vs correct Destructors Constructor
TRACE: 2017/05/10 16:58:38 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:58:38 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:58:40 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:58:40 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:58:42 questionimpl.go:108: Type is resume() method
TRACE: 2017/05/10 16:58:42 questionimpl.go:111: correct Answer fir ID 14 resume() method
TRACE: 2017/05/10 16:58:42 CalculateScore.go:39: Binomial took %s 4.4362781s
TRACE: 2017/05/10 16:58:42 CalculateScore.go:41: actual vs correct start() method resume() method
TRACE: 2017/05/10 16:58:42 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:58:42 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:58:45 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:58:45 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:58:47 questionimpl.go:108: Type is Final class
TRACE: 2017/05/10 16:58:47 questionimpl.go:111: correct Answer fir ID 11 Final class
TRACE: 2017/05/10 16:58:47 CalculateScore.go:39: Binomial took %s 4.2445855s
TRACE: 2017/05/10 16:58:47 CalculateScore.go:41: actual vs correct parent class Final class
TRACE: 2017/05/10 16:58:47 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:58:47 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:58:49 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:58:49 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:58:51 questionimpl.go:108: Type is shuffle()
TRACE: 2017/05/10 16:58:51 questionimpl.go:111: correct Answer fir ID 31 shuffle()
TRACE: 2017/05/10 16:58:51 CalculateScore.go:39: Binomial took %s 4.2098981s
TRACE: 2017/05/10 16:58:51 CalculateScore.go:41: actual vs correct ambigous() shuffle()
TRACE: 2017/05/10 16:58:51 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:58:51 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:58:53 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:58:53 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:58:55 questionimpl.go:108: Type is transient
TRACE: 2017/05/10 16:58:55 questionimpl.go:111: correct Answer fir ID 24 transient
TRACE: 2017/05/10 16:58:55 CalculateScore.go:39: Binomial took %s 4.0846706s
TRACE: 2017/05/10 16:58:55 CalculateScore.go:41: actual vs correct volatile transient
TRACE: 2017/05/10 16:58:55 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:58:55 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:58:57 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:58:57 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:58:59 questionimpl.go:108: Type is Multithreaded
TRACE: 2017/05/10 16:58:59 questionimpl.go:111: correct Answer fir ID 17 Multithreaded
TRACE: 2017/05/10 16:58:59 CalculateScore.go:39: Binomial took %s 4.169821s
TRACE: 2017/05/10 16:58:59 CalculateScore.go:41: actual vs correct Singlethreaded Multithreaded
TRACE: 2017/05/10 16:58:59 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:58:59 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:59:01 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 16:59:01 QuestionList.go:18: java
TRACE: 2017/05/10 16:59:01 QuestionList.go:19: LytGChAsXKDKvcaqvLVp
TRACE: 2017/05/10 16:59:01 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 16:59:01 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 16:59:01 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 16:59:01 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 16:59:01 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:59:01 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:59:03 questionimpl.go:108: Type is final
TRACE: 2017/05/10 16:59:03 questionimpl.go:111: correct Answer fir ID 35 final
TRACE: 2017/05/10 16:59:03 CalculateScore.go:39: Binomial took %s 3.8494307s
TRACE: 2017/05/10 16:59:03 CalculateScore.go:41: actual vs correct final final
TRACE: 2017/05/10 16:59:03 CalculateScore.go:47: 263409560461970212832400
TRACE: 2017/05/10 16:59:03 authenticatetokenimpl.go:47: LytGChAsXKDKvcaqvLVp
TRACE: 2017/05/10 16:59:03 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 16:59:03 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 16:59:04 CalculateScore.go:50: Binomial took %s 1.0009681s
TRACE: 2017/05/10 16:59:04 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:59:04 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:59:05 authenticatetokenimpl.go:51: LytGChAsXKDKvcaqvLVp
TRACE: 2017/05/10 16:59:05 authenticatetokenimpl.go:59: Type is LytGChAsXKDKvcaqvLVp
TRACE: 2017/05/10 16:59:05 aunthenticate.go:42: 2017-05-10 16:59:05
TRACE: 2017/05/10 16:59:05 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 16:59:06 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:59:06 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:59:07 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 16:59:07 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 16:59:08 questionimpl.go:108: Type is All of the mentioned
TRACE: 2017/05/10 16:59:08 questionimpl.go:111: correct Answer fir ID 32 All of the mentioned
TRACE: 2017/05/10 16:59:08 CalculateScore.go:39: Binomial took %s 3.7364809s
TRACE: 2017/05/10 16:59:08 CalculateScore.go:41: actual vs correct All of the mentioned All of the mentioned
TRACE: 2017/05/10 16:59:08 CalculateScore.go:47: 263409560461970212832400
TRACE: 2017/05/10 16:59:09 CalculateScore.go:50: Binomial took %s 1.0073184s
TRACE: 2017/05/10 16:59:09 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:59:09 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:59:09 authenticatetokenimpl.go:30: {0xc04211a2a0 0xc04239d5d0}
TRACE: 2017/05/10 16:59:09 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 16:59:09 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 16:59:09 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 16:59:09 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 16:59:09 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 16:59:09 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 16:59:09 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 16:59:11 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:59:11 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:59:11 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0422f8360 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 16:59:13 questionimpl.go:108: Type is string
TRACE: 2017/05/10 16:59:13 questionimpl.go:111: correct Answer fir ID 21 string
TRACE: 2017/05/10 16:59:13 CalculateScore.go:39: Binomial took %s 4.2206733s
TRACE: 2017/05/10 16:59:13 CalculateScore.go:41: actual vs correct int string
TRACE: 2017/05/10 16:59:13 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:59:13 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:59:13 questionimpl.go:30: &{0xc042110620 0x718ea0 0xc04239bc00 false [] <nil> 0xc042196bd0}
TRACE: 2017/05/10 16:59:15 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:59:15 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:59:17 questionimpl.go:108: Type is java.util.Date
TRACE: 2017/05/10 16:59:17 questionimpl.go:111: correct Answer fir ID 18 java.util.Date
TRACE: 2017/05/10 16:59:17 CalculateScore.go:39: Binomial took %s 4.3835045s
TRACE: 2017/05/10 16:59:17 CalculateScore.go:41: actual vs correct java.util.Time java.util.Date
TRACE: 2017/05/10 16:59:17 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:59:17 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:59:20 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:59:20 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:59:22 questionimpl.go:108: Type is getConnection()
TRACE: 2017/05/10 16:59:22 questionimpl.go:111: correct Answer fir ID 16 getConnection()
TRACE: 2017/05/10 16:59:22 CalculateScore.go:39: Binomial took %s 4.2667998s
TRACE: 2017/05/10 16:59:22 CalculateScore.go:41: actual vs correct prepareCall() getConnection()
TRACE: 2017/05/10 16:59:22 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 16:59:22 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 16:59:24 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 16:59:24 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 16:59:26 questionimpl.go:108: Type is java.util.TreeMap
TRACE: 2017/05/10 16:59:26 questionimpl.go:111: correct Answer fir ID 15 java.util.TreeMap
TRACE: 2017/05/10 16:59:26 CalculateScore.go:39: Binomial took %s 4.1840471s
TRACE: 2017/05/10 16:59:26 CalculateScore.go:41: actual vs correct java.util.SortedSet java.util.TreeMap
TRACE: 2017/05/10 16:59:26 CalculateScore.go:55: Binomial took %s 1m48.775837s
TRACE: 2017/05/10 17:03:17 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 17:03:17 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 17:03:17 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/10 17:03:17 Login.go:16: entering manager.login
TRACE: 2017/05/10 17:03:17 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 17:03:17 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 17:03:17 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 17:03:21 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/10 17:03:21 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/10 17:03:21 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/10 17:03:23 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/10 17:03:23 loginimpl.go:81: executing query.....
TRACE: 2017/05/10 17:03:25 loginimpl.go:93: {0xc042128380 0xc0421e22e0}
TRACE: 2017/05/10 17:03:25 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/10 17:03:25 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/10 17:03:25 loginimpl.go:16: exntering in SaveToken() function {0 2 GGkSbamsoKukxbezxjCs 2017-05-10 17:03:21.2816161 +0530 IST}
TRACE: 2017/05/10 17:03:25 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/10 17:03:25 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 17:03:25 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 17:03:25 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/10 17:03:25 Login.go:16: entering manager.login
TRACE: 2017/05/10 17:03:25 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 17:03:25 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 17:03:25 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 17:03:27 loginimpl.go:20: token inserted
TRACE: 2017/05/10 17:03:27 loginimpl.go:21: {0 2 GGkSbamsoKukxbezxjCs 2017-05-10 17:03:21.2816161 +0530 IST}
TRACE: 2017/05/10 17:03:28 loginimpl.go:33: {0xc04211c5b0 0xc0421375c0}
TRACE: 2017/05/10 17:03:28 Login.go:48: {2 rakesh GGkSbamsoKukxbezxjCs user}
TRACE: 2017/05/10 17:03:29 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/10 17:03:29 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/10 17:03:29 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/10 17:03:32 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/10 17:03:32 loginimpl.go:81: executing query.....
TRACE: 2017/05/10 17:03:33 loginimpl.go:93: {0xc042128e00 0xc0421378a0}
TRACE: 2017/05/10 17:03:33 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/10 17:03:33 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/10 17:03:33 loginimpl.go:16: exntering in SaveToken() function {0 2 YOHViESymVIzyiRNQJGo 2017-05-10 17:03:29.9107341 +0530 IST}
TRACE: 2017/05/10 17:03:33 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/10 17:03:36 loginimpl.go:20: token inserted
TRACE: 2017/05/10 17:03:36 loginimpl.go:21: {0 2 YOHViESymVIzyiRNQJGo 2017-05-10 17:03:29.9107341 +0530 IST}
TRACE: 2017/05/10 17:03:37 loginimpl.go:33: {0xc042128ee0 0xc04239c500}
TRACE: 2017/05/10 17:03:37 Login.go:48: {2 rakesh YOHViESymVIzyiRNQJGo user}
TRACE: 2017/05/10 17:12:28 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 17:12:28 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 17:12:28 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/10 17:12:28 Login.go:16: entering manager.login
TRACE: 2017/05/10 17:12:28 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 17:12:28 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 17:12:28 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 17:12:31 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/10 17:12:31 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/10 17:12:31 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/10 17:12:34 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/10 17:12:34 loginimpl.go:81: executing query.....
TRACE: 2017/05/10 17:12:35 loginimpl.go:93: {0xc042128150 0xc04239c730}
TRACE: 2017/05/10 17:12:35 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/10 17:12:35 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/10 17:12:35 loginimpl.go:16: exntering in SaveToken() function {0 2 oyrONpsSwGPHBAqWGYKs 2017-05-10 17:12:31.862791 +0530 IST}
TRACE: 2017/05/10 17:12:35 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/10 17:12:37 loginimpl.go:20: token inserted
TRACE: 2017/05/10 17:12:37 loginimpl.go:21: {0 2 oyrONpsSwGPHBAqWGYKs 2017-05-10 17:12:31.862791 +0530 IST}
TRACE: 2017/05/10 17:12:39 loginimpl.go:33: {0xc0421be070 0xc04239c120}
TRACE: 2017/05/10 17:12:39 Login.go:48: {2 rakesh oyrONpsSwGPHBAqWGYKs user}
TRACE: 2017/05/10 18:01:21 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 18:01:21 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 18:01:21 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/10 18:01:21 Login.go:16: entering manager.login
TRACE: 2017/05/10 18:01:21 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 18:01:21 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 18:01:21 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 18:01:25 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/10 18:01:25 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/10 18:01:25 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/10 18:01:32 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 18:01:32 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 18:01:32 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/10 18:01:32 Login.go:16: entering manager.login
TRACE: 2017/05/10 18:01:32 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 18:01:32 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 18:01:32 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 18:01:36 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/10 18:01:36 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/10 18:01:36 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/10 18:01:38 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/10 18:01:38 loginimpl.go:81: executing query.....
TRACE: 2017/05/10 18:01:40 loginimpl.go:93: {0xc0421be3f0 0xc04239c510}
TRACE: 2017/05/10 18:01:40 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/10 18:01:40 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/10 18:01:40 loginimpl.go:16: exntering in SaveToken() function {0 2 qQfMMwzBNhwDtYbbTZNf 2017-05-10 18:01:36.2539193 +0530 IST}
TRACE: 2017/05/10 18:01:40 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/10 18:01:42 loginimpl.go:20: token inserted
TRACE: 2017/05/10 18:01:42 loginimpl.go:21: {0 2 qQfMMwzBNhwDtYbbTZNf 2017-05-10 18:01:36.2539193 +0530 IST}
TRACE: 2017/05/10 18:01:45 loginimpl.go:33: {0xc042128770 0xc0421e2990}
TRACE: 2017/05/10 18:01:45 Login.go:48: {2 rakesh qQfMMwzBNhwDtYbbTZNf user}
TRACE: 2017/05/10 18:01:54 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 18:01:54 QuestionList.go:18: java
TRACE: 2017/05/10 18:01:54 QuestionList.go:19: qQfMMwzBNhwDtYbbTZNf
TRACE: 2017/05/10 18:01:54 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 18:01:54 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 18:01:54 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 18:01:54 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 18:01:58 authenticatetokenimpl.go:47: qQfMMwzBNhwDtYbbTZNf
TRACE: 2017/05/10 18:01:58 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 18:01:58 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 18:02:02 authenticatetokenimpl.go:51: qQfMMwzBNhwDtYbbTZNf
TRACE: 2017/05/10 18:02:02 authenticatetokenimpl.go:59: Type is qQfMMwzBNhwDtYbbTZNf
TRACE: 2017/05/10 18:02:02 aunthenticate.go:42: 2017-05-10 18:02:02
TRACE: 2017/05/10 18:02:02 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 18:02:05 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 18:02:05 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 18:02:07 authenticatetokenimpl.go:30: {0xc0421484d0 0xc04245c620}
TRACE: 2017/05/10 18:02:07 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 18:02:07 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 18:02:07 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 18:02:07 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 18:02:07 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 18:02:07 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 18:02:07 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 18:02:09 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc042116840 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 18:02:11 questionimpl.go:30: &{0xc042128f50 0x718ea0 0xc042008c40 false [] <nil> 0xc0423273e0}
TRACE: 2017/05/10 18:02:41 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/10 18:02:41 AnswerList.go:23: [{0 13 none of above} {0 22 Stack} {0 33 switch, if} {0 11 parent class} {0 29 flush()} {0 32 EMPTY_LIST} {0 24 native} {0 28 Garbage collection} {0 23 Object class} {0 34 for(; ;)} {0 14 resume() method} {0 31 ambigous()} {0 15 java.util.SortedSet} {0 18 java.util.Date} {0 17 Both of above} {0 25 } {0 35 final} {0 30 max(Collection c)} {0 20 Constructor} {0 19 } {0 21 } {0 26 } {0 16 } {0 27 } {0 12 }]
TRACE: 2017/05/10 18:02:41 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/10 18:02:41 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/10 18:02:41 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/10 18:02:41 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/10 18:02:41 CalculateScore.go:30: answerList [{0 13 none of above} {0 22 Stack} {0 33 switch, if} {0 11 parent class} {0 29 flush()} {0 32 EMPTY_LIST} {0 24 native} {0 28 Garbage collection} {0 23 Object class} {0 34 for(; ;)} {0 14 resume() method} {0 31 ambigous()} {0 15 java.util.SortedSet} {0 18 java.util.Date} {0 17 Both of above} {0 25 } {0 35 final} {0 30 max(Collection c)} {0 20 Constructor} {0 19 } {0 21 } {0 26 } {0 16 } {0 27 } {0 12 }]
TRACE: 2017/05/10 18:02:41 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:02:41 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:02:43 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:02:43 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:02:45 questionimpl.go:108: Type is Can store multiple values
TRACE: 2017/05/10 18:02:45 questionimpl.go:111: correct Answer fir ID 13 Can store multiple values
TRACE: 2017/05/10 18:02:45 CalculateScore.go:39: Binomial took %s 3.9949334s
TRACE: 2017/05/10 18:02:45 CalculateScore.go:41: actual vs correct none of above Can store multiple values
TRACE: 2017/05/10 18:02:45 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:02:45 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:03:06 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:03:58 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 18:03:58 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 18:03:58 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/10 18:03:58 Login.go:16: entering manager.login
TRACE: 2017/05/10 18:03:58 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 18:03:58 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 18:03:58 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 18:08:26 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 18:08:26 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 18:08:26 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/10 18:08:26 Login.go:16: entering manager.login
TRACE: 2017/05/10 18:08:26 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 18:08:26 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 18:08:26 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 18:09:37 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 18:09:37 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 18:09:37 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/10 18:09:37 Login.go:16: entering manager.login
TRACE: 2017/05/10 18:09:37 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 18:09:37 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 18:09:37 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 18:13:05 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 18:13:05 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 18:13:05 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/10 18:13:05 Login.go:16: entering manager.login
TRACE: 2017/05/10 18:13:05 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 18:13:05 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 18:13:05 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 18:13:09 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/10 18:13:09 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/10 18:13:09 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/10 18:13:12 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/10 18:13:12 loginimpl.go:81: executing query.....
TRACE: 2017/05/10 18:13:13 loginimpl.go:93: {0xc0421282a0 0xc042106250}
TRACE: 2017/05/10 18:13:13 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/10 18:13:13 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/10 18:13:13 loginimpl.go:16: exntering in SaveToken() function {0 2 GDDzRLaZMapjuULqfKeB 2017-05-10 18:13:09.9614523 +0530 IST}
TRACE: 2017/05/10 18:13:15 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/10 18:13:17 loginimpl.go:20: token inserted
TRACE: 2017/05/10 18:13:17 loginimpl.go:21: {0 2 GDDzRLaZMapjuULqfKeB 2017-05-10 18:13:09.9614523 +0530 IST}
TRACE: 2017/05/10 18:13:18 loginimpl.go:33: {0xc042148a80 0xc04245cc60}
TRACE: 2017/05/10 18:13:18 Login.go:48: {2 rakesh GDDzRLaZMapjuULqfKeB user}
TRACE: 2017/05/10 18:13:26 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 18:13:26 QuestionList.go:18: fundamental
TRACE: 2017/05/10 18:13:26 QuestionList.go:19: GDDzRLaZMapjuULqfKeB
TRACE: 2017/05/10 18:13:26 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 18:13:26 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 18:13:26 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 18:13:26 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 18:13:28 authenticatetokenimpl.go:47: GDDzRLaZMapjuULqfKeB
TRACE: 2017/05/10 18:13:28 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 18:13:28 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 18:13:30 authenticatetokenimpl.go:51: GDDzRLaZMapjuULqfKeB
TRACE: 2017/05/10 18:13:30 authenticatetokenimpl.go:59: Type is GDDzRLaZMapjuULqfKeB
TRACE: 2017/05/10 18:13:30 aunthenticate.go:42: 2017-05-10 18:13:30
TRACE: 2017/05/10 18:13:30 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 18:13:32 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 18:13:32 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 18:13:34 authenticatetokenimpl.go:30: {0xc042148d90 0xc04245d260}
TRACE: 2017/05/10 18:13:34 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 18:13:34 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 18:13:34 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 18:13:34 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 18:13:34 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 18:13:34 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 18:13:34 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 18:13:36 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0424584e0 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 18:13:38 questionimpl.go:30: &{0xc0421beaf0 0x718ea0 0xc0423c2a60 false [] <nil> 0xc042326db0}
TRACE: 2017/05/10 18:13:48 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/10 18:13:48 AnswerList.go:23: [{0 2 } {0 9 } {0 10 } {0 6 } {0 8 } {0 5 } {0 3 } {0 1 } {0 7 } {0 4 }]
TRACE: 2017/05/10 18:13:48 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/10 18:13:48 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/10 18:13:48 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/10 18:13:48 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/10 18:13:48 CalculateScore.go:30: answerList [{0 2 } {0 9 } {0 10 } {0 6 } {0 8 } {0 5 } {0 3 } {0 1 } {0 7 } {0 4 }]
TRACE: 2017/05/10 18:13:48 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:13:48 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:13:50 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:13:50 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:13:52 questionimpl.go:108: Type is c
TRACE: 2017/05/10 18:13:52 questionimpl.go:111: correct Answer fir ID 2 c
TRACE: 2017/05/10 18:13:52 CalculateScore.go:39: Binomial took %s 3.9707057s
TRACE: 2017/05/10 18:13:52 CalculateScore.go:41: actual vs correct  c
TRACE: 2017/05/10 18:13:52 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:13:52 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:13:54 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:13:54 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:13:56 questionimpl.go:108: Type is a long running background process
TRACE: 2017/05/10 18:13:56 questionimpl.go:111: correct Answer fir ID 9 a long running background process
TRACE: 2017/05/10 18:13:56 CalculateScore.go:39: Binomial took %s 3.9387111s
TRACE: 2017/05/10 18:13:56 CalculateScore.go:41: actual vs correct  a long running background process
TRACE: 2017/05/10 18:13:56 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:13:56 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:13:58 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:13:58 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:14:00 questionimpl.go:108: Type is has to implement all method defination from the interface
TRACE: 2017/05/10 18:14:00 questionimpl.go:111: correct Answer fir ID 10 has to implement all method defination from the interface
TRACE: 2017/05/10 18:14:00 CalculateScore.go:39: Binomial took %s 3.8508084s
TRACE: 2017/05/10 18:14:00 CalculateScore.go:41: actual vs correct  has to implement all method defination from the interface
TRACE: 2017/05/10 18:14:00 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:14:00 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:14:02 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:14:02 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:14:03 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 18:14:03 QuestionList.go:18: fundamental
TRACE: 2017/05/10 18:14:03 QuestionList.go:19: GDDzRLaZMapjuULqfKeB
TRACE: 2017/05/10 18:14:03 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 18:14:03 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 18:14:03 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 18:14:03 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 18:14:04 questionimpl.go:108: Type is stack
TRACE: 2017/05/10 18:14:04 questionimpl.go:111: correct Answer fir ID 6 stack
TRACE: 2017/05/10 18:14:04 CalculateScore.go:39: Binomial took %s 3.6873062s
TRACE: 2017/05/10 18:14:04 CalculateScore.go:41: actual vs correct  stack
TRACE: 2017/05/10 18:14:04 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:14:04 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:14:05 authenticatetokenimpl.go:47: GDDzRLaZMapjuULqfKeB
TRACE: 2017/05/10 18:14:05 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 18:14:05 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 18:14:06 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:14:06 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:14:07 authenticatetokenimpl.go:51: GDDzRLaZMapjuULqfKeB
TRACE: 2017/05/10 18:14:07 authenticatetokenimpl.go:59: Type is GDDzRLaZMapjuULqfKeB
TRACE: 2017/05/10 18:14:07 aunthenticate.go:42: 2017-05-10 18:14:07
TRACE: 2017/05/10 18:14:07 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 18:14:07 questionimpl.go:108: Type is shows path of current directory
TRACE: 2017/05/10 18:14:07 questionimpl.go:111: correct Answer fir ID 8 shows path of current directory
TRACE: 2017/05/10 18:14:07 CalculateScore.go:39: Binomial took %s 3.6016287s
TRACE: 2017/05/10 18:14:07 CalculateScore.go:41: actual vs correct  shows path of current directory
TRACE: 2017/05/10 18:14:07 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:14:07 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:14:09 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 18:14:09 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 18:14:09 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:14:09 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:14:11 authenticatetokenimpl.go:30: {0xc04211c540 0xc0421e3520}
TRACE: 2017/05/10 18:14:11 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 18:14:11 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 18:14:11 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 18:14:11 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 18:14:11 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 18:14:11 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 18:14:11 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 18:14:11 questionimpl.go:108: Type is a method that calls itself
TRACE: 2017/05/10 18:14:11 questionimpl.go:111: correct Answer fir ID 5 a method that calls itself
TRACE: 2017/05/10 18:14:11 CalculateScore.go:39: Binomial took %s 3.5817347s
TRACE: 2017/05/10 18:14:11 CalculateScore.go:41: actual vs correct  a method that calls itself
TRACE: 2017/05/10 18:14:11 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:14:11 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:14:13 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc04204a000 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 18:14:13 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:14:13 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:14:15 questionimpl.go:30: &{0xc04211cbd0 0x718ea0 0xc0420092c0 false [] <nil> 0xc04237ede0}
TRACE: 2017/05/10 18:14:15 questionimpl.go:108: Type is method overriding
TRACE: 2017/05/10 18:14:15 questionimpl.go:111: correct Answer fir ID 3 method overriding
TRACE: 2017/05/10 18:14:15 CalculateScore.go:39: Binomial took %s 3.7439599s
TRACE: 2017/05/10 18:14:15 CalculateScore.go:41: actual vs correct  method overriding
TRACE: 2017/05/10 18:14:15 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:14:15 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:14:17 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:14:17 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:14:18 questionimpl.go:108: Type is both
TRACE: 2017/05/10 18:14:18 questionimpl.go:111: correct Answer fir ID 1 both
TRACE: 2017/05/10 18:14:18 CalculateScore.go:39: Binomial took %s 3.5183s
TRACE: 2017/05/10 18:14:18 CalculateScore.go:41: actual vs correct  both
TRACE: 2017/05/10 18:14:18 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:14:18 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:14:20 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:14:20 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:14:22 questionimpl.go:108: Type is big O notation
TRACE: 2017/05/10 18:14:22 questionimpl.go:111: correct Answer fir ID 7 big O notation
TRACE: 2017/05/10 18:14:22 CalculateScore.go:39: Binomial took %s 3.9884434s
TRACE: 2017/05/10 18:14:22 CalculateScore.go:41: actual vs correct  big O notation
TRACE: 2017/05/10 18:14:22 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:14:22 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:14:24 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:14:24 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:14:26 questionimpl.go:108: Type is wraping up properties and methods
TRACE: 2017/05/10 18:14:26 questionimpl.go:111: correct Answer fir ID 4 wraping up properties and methods
TRACE: 2017/05/10 18:14:26 CalculateScore.go:39: Binomial took %s 3.5269709s
TRACE: 2017/05/10 18:14:26 CalculateScore.go:41: actual vs correct  wraping up properties and methods
TRACE: 2017/05/10 18:14:26 CalculateScore.go:55: Binomial took %s 37.4105705s
TRACE: 2017/05/10 18:15:07 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 18:15:07 QuestionList.go:18: fundamental
TRACE: 2017/05/10 18:15:07 QuestionList.go:19: GDDzRLaZMapjuULqfKeB
TRACE: 2017/05/10 18:15:07 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 18:15:07 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 18:15:07 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 18:15:07 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 18:15:09 authenticatetokenimpl.go:47: GDDzRLaZMapjuULqfKeB
TRACE: 2017/05/10 18:15:09 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 18:15:09 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 18:15:10 authenticatetokenimpl.go:51: GDDzRLaZMapjuULqfKeB
TRACE: 2017/05/10 18:15:10 authenticatetokenimpl.go:59: Type is GDDzRLaZMapjuULqfKeB
TRACE: 2017/05/10 18:15:10 aunthenticate.go:42: 2017-05-10 18:15:10
TRACE: 2017/05/10 18:15:10 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 18:15:13 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 18:15:13 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 18:15:14 authenticatetokenimpl.go:30: {0xc04211dce0 0xc042313140}
TRACE: 2017/05/10 18:15:14 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 18:15:14 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 18:15:14 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 18:15:14 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 18:15:14 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 18:15:14 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 18:15:14 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 18:15:16 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0424c19e0 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 18:15:18 questionimpl.go:30: &{0xc042129260 0x718ea0 0xc04227f0e0 false [] <nil> 0xc042285d10}
TRACE: 2017/05/10 18:16:11 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 18:16:11 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 18:16:11 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/10 18:16:11 Login.go:16: entering manager.login
TRACE: 2017/05/10 18:16:11 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 18:16:11 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 18:16:11 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 18:16:15 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/10 18:16:15 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/10 18:16:15 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/10 18:16:17 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/10 18:16:17 loginimpl.go:81: executing query.....
TRACE: 2017/05/10 18:16:19 loginimpl.go:93: {0xc04211c2a0 0xc042136b70}
TRACE: 2017/05/10 18:16:19 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/10 18:16:19 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/10 18:16:19 loginimpl.go:16: exntering in SaveToken() function {0 2 cKwZZvleIysLdhoqxKmV 2017-05-10 18:16:15.5557922 +0530 IST}
TRACE: 2017/05/10 18:16:19 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/10 18:16:21 loginimpl.go:20: token inserted
TRACE: 2017/05/10 18:16:21 loginimpl.go:21: {0 2 cKwZZvleIysLdhoqxKmV 2017-05-10 18:16:15.5557922 +0530 IST}
TRACE: 2017/05/10 18:16:22 loginimpl.go:33: {0xc0421be7e0 0xc042045b50}
TRACE: 2017/05/10 18:16:22 Login.go:48: {2 rakesh cKwZZvleIysLdhoqxKmV user}
TRACE: 2017/05/10 18:16:36 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 18:16:36 QuestionList.go:18: fundamental
TRACE: 2017/05/10 18:16:36 QuestionList.go:19: cKwZZvleIysLdhoqxKmV
TRACE: 2017/05/10 18:16:36 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 18:16:36 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 18:16:36 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 18:16:36 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 18:16:38 authenticatetokenimpl.go:47: cKwZZvleIysLdhoqxKmV
TRACE: 2017/05/10 18:16:38 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 18:16:38 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 18:16:40 authenticatetokenimpl.go:51: cKwZZvleIysLdhoqxKmV
TRACE: 2017/05/10 18:16:40 authenticatetokenimpl.go:59: Type is cKwZZvleIysLdhoqxKmV
TRACE: 2017/05/10 18:16:40 aunthenticate.go:42: 2017-05-10 18:16:40
TRACE: 2017/05/10 18:16:40 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 18:16:42 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 18:16:42 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 18:16:44 authenticatetokenimpl.go:30: {0xc0421081c0 0xc042004240}
TRACE: 2017/05/10 18:16:44 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 18:16:44 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 18:16:44 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 18:16:44 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 18:16:44 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 18:16:44 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 18:16:44 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 18:16:46 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc04233d1a0 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 18:16:48 questionimpl.go:30: &{0xc0421bec40 0x718ea0 0xc042299060 false [] <nil> 0xc042284f30}
TRACE: 2017/05/10 18:17:19 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/10 18:17:19 AnswerList.go:23: [{0 9 } {0 4 a way of delivering a class from another class } {0 5 a method that loops through a list} {0 8 shows path of current directory} {0 1 both } {0 2 python} {0 3 method overloading} {0 10 has to implement all method defination from the interface} {0 6 queue} {0 7 unit testing}]
TRACE: 2017/05/10 18:17:19 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/10 18:17:19 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/10 18:17:19 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/10 18:17:19 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/10 18:17:19 CalculateScore.go:30: answerList [{0 9 } {0 4 a way of delivering a class from another class } {0 5 a method that loops through a list} {0 8 shows path of current directory} {0 1 both } {0 2 python} {0 3 method overloading} {0 10 has to implement all method defination from the interface} {0 6 queue} {0 7 unit testing}]
TRACE: 2017/05/10 18:17:19 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:17:19 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:17:21 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:17:21 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:17:23 questionimpl.go:108: Type is a long running background process
TRACE: 2017/05/10 18:17:23 questionimpl.go:111: correct Answer fir ID 9 a long running background process
TRACE: 2017/05/10 18:17:23 CalculateScore.go:39: Binomial took %s 3.9781668s
TRACE: 2017/05/10 18:17:23 CalculateScore.go:41: actual vs correct  a long running background process
TRACE: 2017/05/10 18:17:23 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:17:23 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:17:25 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:17:25 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:17:27 questionimpl.go:108: Type is wraping up properties and methods
TRACE: 2017/05/10 18:17:27 questionimpl.go:111: correct Answer fir ID 4 wraping up properties and methods
TRACE: 2017/05/10 18:17:27 CalculateScore.go:39: Binomial took %s 3.6850128s
TRACE: 2017/05/10 18:17:27 CalculateScore.go:41: actual vs correct a way of delivering a class from another class  wraping up properties and methods
TRACE: 2017/05/10 18:17:27 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:17:27 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:17:29 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:17:29 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:17:30 questionimpl.go:108: Type is a method that calls itself
TRACE: 2017/05/10 18:17:30 questionimpl.go:111: correct Answer fir ID 5 a method that calls itself
TRACE: 2017/05/10 18:17:30 CalculateScore.go:39: Binomial took %s 3.677552s
TRACE: 2017/05/10 18:17:30 CalculateScore.go:41: actual vs correct a method that loops through a list a method that calls itself
TRACE: 2017/05/10 18:17:30 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:17:30 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:17:33 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:17:33 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:17:33 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 18:17:33 QuestionList.go:18: java
TRACE: 2017/05/10 18:17:33 QuestionList.go:19: cKwZZvleIysLdhoqxKmV
TRACE: 2017/05/10 18:17:33 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 18:17:33 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 18:17:33 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 18:17:33 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 18:17:34 questionimpl.go:108: Type is shows path of current directory
TRACE: 2017/05/10 18:17:34 questionimpl.go:111: correct Answer fir ID 8 shows path of current directory
TRACE: 2017/05/10 18:17:34 CalculateScore.go:39: Binomial took %s 3.8916993s
TRACE: 2017/05/10 18:17:34 CalculateScore.go:41: actual vs correct shows path of current directory shows path of current directory
TRACE: 2017/05/10 18:17:34 CalculateScore.go:47: 263409560461970212832400
TRACE: 2017/05/10 18:17:35 authenticatetokenimpl.go:47: cKwZZvleIysLdhoqxKmV
TRACE: 2017/05/10 18:17:35 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 18:17:35 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 18:17:35 CalculateScore.go:50: Binomial took %s 1.0013889s
TRACE: 2017/05/10 18:17:35 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:17:35 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:17:37 authenticatetokenimpl.go:51: cKwZZvleIysLdhoqxKmV
TRACE: 2017/05/10 18:17:37 authenticatetokenimpl.go:59: Type is cKwZZvleIysLdhoqxKmV
TRACE: 2017/05/10 18:17:37 aunthenticate.go:42: 2017-05-10 18:17:37
TRACE: 2017/05/10 18:17:37 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 18:17:37 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:17:37 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:17:39 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 18:17:39 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 18:17:39 questionimpl.go:108: Type is both
TRACE: 2017/05/10 18:17:39 questionimpl.go:111: correct Answer fir ID 1 both
TRACE: 2017/05/10 18:17:39 CalculateScore.go:39: Binomial took %s 3.7173382s
TRACE: 2017/05/10 18:17:39 CalculateScore.go:41: actual vs correct both  both
TRACE: 2017/05/10 18:17:39 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:17:39 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:17:40 authenticatetokenimpl.go:30: {0xc0421291f0 0xc0423c0450}
TRACE: 2017/05/10 18:17:40 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 18:17:40 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 18:17:40 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 18:17:40 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 18:17:40 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 18:17:40 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 18:17:40 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 18:17:41 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:17:41 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:17:42 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc042458420 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 18:17:43 questionimpl.go:108: Type is c
TRACE: 2017/05/10 18:17:43 questionimpl.go:111: correct Answer fir ID 2 c
TRACE: 2017/05/10 18:17:43 CalculateScore.go:39: Binomial took %s 3.6326043s
TRACE: 2017/05/10 18:17:43 CalculateScore.go:41: actual vs correct python c
TRACE: 2017/05/10 18:17:43 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:17:43 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:17:44 questionimpl.go:30: &{0xc0421093b0 0x718ea0 0xc0423805c0 false [] <nil> 0xc0422fe540}
TRACE: 2017/05/10 18:17:45 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:17:45 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:17:46 questionimpl.go:108: Type is method overriding
TRACE: 2017/05/10 18:17:46 questionimpl.go:111: correct Answer fir ID 3 method overriding
TRACE: 2017/05/10 18:17:46 CalculateScore.go:39: Binomial took %s 3.4999819s
TRACE: 2017/05/10 18:17:46 CalculateScore.go:41: actual vs correct method overloading method overriding
TRACE: 2017/05/10 18:17:46 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:17:46 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:17:48 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:17:48 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:17:50 questionimpl.go:108: Type is has to implement all method defination from the interface
TRACE: 2017/05/10 18:17:50 questionimpl.go:111: correct Answer fir ID 10 has to implement all method defination from the interface
TRACE: 2017/05/10 18:17:50 CalculateScore.go:39: Binomial took %s 3.8632659s
TRACE: 2017/05/10 18:17:50 CalculateScore.go:41: actual vs correct has to implement all method defination from the interface has to implement all method defination from the interface
TRACE: 2017/05/10 18:17:50 CalculateScore.go:47: 263409560461970212832400
TRACE: 2017/05/10 18:17:51 CalculateScore.go:50: Binomial took %s 1.0011953s
TRACE: 2017/05/10 18:17:51 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:17:51 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:17:53 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:17:53 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:17:55 questionimpl.go:108: Type is stack
TRACE: 2017/05/10 18:17:55 questionimpl.go:111: correct Answer fir ID 6 stack
TRACE: 2017/05/10 18:17:55 CalculateScore.go:39: Binomial took %s 3.4802336s
TRACE: 2017/05/10 18:17:55 CalculateScore.go:41: actual vs correct queue stack
TRACE: 2017/05/10 18:17:55 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:17:55 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:17:57 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:17:57 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:17:58 questionimpl.go:108: Type is big O notation
TRACE: 2017/05/10 18:17:58 questionimpl.go:111: correct Answer fir ID 7 big O notation
TRACE: 2017/05/10 18:17:58 CalculateScore.go:39: Binomial took %s 3.7594666s
TRACE: 2017/05/10 18:17:58 CalculateScore.go:41: actual vs correct unit testing big O notation
TRACE: 2017/05/10 18:17:58 CalculateScore.go:55: Binomial took %s 39.1889061s
TRACE: 2017/05/10 18:19:17 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 18:19:17 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 18:19:17 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/10 18:19:17 Login.go:16: entering manager.login
TRACE: 2017/05/10 18:19:17 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 18:19:17 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 18:19:17 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 18:19:20 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/10 18:19:20 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/10 18:19:20 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/10 18:19:23 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/10 18:19:23 loginimpl.go:81: executing query.....
TRACE: 2017/05/10 18:19:24 loginimpl.go:93: {0xc0421280e0 0xc0421e2300}
TRACE: 2017/05/10 18:19:24 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/10 18:19:24 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/10 18:19:24 loginimpl.go:16: exntering in SaveToken() function {0 2 nuJSwWLiLlUPezbVFgRk 2017-05-10 18:19:20.9714641 +0530 IST}
TRACE: 2017/05/10 18:19:24 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/10 18:19:26 loginimpl.go:20: token inserted
TRACE: 2017/05/10 18:19:26 loginimpl.go:21: {0 2 nuJSwWLiLlUPezbVFgRk 2017-05-10 18:19:20.9714641 +0530 IST}
TRACE: 2017/05/10 18:19:28 loginimpl.go:33: {0xc042128690 0xc0421e2bf0}
TRACE: 2017/05/10 18:19:28 Login.go:48: {2 rakesh nuJSwWLiLlUPezbVFgRk user}
TRACE: 2017/05/10 18:19:41 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 18:19:41 QuestionList.go:18: language
TRACE: 2017/05/10 18:19:41 QuestionList.go:19: nuJSwWLiLlUPezbVFgRk
TRACE: 2017/05/10 18:19:41 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 18:19:41 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 18:19:41 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 18:19:41 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 18:19:43 authenticatetokenimpl.go:47: nuJSwWLiLlUPezbVFgRk
TRACE: 2017/05/10 18:19:43 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 18:19:43 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 18:19:45 authenticatetokenimpl.go:51: nuJSwWLiLlUPezbVFgRk
TRACE: 2017/05/10 18:19:45 authenticatetokenimpl.go:59: Type is nuJSwWLiLlUPezbVFgRk
TRACE: 2017/05/10 18:19:45 aunthenticate.go:42: 2017-05-10 18:19:45
TRACE: 2017/05/10 18:19:45 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 18:19:47 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 18:19:47 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 18:19:49 authenticatetokenimpl.go:30: {0xc04211c7e0 0xc042107260}
TRACE: 2017/05/10 18:19:49 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 18:19:49 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 18:19:49 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 18:19:49 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 18:19:49 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 18:19:49 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 18:19:49 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 18:19:51 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc04233d620 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 18:19:53 questionimpl.go:30: &{0xc042108b60 0x718ea0 0xc042479d80 false [] <nil> 0xc04237eb10}
TRACE: 2017/05/10 18:20:08 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/10 18:20:08 AnswerList.go:23: [{0 42 } {0 43 has agreed to} {0 37 very busy} {0 40 diamond} {0 41 tractability} {0 36 } {0 38 dental plate} {0 39 gist,ambiguity}]
TRACE: 2017/05/10 18:20:08 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/10 18:20:08 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/10 18:20:08 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/10 18:20:08 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/10 18:20:08 CalculateScore.go:30: answerList [{0 42 } {0 43 has agreed to} {0 37 very busy} {0 40 diamond} {0 41 tractability} {0 36 } {0 38 dental plate} {0 39 gist,ambiguity}]
TRACE: 2017/05/10 18:20:08 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:20:08 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:20:10 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:20:10 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:20:11 questionimpl.go:108: Type is infallible,mythological
TRACE: 2017/05/10 18:20:11 questionimpl.go:111: correct Answer fir ID 42 infallible,mythological
TRACE: 2017/05/10 18:20:11 CalculateScore.go:39: Binomial took %s 3.6154328s
TRACE: 2017/05/10 18:20:11 CalculateScore.go:41: actual vs correct  infallible,mythological
TRACE: 2017/05/10 18:20:11 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:20:11 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:20:13 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:20:13 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:20:15 questionimpl.go:108: Type is has agreed to
TRACE: 2017/05/10 18:20:15 questionimpl.go:111: correct Answer fir ID 43 has agreed to
TRACE: 2017/05/10 18:20:15 CalculateScore.go:39: Binomial took %s 3.5585328s
TRACE: 2017/05/10 18:20:15 CalculateScore.go:41: actual vs correct has agreed to has agreed to
TRACE: 2017/05/10 18:20:15 CalculateScore.go:47: 263409560461970212832400
TRACE: 2017/05/10 18:20:16 CalculateScore.go:50: Binomial took %s 1.0013766s
TRACE: 2017/05/10 18:20:16 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:20:16 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:20:18 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:20:18 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:20:20 questionimpl.go:108: Type is very busy
TRACE: 2017/05/10 18:20:20 questionimpl.go:111: correct Answer fir ID 37 very busy
TRACE: 2017/05/10 18:20:20 CalculateScore.go:39: Binomial took %s 3.8600583s
TRACE: 2017/05/10 18:20:20 CalculateScore.go:41: actual vs correct very busy very busy
TRACE: 2017/05/10 18:20:20 CalculateScore.go:47: 263409560461970212832400
TRACE: 2017/05/10 18:20:21 CalculateScore.go:50: Binomial took %s 1.0020508s
TRACE: 2017/05/10 18:20:21 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:20:21 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:20:23 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:20:23 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:20:24 questionimpl.go:108: Type is gold
TRACE: 2017/05/10 18:20:24 questionimpl.go:111: correct Answer fir ID 40 gold
TRACE: 2017/05/10 18:20:24 CalculateScore.go:39: Binomial took %s 3.5112058s
TRACE: 2017/05/10 18:20:24 CalculateScore.go:41: actual vs correct diamond gold
TRACE: 2017/05/10 18:20:24 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:20:24 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:20:26 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:20:26 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:20:28 questionimpl.go:108: Type is tractabilitytractability
TRACE: 2017/05/10 18:20:28 questionimpl.go:111: correct Answer fir ID 41 tractabilitytractability
TRACE: 2017/05/10 18:20:28 CalculateScore.go:39: Binomial took %s 4.0106299s
TRACE: 2017/05/10 18:20:28 CalculateScore.go:41: actual vs correct tractability tractabilitytractability
TRACE: 2017/05/10 18:20:28 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:20:28 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:20:30 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:20:30 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:20:32 questionimpl.go:108: Type is tormented
TRACE: 2017/05/10 18:20:32 questionimpl.go:111: correct Answer fir ID 36 tormented
TRACE: 2017/05/10 18:20:32 CalculateScore.go:39: Binomial took %s 3.6943776s
TRACE: 2017/05/10 18:20:32 CalculateScore.go:41: actual vs correct  tormented
TRACE: 2017/05/10 18:20:32 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:20:32 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:20:34 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:20:34 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:20:36 questionimpl.go:108: Type is written contract
TRACE: 2017/05/10 18:20:36 questionimpl.go:111: correct Answer fir ID 38 written contract
TRACE: 2017/05/10 18:20:36 CalculateScore.go:39: Binomial took %s 3.6001726s
TRACE: 2017/05/10 18:20:36 CalculateScore.go:41: actual vs correct dental plate written contract
TRACE: 2017/05/10 18:20:36 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:20:36 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:20:38 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:20:38 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:20:39 questionimpl.go:108: Type is gist,ambiguity
TRACE: 2017/05/10 18:20:39 questionimpl.go:111: correct Answer fir ID 39 gist,ambiguity
TRACE: 2017/05/10 18:20:39 CalculateScore.go:39: Binomial took %s 3.6644744s
TRACE: 2017/05/10 18:20:39 CalculateScore.go:41: actual vs correct gist,ambiguity gist,ambiguity
TRACE: 2017/05/10 18:20:39 CalculateScore.go:47: 263409560461970212832400
TRACE: 2017/05/10 18:20:40 CalculateScore.go:50: Binomial took %s 1.0020812s
TRACE: 2017/05/10 18:20:40 CalculateScore.go:55: Binomial took %s 32.5218804s
TRACE: 2017/05/10 18:20:58 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 18:20:58 QuestionList.go:18: fundamental
TRACE: 2017/05/10 18:20:58 QuestionList.go:19: nuJSwWLiLlUPezbVFgRk
TRACE: 2017/05/10 18:20:58 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 18:20:58 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 18:20:58 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 18:20:58 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 18:20:59 authenticatetokenimpl.go:47: nuJSwWLiLlUPezbVFgRk
TRACE: 2017/05/10 18:20:59 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 18:20:59 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 18:21:01 authenticatetokenimpl.go:51: nuJSwWLiLlUPezbVFgRk
TRACE: 2017/05/10 18:21:01 authenticatetokenimpl.go:59: Type is nuJSwWLiLlUPezbVFgRk
TRACE: 2017/05/10 18:21:01 aunthenticate.go:42: 2017-05-10 18:21:01
TRACE: 2017/05/10 18:21:01 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 18:21:03 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 18:21:03 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 18:21:05 authenticatetokenimpl.go:30: {0xc0421be1c0 0xc0421367b0}
TRACE: 2017/05/10 18:21:05 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 18:21:05 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 18:21:05 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 18:21:05 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 18:21:05 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 18:21:05 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 18:21:05 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 18:21:07 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0424c2180 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 18:21:09 questionimpl.go:30: &{0xc042108150 0x718ea0 0xc042478a80 false [] <nil> 0xc042404240}
TRACE: 2017/05/10 18:24:32 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 18:24:32 QuestionList.go:18: fundamental
TRACE: 2017/05/10 18:24:32 QuestionList.go:19: nuJSwWLiLlUPezbVFgRk
TRACE: 2017/05/10 18:24:32 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 18:24:32 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 18:24:32 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 18:24:32 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 18:24:34 authenticatetokenimpl.go:47: nuJSwWLiLlUPezbVFgRk
TRACE: 2017/05/10 18:24:34 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 18:24:34 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 18:24:35 authenticatetokenimpl.go:51: nuJSwWLiLlUPezbVFgRk
TRACE: 2017/05/10 18:24:35 authenticatetokenimpl.go:59: Type is nuJSwWLiLlUPezbVFgRk
TRACE: 2017/05/10 18:24:35 aunthenticate.go:42: 2017-05-10 18:24:35
TRACE: 2017/05/10 18:24:35 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 18:24:38 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 18:24:38 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 18:24:39 authenticatetokenimpl.go:30: {0xc04211c070 0xc0421375c0}
TRACE: 2017/05/10 18:24:39 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 18:24:39 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 18:24:39 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 18:24:39 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 18:24:39 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 18:24:39 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 18:24:39 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 18:24:42 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0424d6e40 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 18:24:44 questionimpl.go:30: &{0xc04211c1c0 0x718ea0 0xc042369320 false [] <nil> 0xc04237e210}
TRACE: 2017/05/10 18:25:39 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 18:25:39 QuestionList.go:18: fundamental
TRACE: 2017/05/10 18:25:39 QuestionList.go:19: nuJSwWLiLlUPezbVFgRk
TRACE: 2017/05/10 18:25:39 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 18:25:39 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 18:25:39 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 18:25:39 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 18:25:41 authenticatetokenimpl.go:47: nuJSwWLiLlUPezbVFgRk
TRACE: 2017/05/10 18:25:41 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 18:25:41 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 18:25:43 authenticatetokenimpl.go:51: nuJSwWLiLlUPezbVFgRk
TRACE: 2017/05/10 18:25:43 authenticatetokenimpl.go:59: Type is nuJSwWLiLlUPezbVFgRk
TRACE: 2017/05/10 18:25:43 aunthenticate.go:42: 2017-05-10 18:25:43
TRACE: 2017/05/10 18:25:43 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 18:25:45 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 18:25:45 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 18:25:47 authenticatetokenimpl.go:30: {0xc042128150 0xc0421e2dd0}
TRACE: 2017/05/10 18:25:47 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 18:25:47 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 18:25:47 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 18:25:47 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 18:25:47 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 18:25:47 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 18:25:47 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 18:25:49 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc042476660 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 18:25:51 questionimpl.go:30: &{0xc0421be0e0 0x718ea0 0xc042368200 false [] <nil> 0xc04237e150}
TRACE: 2017/05/10 18:26:06 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 18:26:06 QuestionList.go:18: language
TRACE: 2017/05/10 18:26:06 QuestionList.go:19: nuJSwWLiLlUPezbVFgRk
TRACE: 2017/05/10 18:26:06 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 18:26:06 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 18:26:06 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 18:26:06 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 18:26:08 authenticatetokenimpl.go:47: nuJSwWLiLlUPezbVFgRk
TRACE: 2017/05/10 18:26:08 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 18:26:08 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 18:26:10 authenticatetokenimpl.go:51: nuJSwWLiLlUPezbVFgRk
TRACE: 2017/05/10 18:26:10 authenticatetokenimpl.go:59: Type is nuJSwWLiLlUPezbVFgRk
TRACE: 2017/05/10 18:26:10 aunthenticate.go:42: 2017-05-10 18:26:10
TRACE: 2017/05/10 18:26:10 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 18:26:12 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 18:26:12 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 18:26:14 authenticatetokenimpl.go:30: {0xc0421be5b0 0xc042136c40}
TRACE: 2017/05/10 18:26:14 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 18:26:14 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 18:26:14 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 18:26:14 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 18:26:14 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 18:26:14 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 18:26:14 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 18:26:16 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc04233d500 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 18:26:18 questionimpl.go:30: &{0xc0421be700 0x718ea0 0xc0421d6e80 false [] <nil> 0xc04237f440}
TRACE: 2017/05/10 18:29:20 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 18:29:20 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 18:29:20 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/10 18:29:20 Login.go:16: entering manager.login
TRACE: 2017/05/10 18:29:20 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 18:29:20 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 18:29:20 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 18:29:24 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/10 18:29:24 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/10 18:29:24 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/10 18:29:26 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/10 18:29:26 loginimpl.go:81: executing query.....
TRACE: 2017/05/10 18:29:28 loginimpl.go:93: {0xc0421be000 0xc0421e20d0}
TRACE: 2017/05/10 18:29:28 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/10 18:29:28 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/10 18:29:28 loginimpl.go:16: exntering in SaveToken() function {0 2 hVOEYgOTcVgZrEVRhtPP 2017-05-10 18:29:24.3899545 +0530 IST}
TRACE: 2017/05/10 18:29:28 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/10 18:29:30 loginimpl.go:20: token inserted
TRACE: 2017/05/10 18:29:30 loginimpl.go:21: {0 2 hVOEYgOTcVgZrEVRhtPP 2017-05-10 18:29:24.3899545 +0530 IST}
TRACE: 2017/05/10 18:29:32 loginimpl.go:33: {0xc04211c000 0xc04245c130}
TRACE: 2017/05/10 18:29:32 Login.go:48: {2 rakesh hVOEYgOTcVgZrEVRhtPP user}
TRACE: 2017/05/10 18:29:43 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 18:29:43 QuestionList.go:18: fundamental
TRACE: 2017/05/10 18:29:43 QuestionList.go:19: hVOEYgOTcVgZrEVRhtPP
TRACE: 2017/05/10 18:29:43 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 18:29:43 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 18:29:43 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 18:29:43 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 18:29:45 authenticatetokenimpl.go:47: hVOEYgOTcVgZrEVRhtPP
TRACE: 2017/05/10 18:29:45 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 18:29:45 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 18:29:47 authenticatetokenimpl.go:51: hVOEYgOTcVgZrEVRhtPP
TRACE: 2017/05/10 18:29:47 authenticatetokenimpl.go:59: Type is hVOEYgOTcVgZrEVRhtPP
TRACE: 2017/05/10 18:29:47 aunthenticate.go:42: 2017-05-10 18:29:47
TRACE: 2017/05/10 18:29:47 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 18:29:49 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 18:29:49 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 18:29:51 authenticatetokenimpl.go:30: {0xc04211c380 0xc04245c7a0}
TRACE: 2017/05/10 18:29:51 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 18:29:51 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 18:29:51 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 18:29:51 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 18:29:51 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 18:29:51 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 18:29:51 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 18:29:53 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0421c0060 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 18:29:55 questionimpl.go:30: &{0xc0421be8c0 0x718ea0 0xc042368d40 false [] <nil> 0xc04237e7b0}
TRACE: 2017/05/10 18:30:34 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/10 18:30:34 AnswerList.go:23: [{0 6 queue} {0 1 monitor} {0 9 a long running background process} {0 10 has to implement none of the methods from interface} {0 2 c} {0 4 wraping up properties and method} {0 8 } {0 5 a method that calls itself} {0 7 big O notation} {0 3 method overloading}]
TRACE: 2017/05/10 18:30:34 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/10 18:30:34 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/10 18:30:34 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/10 18:30:34 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/10 18:30:34 CalculateScore.go:30: answerList [{0 6 queue} {0 1 monitor} {0 9 a long running background process} {0 10 has to implement none of the methods from interface} {0 2 c} {0 4 wraping up properties and method} {0 8 } {0 5 a method that calls itself} {0 7 big O notation} {0 3 method overloading}]
TRACE: 2017/05/10 18:30:34 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:30:34 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:30:36 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:30:36 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:30:38 questionimpl.go:108: Type is stack
TRACE: 2017/05/10 18:30:38 questionimpl.go:111: correct Answer fir ID 6 stack
TRACE: 2017/05/10 18:30:38 CalculateScore.go:39: Binomial took %s 3.8022717s
TRACE: 2017/05/10 18:30:38 CalculateScore.go:41: actual vs correct queue stack
TRACE: 2017/05/10 18:30:38 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:30:38 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:30:40 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:30:40 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:30:42 questionimpl.go:108: Type is both
TRACE: 2017/05/10 18:30:42 questionimpl.go:111: correct Answer fir ID 1 both
TRACE: 2017/05/10 18:30:42 CalculateScore.go:39: Binomial took %s 3.7939216s
TRACE: 2017/05/10 18:30:42 CalculateScore.go:41: actual vs correct monitor both
TRACE: 2017/05/10 18:30:42 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:30:42 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:30:44 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:30:44 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:30:46 questionimpl.go:108: Type is a long running background process
TRACE: 2017/05/10 18:30:46 questionimpl.go:111: correct Answer fir ID 9 a long running background process
TRACE: 2017/05/10 18:30:46 CalculateScore.go:39: Binomial took %s 3.8942408s
TRACE: 2017/05/10 18:30:46 CalculateScore.go:41: actual vs correct a long running background process a long running background process
TRACE: 2017/05/10 18:30:46 CalculateScore.go:47: 263409560461970212832400
TRACE: 2017/05/10 18:30:47 CalculateScore.go:50: Binomial took %s 1.0012214s
TRACE: 2017/05/10 18:30:47 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:30:47 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:30:49 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:30:49 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:30:51 questionimpl.go:108: Type is has to implement all method defination from the interface
TRACE: 2017/05/10 18:30:51 questionimpl.go:111: correct Answer fir ID 10 has to implement all method defination from the interface
TRACE: 2017/05/10 18:30:51 CalculateScore.go:39: Binomial took %s 3.989968s
TRACE: 2017/05/10 18:30:51 CalculateScore.go:41: actual vs correct has to implement none of the methods from interface has to implement all method defination from the interface
TRACE: 2017/05/10 18:30:51 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:30:51 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:30:53 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:30:53 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:30:55 questionimpl.go:108: Type is c
TRACE: 2017/05/10 18:30:55 questionimpl.go:111: correct Answer fir ID 2 c
TRACE: 2017/05/10 18:30:55 CalculateScore.go:39: Binomial took %s 3.9860136s
TRACE: 2017/05/10 18:30:55 CalculateScore.go:41: actual vs correct c c
TRACE: 2017/05/10 18:30:55 CalculateScore.go:47: 263409560461970212832400
TRACE: 2017/05/10 18:30:56 CalculateScore.go:50: Binomial took %s 1.0007383s
TRACE: 2017/05/10 18:30:56 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:30:56 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:30:58 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:30:58 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:30:59 questionimpl.go:108: Type is wraping up properties and methods
TRACE: 2017/05/10 18:30:59 questionimpl.go:111: correct Answer fir ID 4 wraping up properties and methods
TRACE: 2017/05/10 18:30:59 CalculateScore.go:39: Binomial took %s 3.6977024s
TRACE: 2017/05/10 18:30:59 CalculateScore.go:41: actual vs correct wraping up properties and method wraping up properties and methods
TRACE: 2017/05/10 18:30:59 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:30:59 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:31:01 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:31:01 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:31:03 questionimpl.go:108: Type is shows path of current directory
TRACE: 2017/05/10 18:31:03 questionimpl.go:111: correct Answer fir ID 8 shows path of current directory
TRACE: 2017/05/10 18:31:03 CalculateScore.go:39: Binomial took %s 3.6295887s
TRACE: 2017/05/10 18:31:03 CalculateScore.go:41: actual vs correct  shows path of current directory
TRACE: 2017/05/10 18:31:03 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:31:03 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:31:05 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:31:05 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:31:07 questionimpl.go:108: Type is a method that calls itself
TRACE: 2017/05/10 18:31:07 questionimpl.go:111: correct Answer fir ID 5 a method that calls itself
TRACE: 2017/05/10 18:31:07 CalculateScore.go:39: Binomial took %s 4.0190342s
TRACE: 2017/05/10 18:31:07 CalculateScore.go:41: actual vs correct a method that calls itself a method that calls itself
TRACE: 2017/05/10 18:31:07 CalculateScore.go:47: 263409560461970212832400
TRACE: 2017/05/10 18:31:08 CalculateScore.go:50: Binomial took %s 1.0003109s
TRACE: 2017/05/10 18:31:08 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:31:08 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:31:10 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:31:10 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:31:12 questionimpl.go:108: Type is big O notation
TRACE: 2017/05/10 18:31:12 questionimpl.go:111: correct Answer fir ID 7 big O notation
TRACE: 2017/05/10 18:31:12 CalculateScore.go:39: Binomial took %s 3.9920241s
TRACE: 2017/05/10 18:31:12 CalculateScore.go:41: actual vs correct big O notation big O notation
TRACE: 2017/05/10 18:31:12 CalculateScore.go:47: 263409560461970212832400
TRACE: 2017/05/10 18:31:13 CalculateScore.go:50: Binomial took %s 1.0010996s
TRACE: 2017/05/10 18:31:13 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:31:13 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:31:15 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:31:15 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:31:17 questionimpl.go:108: Type is method overriding
TRACE: 2017/05/10 18:31:17 questionimpl.go:111: correct Answer fir ID 3 method overriding
TRACE: 2017/05/10 18:31:17 CalculateScore.go:39: Binomial took %s 3.9592901s
TRACE: 2017/05/10 18:31:17 CalculateScore.go:41: actual vs correct method overloading method overriding
TRACE: 2017/05/10 18:31:17 CalculateScore.go:55: Binomial took %s 42.7704074s
TRACE: 2017/05/10 18:31:27 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 18:31:27 QuestionList.go:18: java
TRACE: 2017/05/10 18:31:27 QuestionList.go:19: hVOEYgOTcVgZrEVRhtPP
TRACE: 2017/05/10 18:31:27 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 18:31:27 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 18:31:27 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 18:31:27 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 18:31:29 authenticatetokenimpl.go:47: hVOEYgOTcVgZrEVRhtPP
TRACE: 2017/05/10 18:31:29 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 18:31:29 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 18:31:31 authenticatetokenimpl.go:51: hVOEYgOTcVgZrEVRhtPP
TRACE: 2017/05/10 18:31:31 authenticatetokenimpl.go:59: Type is hVOEYgOTcVgZrEVRhtPP
TRACE: 2017/05/10 18:31:31 aunthenticate.go:42: 2017-05-10 18:31:31
TRACE: 2017/05/10 18:31:31 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 18:31:33 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 18:31:33 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 18:31:35 authenticatetokenimpl.go:30: {0xc04211c310 0xc04245c650}
TRACE: 2017/05/10 18:31:35 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 18:31:35 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 18:31:35 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 18:31:35 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 18:31:35 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 18:31:35 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 18:31:35 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 18:31:37 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0422c2480 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 18:31:39 questionimpl.go:30: &{0xc0421293b0 0x718ea0 0xc042009360 false [] <nil> 0xc0422857d0}
TRACE: 2017/05/10 18:32:05 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 18:32:05 QuestionList.go:18: language
TRACE: 2017/05/10 18:32:05 QuestionList.go:19: hVOEYgOTcVgZrEVRhtPP
TRACE: 2017/05/10 18:32:05 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 18:32:05 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 18:32:05 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 18:32:05 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 18:32:07 authenticatetokenimpl.go:47: hVOEYgOTcVgZrEVRhtPP
TRACE: 2017/05/10 18:32:07 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 18:32:07 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 18:32:09 authenticatetokenimpl.go:51: hVOEYgOTcVgZrEVRhtPP
TRACE: 2017/05/10 18:32:09 authenticatetokenimpl.go:59: Type is hVOEYgOTcVgZrEVRhtPP
TRACE: 2017/05/10 18:32:09 aunthenticate.go:42: 2017-05-10 18:32:09
TRACE: 2017/05/10 18:32:09 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 18:32:11 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 18:32:11 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 18:32:13 authenticatetokenimpl.go:30: {0xc042129a40 0xc04245d6b0}
TRACE: 2017/05/10 18:32:13 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 18:32:13 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 18:32:13 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 18:32:13 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 18:32:13 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 18:32:13 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 18:32:13 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 18:32:15 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0424e4360 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 18:32:17 questionimpl.go:30: &{0xc042129ab0 0x718ea0 0xc0424de0a0 false [] <nil> 0xc0422c53e0}
TRACE: 2017/05/10 18:33:21 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 18:33:21 QuestionList.go:18: java
TRACE: 2017/05/10 18:33:21 QuestionList.go:19: hVOEYgOTcVgZrEVRhtPP
TRACE: 2017/05/10 18:33:21 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 18:33:21 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 18:33:21 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 18:33:21 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 18:33:22 authenticatetokenimpl.go:47: hVOEYgOTcVgZrEVRhtPP
TRACE: 2017/05/10 18:33:22 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 18:33:22 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 18:33:24 authenticatetokenimpl.go:51: hVOEYgOTcVgZrEVRhtPP
TRACE: 2017/05/10 18:33:24 authenticatetokenimpl.go:59: Type is hVOEYgOTcVgZrEVRhtPP
TRACE: 2017/05/10 18:33:24 aunthenticate.go:42: 2017-05-10 18:33:24
TRACE: 2017/05/10 18:33:24 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 18:33:26 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 18:33:26 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 18:33:28 authenticatetokenimpl.go:30: {0xc04211c540 0xc042106970}
TRACE: 2017/05/10 18:33:28 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 18:33:28 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 18:33:28 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 18:33:28 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 18:33:28 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 18:33:28 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 18:33:28 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 18:33:30 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc04233d320 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 18:33:32 questionimpl.go:30: &{0xc0421be000 0x718ea0 0xc0423680e0 false [] <nil> 0xc042284120}
TRACE: 2017/05/10 18:33:39 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 18:33:39 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 18:33:39 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/10 18:33:39 Login.go:16: entering manager.login
TRACE: 2017/05/10 18:33:39 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 18:33:39 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 18:33:39 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 18:33:43 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/10 18:33:43 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/10 18:33:43 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/10 18:33:45 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/10 18:33:45 loginimpl.go:81: executing query.....
TRACE: 2017/05/10 18:33:47 loginimpl.go:93: {0xc0421be8c0 0xc0421e3800}
TRACE: 2017/05/10 18:33:47 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/10 18:33:47 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/10 18:33:47 loginimpl.go:16: exntering in SaveToken() function {0 2 eANdrVcIWRHeKzCdRhab 2017-05-10 18:33:43.6081722 +0530 IST}
TRACE: 2017/05/10 18:33:47 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/10 18:33:48 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 18:33:48 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 18:33:48 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/10 18:33:48 Login.go:16: entering manager.login
TRACE: 2017/05/10 18:33:48 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 18:33:48 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 18:33:48 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 18:33:49 loginimpl.go:20: token inserted
TRACE: 2017/05/10 18:33:49 loginimpl.go:21: {0 2 eANdrVcIWRHeKzCdRhab 2017-05-10 18:33:43.6081722 +0530 IST}
TRACE: 2017/05/10 18:33:51 loginimpl.go:33: {0xc042108fc0 0xc0421e3b20}
TRACE: 2017/05/10 18:33:51 Login.go:48: {2 rakesh eANdrVcIWRHeKzCdRhab user}
TRACE: 2017/05/10 18:33:52 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/10 18:33:52 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/10 18:33:52 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/10 18:33:54 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/10 18:33:54 loginimpl.go:81: executing query.....
TRACE: 2017/05/10 18:33:56 loginimpl.go:93: {0xc04211cb60 0xc042045490}
TRACE: 2017/05/10 18:33:56 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/10 18:33:56 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/10 18:33:56 loginimpl.go:16: exntering in SaveToken() function {0 2 iipvnjFvFmIIOPHhSNJJ 2017-05-10 18:33:52.2215873 +0530 IST}
TRACE: 2017/05/10 18:33:56 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/10 18:33:58 loginimpl.go:20: token inserted
TRACE: 2017/05/10 18:33:58 loginimpl.go:21: {0 2 iipvnjFvFmIIOPHhSNJJ 2017-05-10 18:33:52.2215873 +0530 IST}
TRACE: 2017/05/10 18:33:59 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 18:33:59 QuestionList.go:18: fundamental
TRACE: 2017/05/10 18:33:59 QuestionList.go:19: eANdrVcIWRHeKzCdRhab
TRACE: 2017/05/10 18:33:59 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 18:33:59 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 18:33:59 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 18:33:59 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 18:34:00 loginimpl.go:33: {0xc042109500 0xc042045ba0}
TRACE: 2017/05/10 18:34:00 Login.go:48: {2 rakesh iipvnjFvFmIIOPHhSNJJ user}
TRACE: 2017/05/10 18:34:01 authenticatetokenimpl.go:47: eANdrVcIWRHeKzCdRhab
TRACE: 2017/05/10 18:34:01 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 18:34:01 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 18:34:03 authenticatetokenimpl.go:51: 
TRACE: 2017/05/10 18:34:03 authenticatetokenimpl.go:54: No uid with that token.
TRACE: 2017/05/10 18:34:07 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 18:34:07 QuestionList.go:18: fundamental
TRACE: 2017/05/10 18:34:07 QuestionList.go:19: iipvnjFvFmIIOPHhSNJJ
TRACE: 2017/05/10 18:34:07 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 18:34:07 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 18:34:07 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 18:34:07 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 18:34:09 authenticatetokenimpl.go:47: iipvnjFvFmIIOPHhSNJJ
TRACE: 2017/05/10 18:34:09 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 18:34:09 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 18:34:11 authenticatetokenimpl.go:51: iipvnjFvFmIIOPHhSNJJ
TRACE: 2017/05/10 18:34:11 authenticatetokenimpl.go:59: Type is iipvnjFvFmIIOPHhSNJJ
TRACE: 2017/05/10 18:34:11 aunthenticate.go:42: 2017-05-10 18:34:11
TRACE: 2017/05/10 18:34:11 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 18:34:13 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 18:34:13 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 18:34:15 authenticatetokenimpl.go:30: {0xc042109810 0xc0424368f0}
TRACE: 2017/05/10 18:34:15 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 18:34:15 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 18:34:15 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 18:34:15 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 18:34:15 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 18:34:15 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 18:34:15 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 18:34:17 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0424e4f00 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 18:34:18 questionimpl.go:30: &{0xc042128380 0x718ea0 0xc04211e420 false [] <nil> 0xc04208f080}
TRACE: 2017/05/10 18:34:38 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 18:34:38 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 18:34:38 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/10 18:34:38 Login.go:16: entering manager.login
TRACE: 2017/05/10 18:34:38 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 18:34:38 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 18:34:38 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 18:34:42 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/10 18:34:42 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/10 18:34:42 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/10 18:34:44 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/10 18:34:44 loginimpl.go:81: executing query.....
TRACE: 2017/05/10 18:34:46 loginimpl.go:93: {0xc04211df10 0xc042004d20}
TRACE: 2017/05/10 18:34:46 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/10 18:34:46 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/10 18:34:46 loginimpl.go:16: exntering in SaveToken() function {0 2 QbpnTkxSZkVVMLvyWtPf 2017-05-10 18:34:42.1078052 +0530 IST}
TRACE: 2017/05/10 18:34:46 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/10 18:34:48 loginimpl.go:20: token inserted
TRACE: 2017/05/10 18:34:48 loginimpl.go:21: {0 2 QbpnTkxSZkVVMLvyWtPf 2017-05-10 18:34:42.1078052 +0530 IST}
TRACE: 2017/05/10 18:34:50 loginimpl.go:33: {0xc042128620 0xc042004ec0}
TRACE: 2017/05/10 18:34:50 Login.go:48: {2 rakesh QbpnTkxSZkVVMLvyWtPf user}
TRACE: 2017/05/10 18:35:01 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 18:35:01 QuestionList.go:18: language
TRACE: 2017/05/10 18:35:01 QuestionList.go:19: QbpnTkxSZkVVMLvyWtPf
TRACE: 2017/05/10 18:35:01 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 18:35:01 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 18:35:01 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 18:35:01 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 18:35:03 authenticatetokenimpl.go:47: QbpnTkxSZkVVMLvyWtPf
TRACE: 2017/05/10 18:35:03 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 18:35:03 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 18:35:05 authenticatetokenimpl.go:51: QbpnTkxSZkVVMLvyWtPf
TRACE: 2017/05/10 18:35:05 authenticatetokenimpl.go:59: Type is QbpnTkxSZkVVMLvyWtPf
TRACE: 2017/05/10 18:35:05 aunthenticate.go:42: 2017-05-10 18:35:05
TRACE: 2017/05/10 18:35:05 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 18:35:07 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 18:35:07 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 18:35:09 authenticatetokenimpl.go:30: {0xc042148700 0xc0424dff40}
TRACE: 2017/05/10 18:35:09 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 18:35:09 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 18:35:09 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 18:35:09 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 18:35:09 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 18:35:09 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 18:35:09 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 18:35:09 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 18:35:09 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 18:35:09 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/10 18:35:09 Login.go:16: entering manager.login
TRACE: 2017/05/10 18:35:09 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 18:35:09 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 18:35:09 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 18:35:11 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc04237ab40 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 18:35:12 questionimpl.go:30: &{0xc042139260 0x718ea0 0xc0423002a0 false [] <nil> 0xc0422ffd10}
TRACE: 2017/05/10 18:35:13 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/10 18:35:13 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/10 18:35:13 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/10 18:35:16 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/10 18:35:16 loginimpl.go:81: executing query.....
TRACE: 2017/05/10 18:35:17 loginimpl.go:93: {0xc042148e00 0xc04245c080}
TRACE: 2017/05/10 18:35:17 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/10 18:35:17 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/10 18:35:17 loginimpl.go:16: exntering in SaveToken() function {0 2 tzAyLXqlJjuMkMNFByzt 2017-05-10 18:35:13.9159209 +0530 IST}
TRACE: 2017/05/10 18:35:17 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/10 18:35:20 loginimpl.go:20: token inserted
TRACE: 2017/05/10 18:35:20 loginimpl.go:21: {0 2 tzAyLXqlJjuMkMNFByzt 2017-05-10 18:35:13.9159209 +0530 IST}
TRACE: 2017/05/10 18:35:21 loginimpl.go:33: {0xc042148000 0xc0421e20f0}
TRACE: 2017/05/10 18:35:21 Login.go:48: {2 rakesh tzAyLXqlJjuMkMNFByzt user}
TRACE: 2017/05/10 18:35:29 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 18:35:29 QuestionList.go:18: fundamental
TRACE: 2017/05/10 18:35:29 QuestionList.go:19: tzAyLXqlJjuMkMNFByzt
TRACE: 2017/05/10 18:35:29 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 18:35:29 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 18:35:29 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 18:35:29 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 18:35:30 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/10 18:35:30 AnswerList.go:23: [{0 37 } {0 41 } {0 36 } {0 40 nucleus} {0 42 } {0 43 has agreed to} {0 38 partial invasion} {0 39 gist,ambiguity}]
TRACE: 2017/05/10 18:35:30 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/10 18:35:30 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/10 18:35:30 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/10 18:35:30 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/10 18:35:30 CalculateScore.go:30: answerList [{0 37 } {0 41 } {0 36 } {0 40 nucleus} {0 42 } {0 43 has agreed to} {0 38 partial invasion} {0 39 gist,ambiguity}]
TRACE: 2017/05/10 18:35:30 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:35:30 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:35:32 authenticatetokenimpl.go:47: tzAyLXqlJjuMkMNFByzt
TRACE: 2017/05/10 18:35:32 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 18:35:32 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 18:35:33 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:35:33 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:35:34 authenticatetokenimpl.go:51: tzAyLXqlJjuMkMNFByzt
TRACE: 2017/05/10 18:35:34 authenticatetokenimpl.go:59: Type is tzAyLXqlJjuMkMNFByzt
TRACE: 2017/05/10 18:35:34 aunthenticate.go:42: 2017-05-10 18:35:34
TRACE: 2017/05/10 18:35:34 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 18:35:34 questionimpl.go:108: Type is very busy
TRACE: 2017/05/10 18:35:34 questionimpl.go:111: correct Answer fir ID 37 very busy
TRACE: 2017/05/10 18:35:34 CalculateScore.go:39: Binomial took %s 4.0277964s
TRACE: 2017/05/10 18:35:34 CalculateScore.go:41: actual vs correct  very busy
TRACE: 2017/05/10 18:35:34 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:35:34 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:35:36 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 18:35:36 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 18:35:37 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:35:37 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:35:38 authenticatetokenimpl.go:30: {0xc0421289a0 0xc042107ee0}
TRACE: 2017/05/10 18:35:38 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 18:35:38 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 18:35:38 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 18:35:38 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 18:35:38 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 18:35:38 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 18:35:38 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 18:35:38 questionimpl.go:108: Type is tractabilitytractability
TRACE: 2017/05/10 18:35:38 questionimpl.go:111: correct Answer fir ID 41 tractabilitytractability
TRACE: 2017/05/10 18:35:38 CalculateScore.go:39: Binomial took %s 4.0041198s
TRACE: 2017/05/10 18:35:38 CalculateScore.go:41: actual vs correct  tractabilitytractability
TRACE: 2017/05/10 18:35:38 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:35:38 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:35:40 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0422c3800 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 18:35:40 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:35:40 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:35:42 questionimpl.go:30: &{0xc042148540 0x718ea0 0xc0422a11a0 false [] <nil> 0xc042404810}
TRACE: 2017/05/10 18:35:42 questionimpl.go:108: Type is tormented
TRACE: 2017/05/10 18:35:42 questionimpl.go:111: correct Answer fir ID 36 tormented
TRACE: 2017/05/10 18:35:42 CalculateScore.go:39: Binomial took %s 3.6620002s
TRACE: 2017/05/10 18:35:42 CalculateScore.go:41: actual vs correct  tormented
TRACE: 2017/05/10 18:35:42 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:35:42 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:35:44 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:35:44 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:35:46 questionimpl.go:108: Type is gold
TRACE: 2017/05/10 18:35:46 questionimpl.go:111: correct Answer fir ID 40 gold
TRACE: 2017/05/10 18:35:46 CalculateScore.go:39: Binomial took %s 3.9353489s
TRACE: 2017/05/10 18:35:46 CalculateScore.go:41: actual vs correct nucleus gold
TRACE: 2017/05/10 18:35:46 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:35:46 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:35:48 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:35:48 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:35:50 questionimpl.go:108: Type is infallible,mythological
TRACE: 2017/05/10 18:35:50 questionimpl.go:111: correct Answer fir ID 42 infallible,mythological
TRACE: 2017/05/10 18:35:50 CalculateScore.go:39: Binomial took %s 3.7411566s
TRACE: 2017/05/10 18:35:50 CalculateScore.go:41: actual vs correct  infallible,mythological
TRACE: 2017/05/10 18:35:50 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:35:50 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:35:52 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:35:52 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:35:54 questionimpl.go:108: Type is has agreed to
TRACE: 2017/05/10 18:35:54 questionimpl.go:111: correct Answer fir ID 43 has agreed to
TRACE: 2017/05/10 18:35:54 CalculateScore.go:39: Binomial took %s 3.6878044s
TRACE: 2017/05/10 18:35:54 CalculateScore.go:41: actual vs correct has agreed to has agreed to
TRACE: 2017/05/10 18:35:54 CalculateScore.go:47: 263409560461970212832400
TRACE: 2017/05/10 18:35:55 CalculateScore.go:50: Binomial took %s 1.0025008s
TRACE: 2017/05/10 18:35:55 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:35:55 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:35:56 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/10 18:35:56 AnswerList.go:23: [{0 10 has to overload the method from the interface} {0 3 method overloading} {0 5 a method that contains multiple defination} {0 1 both } {0 4 hiding unnecessary information to outside world} {0 9 a process that is eating memory} {0 6 linked list} {0 2 c} {0 8 shows the access defination for a diractory} {0 7 unit testing}]
TRACE: 2017/05/10 18:35:56 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/10 18:35:56 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/10 18:35:56 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/10 18:35:56 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/10 18:35:56 CalculateScore.go:30: answerList [{0 10 has to overload the method from the interface} {0 3 method overloading} {0 5 a method that contains multiple defination} {0 1 both } {0 4 hiding unnecessary information to outside world} {0 9 a process that is eating memory} {0 6 linked list} {0 2 c} {0 8 shows the access defination for a diractory} {0 7 unit testing}]
TRACE: 2017/05/10 18:35:56 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:35:56 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:35:57 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:35:57 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:35:58 questionimpl.go:108: Type is written contract
TRACE: 2017/05/10 18:35:58 questionimpl.go:111: correct Answer fir ID 38 written contract
TRACE: 2017/05/10 18:35:58 CalculateScore.go:39: Binomial took %s 3.8401778s
TRACE: 2017/05/10 18:35:58 CalculateScore.go:41: actual vs correct partial invasion written contract
TRACE: 2017/05/10 18:35:58 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:35:58 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:35:59 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:35:59 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:36:01 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:36:01 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:36:01 questionimpl.go:108: Type is has to implement all method defination from the interface
TRACE: 2017/05/10 18:36:01 questionimpl.go:111: correct Answer fir ID 10 has to implement all method defination from the interface
TRACE: 2017/05/10 18:36:01 CalculateScore.go:39: Binomial took %s 4.1100551s
TRACE: 2017/05/10 18:36:01 CalculateScore.go:41: actual vs correct has to overload the method from the interface has to implement all method defination from the interface
TRACE: 2017/05/10 18:36:01 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:36:01 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:36:02 questionimpl.go:108: Type is gist,ambiguity
TRACE: 2017/05/10 18:36:02 questionimpl.go:111: correct Answer fir ID 39 gist,ambiguity
TRACE: 2017/05/10 18:36:02 CalculateScore.go:39: Binomial took %s 4.0441995s
TRACE: 2017/05/10 18:36:02 CalculateScore.go:41: actual vs correct gist,ambiguity gist,ambiguity
TRACE: 2017/05/10 18:36:02 CalculateScore.go:47: 263409560461970212832400
TRACE: 2017/05/10 18:36:03 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:36:03 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:36:03 CalculateScore.go:50: Binomial took %s 1.0010903s
TRACE: 2017/05/10 18:36:03 CalculateScore.go:55: Binomial took %s 32.9481763s
TRACE: 2017/05/10 18:36:05 questionimpl.go:108: Type is method overriding
TRACE: 2017/05/10 18:36:05 questionimpl.go:111: correct Answer fir ID 3 method overriding
TRACE: 2017/05/10 18:36:05 CalculateScore.go:39: Binomial took %s 4.0145933s
TRACE: 2017/05/10 18:36:05 CalculateScore.go:41: actual vs correct method overloading method overriding
TRACE: 2017/05/10 18:36:05 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:36:05 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:36:07 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:36:07 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:36:08 questionimpl.go:108: Type is a method that calls itself
TRACE: 2017/05/10 18:36:08 questionimpl.go:111: correct Answer fir ID 5 a method that calls itself
TRACE: 2017/05/10 18:36:08 CalculateScore.go:39: Binomial took %s 3.6765856s
TRACE: 2017/05/10 18:36:08 CalculateScore.go:41: actual vs correct a method that contains multiple defination a method that calls itself
TRACE: 2017/05/10 18:36:08 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:36:08 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:36:10 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:36:10 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:36:12 questionimpl.go:108: Type is both
TRACE: 2017/05/10 18:36:12 questionimpl.go:111: correct Answer fir ID 1 both
TRACE: 2017/05/10 18:36:12 CalculateScore.go:39: Binomial took %s 3.858383s
TRACE: 2017/05/10 18:36:12 CalculateScore.go:41: actual vs correct both  both
TRACE: 2017/05/10 18:36:12 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:36:12 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:36:13 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 18:36:13 QuestionList.go:18: java
TRACE: 2017/05/10 18:36:13 QuestionList.go:19: QbpnTkxSZkVVMLvyWtPf
TRACE: 2017/05/10 18:36:13 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 18:36:13 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 18:36:13 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 18:36:13 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 18:36:14 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:36:14 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:36:16 authenticatetokenimpl.go:47: QbpnTkxSZkVVMLvyWtPf
TRACE: 2017/05/10 18:36:16 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 18:36:16 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 18:36:16 questionimpl.go:108: Type is wraping up properties and methods
TRACE: 2017/05/10 18:36:16 questionimpl.go:111: correct Answer fir ID 4 wraping up properties and methods
TRACE: 2017/05/10 18:36:16 CalculateScore.go:39: Binomial took %s 3.643019s
TRACE: 2017/05/10 18:36:16 CalculateScore.go:41: actual vs correct hiding unnecessary information to outside world wraping up properties and methods
TRACE: 2017/05/10 18:36:16 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:36:16 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:36:17 authenticatetokenimpl.go:51: 
TRACE: 2017/05/10 18:36:17 authenticatetokenimpl.go:54: No uid with that token.
TRACE: 2017/05/10 18:36:18 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:36:18 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:36:19 questionimpl.go:108: Type is a long running background process
TRACE: 2017/05/10 18:36:19 questionimpl.go:111: correct Answer fir ID 9 a long running background process
TRACE: 2017/05/10 18:36:19 CalculateScore.go:39: Binomial took %s 3.6642029s
TRACE: 2017/05/10 18:36:19 CalculateScore.go:41: actual vs correct a process that is eating memory a long running background process
TRACE: 2017/05/10 18:36:19 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:36:19 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:36:22 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:36:22 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:36:23 questionimpl.go:108: Type is stack
TRACE: 2017/05/10 18:36:23 questionimpl.go:111: correct Answer fir ID 6 stack
TRACE: 2017/05/10 18:36:23 CalculateScore.go:39: Binomial took %s 4.0260662s
TRACE: 2017/05/10 18:36:23 CalculateScore.go:41: actual vs correct linked list stack
TRACE: 2017/05/10 18:36:23 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:36:23 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:36:26 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:36:26 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:36:27 questionimpl.go:108: Type is c
TRACE: 2017/05/10 18:36:27 questionimpl.go:111: correct Answer fir ID 2 c
TRACE: 2017/05/10 18:36:27 CalculateScore.go:39: Binomial took %s 3.9673925s
TRACE: 2017/05/10 18:36:27 CalculateScore.go:41: actual vs correct c c
TRACE: 2017/05/10 18:36:27 CalculateScore.go:47: 263409560461970212832400
TRACE: 2017/05/10 18:36:28 CalculateScore.go:50: Binomial took %s 1.0005447s
TRACE: 2017/05/10 18:36:28 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:36:28 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:36:31 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:36:31 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:36:32 questionimpl.go:108: Type is shows path of current directory
TRACE: 2017/05/10 18:36:32 questionimpl.go:111: correct Answer fir ID 8 shows path of current directory
TRACE: 2017/05/10 18:36:32 CalculateScore.go:39: Binomial took %s 3.8590789s
TRACE: 2017/05/10 18:36:32 CalculateScore.go:41: actual vs correct shows the access defination for a diractory shows path of current directory
TRACE: 2017/05/10 18:36:32 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:36:32 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:36:34 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:36:34 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:36:36 questionimpl.go:108: Type is big O notation
TRACE: 2017/05/10 18:36:36 questionimpl.go:111: correct Answer fir ID 7 big O notation
TRACE: 2017/05/10 18:36:36 CalculateScore.go:39: Binomial took %s 3.7415033s
TRACE: 2017/05/10 18:36:36 CalculateScore.go:41: actual vs correct unit testing big O notation
TRACE: 2017/05/10 18:36:36 CalculateScore.go:55: Binomial took %s 39.5624052s
TRACE: 2017/05/10 18:36:43 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 18:36:43 QuestionList.go:18: fundamental
TRACE: 2017/05/10 18:36:43 QuestionList.go:19: QbpnTkxSZkVVMLvyWtPf
TRACE: 2017/05/10 18:36:43 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 18:36:43 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 18:36:43 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 18:36:43 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 18:36:45 authenticatetokenimpl.go:47: QbpnTkxSZkVVMLvyWtPf
TRACE: 2017/05/10 18:36:45 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 18:36:45 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 18:36:47 authenticatetokenimpl.go:51: 
TRACE: 2017/05/10 18:36:47 authenticatetokenimpl.go:54: No uid with that token.
TRACE: 2017/05/10 18:37:03 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 18:37:03 QuestionList.go:18: java
TRACE: 2017/05/10 18:37:03 QuestionList.go:19: QbpnTkxSZkVVMLvyWtPf
TRACE: 2017/05/10 18:37:03 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 18:37:03 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 18:37:03 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 18:37:03 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 18:37:05 authenticatetokenimpl.go:47: QbpnTkxSZkVVMLvyWtPf
TRACE: 2017/05/10 18:37:05 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 18:37:05 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 18:37:07 authenticatetokenimpl.go:51: 
TRACE: 2017/05/10 18:37:07 authenticatetokenimpl.go:54: No uid with that token.
TRACE: 2017/05/10 18:37:39 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 18:37:39 QuestionList.go:18: java
TRACE: 2017/05/10 18:37:39 QuestionList.go:19: QbpnTkxSZkVVMLvyWtPf
TRACE: 2017/05/10 18:37:39 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 18:37:39 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 18:37:39 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 18:37:39 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 18:37:41 authenticatetokenimpl.go:47: QbpnTkxSZkVVMLvyWtPf
TRACE: 2017/05/10 18:37:41 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 18:37:41 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 18:37:43 authenticatetokenimpl.go:51: 
TRACE: 2017/05/10 18:37:43 authenticatetokenimpl.go:54: No uid with that token.
TRACE: 2017/05/10 18:37:47 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 18:37:47 QuestionList.go:18: java
TRACE: 2017/05/10 18:37:47 QuestionList.go:19: QbpnTkxSZkVVMLvyWtPf
TRACE: 2017/05/10 18:37:47 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 18:37:47 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 18:37:47 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 18:37:47 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 18:37:49 authenticatetokenimpl.go:47: QbpnTkxSZkVVMLvyWtPf
TRACE: 2017/05/10 18:37:49 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 18:37:49 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 18:37:51 authenticatetokenimpl.go:51: 
TRACE: 2017/05/10 18:37:51 authenticatetokenimpl.go:54: No uid with that token.
TRACE: 2017/05/10 18:40:09 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 18:40:09 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 18:40:09 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/10 18:40:09 Login.go:16: entering manager.login
TRACE: 2017/05/10 18:40:09 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 18:40:09 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 18:40:09 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 18:40:13 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/10 18:40:13 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/10 18:40:13 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/10 18:40:15 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/10 18:40:15 loginimpl.go:81: executing query.....
TRACE: 2017/05/10 18:40:17 loginimpl.go:93: {0xc042148a10 0xc04245cf60}
TRACE: 2017/05/10 18:40:17 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/10 18:40:17 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/10 18:40:17 loginimpl.go:16: exntering in SaveToken() function {0 2 TCGCEwOVRvGbSZhLkDvD 2017-05-10 18:40:13.661271 +0530 IST}
TRACE: 2017/05/10 18:40:17 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/10 18:40:19 loginimpl.go:20: token inserted
TRACE: 2017/05/10 18:40:19 loginimpl.go:21: {0 2 TCGCEwOVRvGbSZhLkDvD 2017-05-10 18:40:13.661271 +0530 IST}
TRACE: 2017/05/10 18:40:21 loginimpl.go:33: {0xc0421be3f0 0xc0423783f0}
TRACE: 2017/05/10 18:40:21 Login.go:48: {2 rakesh TCGCEwOVRvGbSZhLkDvD user}
TRACE: 2017/05/10 18:40:32 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 18:40:32 QuestionList.go:18: language
TRACE: 2017/05/10 18:40:32 QuestionList.go:19: TCGCEwOVRvGbSZhLkDvD
TRACE: 2017/05/10 18:40:32 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 18:40:32 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 18:40:32 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 18:40:32 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 18:40:34 authenticatetokenimpl.go:47: TCGCEwOVRvGbSZhLkDvD
TRACE: 2017/05/10 18:40:34 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 18:40:34 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 18:40:35 authenticatetokenimpl.go:51: TCGCEwOVRvGbSZhLkDvD
TRACE: 2017/05/10 18:40:35 authenticatetokenimpl.go:59: Type is TCGCEwOVRvGbSZhLkDvD
TRACE: 2017/05/10 18:40:35 aunthenticate.go:42: 2017-05-10 18:40:35
TRACE: 2017/05/10 18:40:35 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 18:40:38 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 18:40:38 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 18:40:39 authenticatetokenimpl.go:30: {0xc0421be620 0xc04245d790}
TRACE: 2017/05/10 18:40:39 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 18:40:39 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 18:40:39 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 18:40:39 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 18:40:39 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 18:40:39 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 18:40:39 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 18:40:42 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc04233d800 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 18:40:43 questionimpl.go:30: &{0xc042108460 0x718ea0 0xc042368420 false [] <nil> 0xc0423261e0}
TRACE: 2017/05/10 18:41:05 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/10 18:41:05 AnswerList.go:23: [{0 40 nucleus} {0 42 dependable,ordinary} {0 43 have been agreed for} {0 37 very busy} {0 38 } {0 36 made angry} {0 41 tractability} {0 39 gist,ambiguity}]
TRACE: 2017/05/10 18:41:05 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/10 18:41:05 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/10 18:41:05 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/10 18:41:05 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/10 18:41:05 CalculateScore.go:30: answerList [{0 40 nucleus} {0 42 dependable,ordinary} {0 43 have been agreed for} {0 37 very busy} {0 38 } {0 36 made angry} {0 41 tractability} {0 39 gist,ambiguity}]
TRACE: 2017/05/10 18:41:05 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:41:05 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:41:07 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:41:07 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:41:09 questionimpl.go:108: Type is gold
TRACE: 2017/05/10 18:41:09 questionimpl.go:111: correct Answer fir ID 40 gold
TRACE: 2017/05/10 18:41:09 CalculateScore.go:39: Binomial took %s 3.924529s
TRACE: 2017/05/10 18:41:09 CalculateScore.go:41: actual vs correct nucleus gold
TRACE: 2017/05/10 18:41:09 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:41:09 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:41:11 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:41:11 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:41:12 questionimpl.go:108: Type is infallible,mythological
TRACE: 2017/05/10 18:41:12 questionimpl.go:111: correct Answer fir ID 42 infallible,mythological
TRACE: 2017/05/10 18:41:12 CalculateScore.go:39: Binomial took %s 3.574614s
TRACE: 2017/05/10 18:41:12 CalculateScore.go:41: actual vs correct dependable,ordinary infallible,mythological
TRACE: 2017/05/10 18:41:12 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:41:12 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:41:14 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:41:14 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:41:16 questionimpl.go:108: Type is has agreed to
TRACE: 2017/05/10 18:41:16 questionimpl.go:111: correct Answer fir ID 43 has agreed to
TRACE: 2017/05/10 18:41:16 CalculateScore.go:39: Binomial took %s 3.7614522s
TRACE: 2017/05/10 18:41:16 CalculateScore.go:41: actual vs correct have been agreed for has agreed to
TRACE: 2017/05/10 18:41:16 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:41:16 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:41:18 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:41:18 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:41:20 questionimpl.go:108: Type is very busy
TRACE: 2017/05/10 18:41:20 questionimpl.go:111: correct Answer fir ID 37 very busy
TRACE: 2017/05/10 18:41:20 CalculateScore.go:39: Binomial took %s 4.028404s
TRACE: 2017/05/10 18:41:20 CalculateScore.go:41: actual vs correct very busy very busy
TRACE: 2017/05/10 18:41:20 CalculateScore.go:47: 263409560461970212832400
TRACE: 2017/05/10 18:41:21 CalculateScore.go:50: Binomial took %s 1.0013687s
TRACE: 2017/05/10 18:41:21 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:41:21 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:41:23 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:41:23 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:41:25 questionimpl.go:108: Type is written contract
TRACE: 2017/05/10 18:41:25 questionimpl.go:111: correct Answer fir ID 38 written contract
TRACE: 2017/05/10 18:41:25 CalculateScore.go:39: Binomial took %s 4.0134233s
TRACE: 2017/05/10 18:41:25 CalculateScore.go:41: actual vs correct  written contract
TRACE: 2017/05/10 18:41:25 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:41:25 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:41:27 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:41:27 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:41:29 questionimpl.go:108: Type is tormented
TRACE: 2017/05/10 18:41:29 questionimpl.go:111: correct Answer fir ID 36 tormented
TRACE: 2017/05/10 18:41:29 CalculateScore.go:39: Binomial took %s 3.8170888s
TRACE: 2017/05/10 18:41:29 CalculateScore.go:41: actual vs correct made angry tormented
TRACE: 2017/05/10 18:41:29 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:41:29 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:41:31 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:41:31 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:41:33 questionimpl.go:108: Type is tractabilitytractability
TRACE: 2017/05/10 18:41:33 questionimpl.go:111: correct Answer fir ID 41 tractabilitytractability
TRACE: 2017/05/10 18:41:33 CalculateScore.go:39: Binomial took %s 4.1538341s
TRACE: 2017/05/10 18:41:33 CalculateScore.go:41: actual vs correct tractability tractabilitytractability
TRACE: 2017/05/10 18:41:33 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:41:33 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:41:35 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:41:35 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:41:37 questionimpl.go:108: Type is gist,ambiguity
TRACE: 2017/05/10 18:41:37 questionimpl.go:111: correct Answer fir ID 39 gist,ambiguity
TRACE: 2017/05/10 18:41:37 CalculateScore.go:39: Binomial took %s 3.7351228s
TRACE: 2017/05/10 18:41:37 CalculateScore.go:41: actual vs correct gist,ambiguity gist,ambiguity
TRACE: 2017/05/10 18:41:37 CalculateScore.go:47: 263409560461970212832400
TRACE: 2017/05/10 18:41:38 CalculateScore.go:50: Binomial took %s 1.0041357s
TRACE: 2017/05/10 18:41:38 CalculateScore.go:55: Binomial took %s 33.0149738s
TRACE: 2017/05/10 18:41:52 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 18:41:52 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 18:41:52 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/10 18:41:52 Login.go:16: entering manager.login
TRACE: 2017/05/10 18:41:52 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 18:41:52 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 18:41:52 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 18:41:59 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/10 18:41:59 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/10 18:41:59 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/10 18:42:01 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/10 18:42:01 loginimpl.go:81: executing query.....
TRACE: 2017/05/10 18:42:03 loginimpl.go:93: {0xc0421287e0 0xc042106b60}
TRACE: 2017/05/10 18:42:03 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/10 18:42:03 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/10 18:42:03 loginimpl.go:16: exntering in SaveToken() function {0 2 UeIOfpxdbSlceKnQlZkR 2017-05-10 18:41:59.6554101 +0530 IST}
TRACE: 2017/05/10 18:42:03 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/10 18:42:05 loginimpl.go:20: token inserted
TRACE: 2017/05/10 18:42:05 loginimpl.go:21: {0 2 UeIOfpxdbSlceKnQlZkR 2017-05-10 18:41:59.6554101 +0530 IST}
TRACE: 2017/05/10 18:42:07 loginimpl.go:33: {0xc042128d90 0xc042044ec0}
TRACE: 2017/05/10 18:42:07 Login.go:48: {2 rakesh UeIOfpxdbSlceKnQlZkR user}
TRACE: 2017/05/10 18:42:21 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 18:42:21 QuestionList.go:18: java
TRACE: 2017/05/10 18:42:21 QuestionList.go:19: UeIOfpxdbSlceKnQlZkR
TRACE: 2017/05/10 18:42:21 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 18:42:21 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 18:42:21 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 18:42:21 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 18:42:23 authenticatetokenimpl.go:47: UeIOfpxdbSlceKnQlZkR
TRACE: 2017/05/10 18:42:23 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 18:42:23 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 18:42:25 authenticatetokenimpl.go:51: UeIOfpxdbSlceKnQlZkR
TRACE: 2017/05/10 18:42:25 authenticatetokenimpl.go:59: Type is UeIOfpxdbSlceKnQlZkR
TRACE: 2017/05/10 18:42:25 aunthenticate.go:42: 2017-05-10 18:42:25
TRACE: 2017/05/10 18:42:25 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 18:42:27 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 18:42:27 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 18:42:29 authenticatetokenimpl.go:30: {0xc042129260 0xc042045db0}
TRACE: 2017/05/10 18:42:29 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 18:42:29 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 18:42:29 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 18:42:29 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 18:42:29 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 18:42:29 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 18:42:29 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 18:42:31 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc04210dec0 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 18:42:33 questionimpl.go:30: &{0xc0421be2a0 0x718ea0 0xc0424782a0 false [] <nil> 0xc0423261b0}
TRACE: 2017/05/10 18:42:40 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/10 18:42:40 AnswerList.go:23: [{0 12 } {0 20 } {0 27 } {0 29 } {0 18 } {0 14 } {0 32 } {0 19 } {0 21 } {0 22 } {0 33 } {0 23 } {0 34 } {0 28 } {0 26 } {0 31 } {0 30 } {0 16 } {0 35 } {0 15 } {0 11 } {0 13 } {0 24 } {0 17 } {0 25 }]
TRACE: 2017/05/10 18:42:40 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/10 18:42:40 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/10 18:42:40 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/10 18:42:40 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/10 18:42:40 CalculateScore.go:30: answerList [{0 12 } {0 20 } {0 27 } {0 29 } {0 18 } {0 14 } {0 32 } {0 19 } {0 21 } {0 22 } {0 33 } {0 23 } {0 34 } {0 28 } {0 26 } {0 31 } {0 30 } {0 16 } {0 35 } {0 15 } {0 11 } {0 13 } {0 24 } {0 17 } {0 25 }]
TRACE: 2017/05/10 18:42:40 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:42:40 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:42:42 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:42:42 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:42:44 questionimpl.go:108: Type is No
TRACE: 2017/05/10 18:42:44 questionimpl.go:111: correct Answer fir ID 12 No
TRACE: 2017/05/10 18:42:44 CalculateScore.go:39: Binomial took %s 3.9527932s
TRACE: 2017/05/10 18:42:44 CalculateScore.go:41: actual vs correct  No
TRACE: 2017/05/10 18:42:44 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:42:44 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:42:46 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:42:46 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:42:48 questionimpl.go:108: Type is Constructor
TRACE: 2017/05/10 18:42:48 questionimpl.go:111: correct Answer fir ID 20 Constructor
TRACE: 2017/05/10 18:42:48 CalculateScore.go:39: Binomial took %s 3.8812403s
TRACE: 2017/05/10 18:42:48 CalculateScore.go:41: actual vs correct  Constructor
TRACE: 2017/05/10 18:42:48 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:42:48 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:42:50 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:42:50 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:42:51 questionimpl.go:108: Type is 0 to 65535
TRACE: 2017/05/10 18:42:51 questionimpl.go:111: correct Answer fir ID 27 0 to 65535
TRACE: 2017/05/10 18:42:51 CalculateScore.go:39: Binomial took %s 3.8668982s
TRACE: 2017/05/10 18:42:51 CalculateScore.go:41: actual vs correct  0 to 65535
TRACE: 2017/05/10 18:42:51 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:42:51 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:42:53 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:42:53 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:42:55 questionimpl.go:108: Type is flush()
TRACE: 2017/05/10 18:42:55 questionimpl.go:111: correct Answer fir ID 29 flush()
TRACE: 2017/05/10 18:42:55 CalculateScore.go:39: Binomial took %s 3.9242555s
TRACE: 2017/05/10 18:42:55 CalculateScore.go:41: actual vs correct  flush()
TRACE: 2017/05/10 18:42:55 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:42:55 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:42:57 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 18:42:57 QuestionList.go:18: java
TRACE: 2017/05/10 18:42:57 QuestionList.go:19: TCGCEwOVRvGbSZhLkDvD
TRACE: 2017/05/10 18:42:57 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 18:42:57 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 18:42:57 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 18:42:57 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 18:42:57 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:42:57 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:42:59 questionimpl.go:108: Type is java.util.Date
TRACE: 2017/05/10 18:42:59 questionimpl.go:111: correct Answer fir ID 18 java.util.Date
TRACE: 2017/05/10 18:42:59 CalculateScore.go:39: Binomial took %s 3.7614963s
TRACE: 2017/05/10 18:42:59 CalculateScore.go:41: actual vs correct  java.util.Date
TRACE: 2017/05/10 18:42:59 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:42:59 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:42:59 authenticatetokenimpl.go:47: TCGCEwOVRvGbSZhLkDvD
TRACE: 2017/05/10 18:42:59 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 18:42:59 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 18:43:01 authenticatetokenimpl.go:51: 
TRACE: 2017/05/10 18:43:01 authenticatetokenimpl.go:54: No uid with that token.
TRACE: 2017/05/10 18:43:01 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:43:01 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:43:03 questionimpl.go:108: Type is resume() method
TRACE: 2017/05/10 18:43:03 questionimpl.go:111: correct Answer fir ID 14 resume() method
TRACE: 2017/05/10 18:43:03 CalculateScore.go:39: Binomial took %s 3.8094274s
TRACE: 2017/05/10 18:43:03 CalculateScore.go:41: actual vs correct  resume() method
TRACE: 2017/05/10 18:43:03 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:43:03 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:43:05 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:43:05 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:43:07 questionimpl.go:108: Type is All of the mentioned
TRACE: 2017/05/10 18:43:07 questionimpl.go:111: correct Answer fir ID 32 All of the mentioned
TRACE: 2017/05/10 18:43:07 CalculateScore.go:39: Binomial took %s 4.1062993s
TRACE: 2017/05/10 18:43:07 CalculateScore.go:41: actual vs correct  All of the mentioned
TRACE: 2017/05/10 18:43:07 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:43:07 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:43:09 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:43:09 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:43:11 questionimpl.go:108: Type is autoboxing
TRACE: 2017/05/10 18:43:11 questionimpl.go:111: correct Answer fir ID 19 autoboxing
TRACE: 2017/05/10 18:43:11 CalculateScore.go:39: Binomial took %s 3.7267208s
TRACE: 2017/05/10 18:43:11 CalculateScore.go:41: actual vs correct  autoboxing
TRACE: 2017/05/10 18:43:11 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:43:11 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:43:13 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:43:13 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:43:14 questionimpl.go:108: Type is string
TRACE: 2017/05/10 18:43:14 questionimpl.go:111: correct Answer fir ID 21 string
TRACE: 2017/05/10 18:43:14 CalculateScore.go:39: Binomial took %s 3.7444314s
TRACE: 2017/05/10 18:43:14 CalculateScore.go:41: actual vs correct  string
TRACE: 2017/05/10 18:43:14 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:43:14 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:43:16 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:43:16 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:43:18 questionimpl.go:108: Type is Queue
TRACE: 2017/05/10 18:43:18 questionimpl.go:111: correct Answer fir ID 22 Queue
TRACE: 2017/05/10 18:43:18 CalculateScore.go:39: Binomial took %s 3.6622515s
TRACE: 2017/05/10 18:43:18 CalculateScore.go:41: actual vs correct  Queue
TRACE: 2017/05/10 18:43:18 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:43:18 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:43:20 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:43:20 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:43:22 questionimpl.go:108: Type is switch, if
TRACE: 2017/05/10 18:43:22 questionimpl.go:111: correct Answer fir ID 33 switch, if
TRACE: 2017/05/10 18:43:22 CalculateScore.go:39: Binomial took %s 4.0498736s
TRACE: 2017/05/10 18:43:22 CalculateScore.go:41: actual vs correct  switch, if
TRACE: 2017/05/10 18:43:22 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:43:22 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:43:24 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:43:24 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:43:26 questionimpl.go:108: Type is PrintStream class
TRACE: 2017/05/10 18:43:26 questionimpl.go:111: correct Answer fir ID 23 PrintStream class
TRACE: 2017/05/10 18:43:26 CalculateScore.go:39: Binomial took %s 3.7537247s
TRACE: 2017/05/10 18:43:26 CalculateScore.go:41: actual vs correct  PrintStream class
TRACE: 2017/05/10 18:43:26 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:43:26 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:43:28 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:43:28 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:43:30 questionimpl.go:108: Type is All of the above
TRACE: 2017/05/10 18:43:30 questionimpl.go:111: correct Answer fir ID 34 All of the above
TRACE: 2017/05/10 18:43:30 CalculateScore.go:39: Binomial took %s 3.6633332s
TRACE: 2017/05/10 18:43:30 CalculateScore.go:41: actual vs correct  All of the above
TRACE: 2017/05/10 18:43:30 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:43:30 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:43:32 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:43:32 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:43:34 questionimpl.go:108: Type is Serialization
TRACE: 2017/05/10 18:43:34 questionimpl.go:111: correct Answer fir ID 28 Serialization
TRACE: 2017/05/10 18:43:34 CalculateScore.go:39: Binomial took %s 3.956111s
TRACE: 2017/05/10 18:43:34 CalculateScore.go:41: actual vs correct  Serialization
TRACE: 2017/05/10 18:43:34 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:43:34 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:43:35 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:43:35 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:43:37 questionimpl.go:108: Type is 100
TRACE: 2017/05/10 18:43:37 questionimpl.go:111: correct Answer fir ID 26 100
TRACE: 2017/05/10 18:43:37 CalculateScore.go:39: Binomial took %s 3.6461607s
TRACE: 2017/05/10 18:43:37 CalculateScore.go:41: actual vs correct  100
TRACE: 2017/05/10 18:43:37 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:43:37 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:43:39 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:43:39 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:43:41 questionimpl.go:108: Type is shuffle()
TRACE: 2017/05/10 18:43:41 questionimpl.go:111: correct Answer fir ID 31 shuffle()
TRACE: 2017/05/10 18:43:41 CalculateScore.go:39: Binomial took %s 3.7768584s
TRACE: 2017/05/10 18:43:41 CalculateScore.go:41: actual vs correct  shuffle()
TRACE: 2017/05/10 18:43:41 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:43:41 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:43:43 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:43:43 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:43:45 questionimpl.go:108: Type is max(Comparator comp)
TRACE: 2017/05/10 18:43:45 questionimpl.go:111: correct Answer fir ID 30 max(Comparator comp)
TRACE: 2017/05/10 18:43:45 CalculateScore.go:39: Binomial took %s 3.8276932s
TRACE: 2017/05/10 18:43:45 CalculateScore.go:41: actual vs correct  max(Comparator comp)
TRACE: 2017/05/10 18:43:45 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:43:45 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:43:47 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:43:47 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:43:49 questionimpl.go:108: Type is getConnection()
TRACE: 2017/05/10 18:43:49 questionimpl.go:111: correct Answer fir ID 16 getConnection()
TRACE: 2017/05/10 18:43:49 CalculateScore.go:39: Binomial took %s 3.9479623s
TRACE: 2017/05/10 18:43:49 CalculateScore.go:41: actual vs correct  getConnection()
TRACE: 2017/05/10 18:43:49 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:43:49 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:43:51 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:43:51 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:43:52 questionimpl.go:108: Type is final
TRACE: 2017/05/10 18:43:52 questionimpl.go:111: correct Answer fir ID 35 final
TRACE: 2017/05/10 18:43:52 CalculateScore.go:39: Binomial took %s 3.746842s
TRACE: 2017/05/10 18:43:52 CalculateScore.go:41: actual vs correct  final
TRACE: 2017/05/10 18:43:52 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:43:52 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:43:55 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:43:55 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:43:56 questionimpl.go:108: Type is java.util.TreeMap
TRACE: 2017/05/10 18:43:56 questionimpl.go:111: correct Answer fir ID 15 java.util.TreeMap
TRACE: 2017/05/10 18:43:56 CalculateScore.go:39: Binomial took %s 3.9046965s
TRACE: 2017/05/10 18:43:56 CalculateScore.go:41: actual vs correct  java.util.TreeMap
TRACE: 2017/05/10 18:43:56 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:43:56 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:43:58 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:43:58 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:44:00 questionimpl.go:108: Type is Final class
TRACE: 2017/05/10 18:44:00 questionimpl.go:111: correct Answer fir ID 11 Final class
TRACE: 2017/05/10 18:44:00 CalculateScore.go:39: Binomial took %s 3.6269513s
TRACE: 2017/05/10 18:44:00 CalculateScore.go:41: actual vs correct  Final class
TRACE: 2017/05/10 18:44:00 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:44:00 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:44:03 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:44:03 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:44:04 questionimpl.go:108: Type is Can store multiple values
TRACE: 2017/05/10 18:44:04 questionimpl.go:111: correct Answer fir ID 13 Can store multiple values
TRACE: 2017/05/10 18:44:04 CalculateScore.go:39: Binomial took %s 4.3758255s
TRACE: 2017/05/10 18:44:04 CalculateScore.go:41: actual vs correct  Can store multiple values
TRACE: 2017/05/10 18:44:04 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:44:04 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:44:06 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:44:06 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:44:08 questionimpl.go:108: Type is transient
TRACE: 2017/05/10 18:44:08 questionimpl.go:111: correct Answer fir ID 24 transient
TRACE: 2017/05/10 18:44:08 CalculateScore.go:39: Binomial took %s 3.6975832s
TRACE: 2017/05/10 18:44:08 CalculateScore.go:41: actual vs correct  transient
TRACE: 2017/05/10 18:44:08 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:44:08 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:44:11 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:44:11 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:44:13 questionimpl.go:108: Type is Multithreaded
TRACE: 2017/05/10 18:44:13 questionimpl.go:111: correct Answer fir ID 17 Multithreaded
TRACE: 2017/05/10 18:44:13 CalculateScore.go:39: Binomial took %s 4.7132078s
TRACE: 2017/05/10 18:44:13 CalculateScore.go:41: actual vs correct  Multithreaded
TRACE: 2017/05/10 18:44:13 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 18:44:13 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 18:44:16 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 18:44:16 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 18:44:18 questionimpl.go:108: Type is Interface
TRACE: 2017/05/10 18:44:18 questionimpl.go:111: correct Answer fir ID 25 Interface
TRACE: 2017/05/10 18:44:18 CalculateScore.go:39: Binomial took %s 5.6630653s
TRACE: 2017/05/10 18:44:18 CalculateScore.go:41: actual vs correct  Interface
TRACE: 2017/05/10 18:44:18 CalculateScore.go:55: Binomial took %s 1m38.7876849s
TRACE: 2017/05/10 18:45:35 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 18:45:35 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 18:45:35 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/10 18:45:35 Login.go:16: entering manager.login
TRACE: 2017/05/10 18:45:35 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 18:45:35 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 18:45:35 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 19:02:27 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 19:02:27 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 19:02:27 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/10 19:02:27 Login.go:16: entering manager.login
TRACE: 2017/05/10 19:02:27 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 19:02:27 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 19:02:27 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 19:02:31 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/10 19:02:31 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/10 19:02:31 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/10 19:02:33 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/10 19:02:33 loginimpl.go:81: executing query.....
TRACE: 2017/05/10 19:02:35 loginimpl.go:93: {0xc0421483f0 0xc042136d60}
TRACE: 2017/05/10 19:02:35 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/10 19:02:35 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/10 19:02:35 loginimpl.go:16: exntering in SaveToken() function {0 2 FGljwccqRBbPpdBkEJAl 2017-05-10 19:02:31.479263 +0530 IST}
TRACE: 2017/05/10 19:02:35 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/10 19:02:37 loginimpl.go:20: token inserted
TRACE: 2017/05/10 19:02:37 loginimpl.go:21: {0 2 FGljwccqRBbPpdBkEJAl 2017-05-10 19:02:31.479263 +0530 IST}
TRACE: 2017/05/10 19:02:39 loginimpl.go:33: {0xc0421487e0 0xc0421375b0}
TRACE: 2017/05/10 19:02:39 Login.go:48: {2 rakesh FGljwccqRBbPpdBkEJAl user}
TRACE: 2017/05/10 19:02:49 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 19:02:49 QuestionList.go:18: fundamental
TRACE: 2017/05/10 19:02:49 QuestionList.go:19: FGljwccqRBbPpdBkEJAl
TRACE: 2017/05/10 19:02:49 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 19:02:49 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 19:02:49 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 19:02:49 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 19:02:51 authenticatetokenimpl.go:47: FGljwccqRBbPpdBkEJAl
TRACE: 2017/05/10 19:02:51 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 19:02:51 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 19:02:53 authenticatetokenimpl.go:51: FGljwccqRBbPpdBkEJAl
TRACE: 2017/05/10 19:02:53 authenticatetokenimpl.go:59: Type is FGljwccqRBbPpdBkEJAl
TRACE: 2017/05/10 19:02:53 aunthenticate.go:42: 2017-05-10 19:02:53
TRACE: 2017/05/10 19:02:53 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 19:02:55 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 19:02:55 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 19:02:57 authenticatetokenimpl.go:30: {0xc042128c40 0xc042490d50}
TRACE: 2017/05/10 19:02:57 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 19:02:57 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 19:02:57 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 19:02:57 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 19:02:57 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 19:02:57 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 19:02:57 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 19:02:59 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0421157a0 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 19:03:01 questionimpl.go:30: &{0xc042128e00 0x718ea0 0xc042040020 false [] <nil> 0xc04237ecc0}
TRACE: 2017/05/10 19:03:23 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/10 19:03:23 AnswerList.go:23: [{0 6 queue} {0 7 SLOC} {0 9 a long running background process} {0 3 method overriding} {0 1 printer} {0 10 has to implement at least one method from the interface} {0 5 a method that loops through a list} {0 2 c} {0 8 shows the access defination for a diractory} {0 4 a way of delivering a class from another class }]
TRACE: 2017/05/10 19:03:23 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/10 19:03:23 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/10 19:03:23 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/10 19:03:23 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/10 19:03:23 CalculateScore.go:30: answerList [{0 6 queue} {0 7 SLOC} {0 9 a long running background process} {0 3 method overriding} {0 1 printer} {0 10 has to implement at least one method from the interface} {0 5 a method that loops through a list} {0 2 c} {0 8 shows the access defination for a diractory} {0 4 a way of delivering a class from another class }]
TRACE: 2017/05/10 19:03:23 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 19:03:23 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 19:03:25 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 19:03:25 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 19:03:27 questionimpl.go:108: Type is stack
TRACE: 2017/05/10 19:03:27 questionimpl.go:111: correct Answer fir ID 6 stack
TRACE: 2017/05/10 19:03:27 CalculateScore.go:39: Binomial took %s 4.0774701s
TRACE: 2017/05/10 19:03:27 CalculateScore.go:41: actual vs correct queue stack
TRACE: 2017/05/10 19:03:27 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 19:03:27 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 19:03:29 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 19:03:29 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 19:03:31 questionimpl.go:108: Type is big O notation
TRACE: 2017/05/10 19:03:31 questionimpl.go:111: correct Answer fir ID 7 big O notation
TRACE: 2017/05/10 19:03:31 CalculateScore.go:39: Binomial took %s 4.0946106s
TRACE: 2017/05/10 19:03:31 CalculateScore.go:41: actual vs correct SLOC big O notation
TRACE: 2017/05/10 19:03:31 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 19:03:31 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 19:03:33 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 19:03:33 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 19:03:35 questionimpl.go:108: Type is a long running background process
TRACE: 2017/05/10 19:03:35 questionimpl.go:111: correct Answer fir ID 9 a long running background process
TRACE: 2017/05/10 19:03:35 CalculateScore.go:39: Binomial took %s 4.1102236s
TRACE: 2017/05/10 19:03:35 CalculateScore.go:41: actual vs correct a long running background process a long running background process
TRACE: 2017/05/10 19:03:35 CalculateScore.go:47: 263409560461970212832400
TRACE: 2017/05/10 19:03:36 CalculateScore.go:50: Binomial took %s 1.0025656s
TRACE: 2017/05/10 19:03:36 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 19:03:36 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 19:03:38 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 19:03:38 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 19:03:40 questionimpl.go:108: Type is method overriding
TRACE: 2017/05/10 19:03:40 questionimpl.go:111: correct Answer fir ID 3 method overriding
TRACE: 2017/05/10 19:03:40 CalculateScore.go:39: Binomial took %s 4.0858456s
TRACE: 2017/05/10 19:03:40 CalculateScore.go:41: actual vs correct method overriding method overriding
TRACE: 2017/05/10 19:03:40 CalculateScore.go:47: 263409560461970212832400
TRACE: 2017/05/10 19:03:41 CalculateScore.go:50: Binomial took %s 1.0018624s
TRACE: 2017/05/10 19:03:41 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 19:03:41 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 19:03:43 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 19:03:43 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 19:03:45 questionimpl.go:108: Type is both
TRACE: 2017/05/10 19:03:45 questionimpl.go:111: correct Answer fir ID 1 both
TRACE: 2017/05/10 19:03:45 CalculateScore.go:39: Binomial took %s 3.9732366s
TRACE: 2017/05/10 19:03:45 CalculateScore.go:41: actual vs correct printer both
TRACE: 2017/05/10 19:03:45 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 19:03:45 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 19:03:47 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 19:03:47 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 19:03:49 questionimpl.go:108: Type is has to implement all method defination from the interface
TRACE: 2017/05/10 19:03:49 questionimpl.go:111: correct Answer fir ID 10 has to implement all method defination from the interface
TRACE: 2017/05/10 19:03:49 CalculateScore.go:39: Binomial took %s 3.788947s
TRACE: 2017/05/10 19:03:49 CalculateScore.go:41: actual vs correct has to implement at least one method from the interface has to implement all method defination from the interface
TRACE: 2017/05/10 19:03:49 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 19:03:49 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 19:03:51 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 19:03:51 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 19:03:53 questionimpl.go:108: Type is a method that calls itself
TRACE: 2017/05/10 19:03:53 questionimpl.go:111: correct Answer fir ID 5 a method that calls itself
TRACE: 2017/05/10 19:03:53 CalculateScore.go:39: Binomial took %s 3.7494066s
TRACE: 2017/05/10 19:03:53 CalculateScore.go:41: actual vs correct a method that loops through a list a method that calls itself
TRACE: 2017/05/10 19:03:53 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 19:03:53 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 19:03:55 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 19:03:55 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 19:03:56 questionimpl.go:108: Type is c
TRACE: 2017/05/10 19:03:56 questionimpl.go:111: correct Answer fir ID 2 c
TRACE: 2017/05/10 19:03:56 CalculateScore.go:39: Binomial took %s 3.7622671s
TRACE: 2017/05/10 19:03:56 CalculateScore.go:41: actual vs correct c c
TRACE: 2017/05/10 19:03:56 CalculateScore.go:47: 263409560461970212832400
TRACE: 2017/05/10 19:03:57 CalculateScore.go:50: Binomial took %s 1.0000533s
TRACE: 2017/05/10 19:03:57 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 19:03:57 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 19:03:59 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 19:03:59 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 19:04:01 questionimpl.go:108: Type is shows path of current directory
TRACE: 2017/05/10 19:04:01 questionimpl.go:111: correct Answer fir ID 8 shows path of current directory
TRACE: 2017/05/10 19:04:01 CalculateScore.go:39: Binomial took %s 3.8449428s
TRACE: 2017/05/10 19:04:01 CalculateScore.go:41: actual vs correct shows the access defination for a diractory shows path of current directory
TRACE: 2017/05/10 19:04:01 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 19:04:01 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 19:04:03 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 19:04:03 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 19:04:05 questionimpl.go:108: Type is wraping up properties and methods
TRACE: 2017/05/10 19:04:05 questionimpl.go:111: correct Answer fir ID 4 wraping up properties and methods
TRACE: 2017/05/10 19:04:05 CalculateScore.go:39: Binomial took %s 3.9873766s
TRACE: 2017/05/10 19:04:05 CalculateScore.go:41: actual vs correct a way of delivering a class from another class  wraping up properties and methods
TRACE: 2017/05/10 19:04:05 CalculateScore.go:55: Binomial took %s 42.480312s
TRACE: 2017/05/10 19:04:14 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 19:04:14 QuestionList.go:18: language
TRACE: 2017/05/10 19:04:14 QuestionList.go:19: FGljwccqRBbPpdBkEJAl
TRACE: 2017/05/10 19:04:14 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 19:04:14 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 19:04:14 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 19:04:14 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 19:04:16 authenticatetokenimpl.go:47: FGljwccqRBbPpdBkEJAl
TRACE: 2017/05/10 19:04:16 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 19:04:16 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 19:04:18 authenticatetokenimpl.go:51: FGljwccqRBbPpdBkEJAl
TRACE: 2017/05/10 19:04:18 authenticatetokenimpl.go:59: Type is FGljwccqRBbPpdBkEJAl
TRACE: 2017/05/10 19:04:18 aunthenticate.go:42: 2017-05-10 19:04:18
TRACE: 2017/05/10 19:04:18 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 19:04:20 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 19:04:20 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 19:04:22 authenticatetokenimpl.go:30: {0xc042108a10 0xc042045b40}
TRACE: 2017/05/10 19:04:22 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 19:04:22 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 19:04:22 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 19:04:22 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 19:04:22 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 19:04:22 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 19:04:22 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 19:04:24 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc04228ac00 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 19:04:26 questionimpl.go:30: &{0xc042108d20 0x718ea0 0xc042294000 false [] <nil> 0xc0420fe2a0}
TRACE: 2017/05/10 19:05:25 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 19:05:25 QuestionList.go:18: fundamental
TRACE: 2017/05/10 19:05:25 QuestionList.go:19: FGljwccqRBbPpdBkEJAl
TRACE: 2017/05/10 19:05:25 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 19:05:25 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 19:05:25 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 19:05:25 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 19:05:27 authenticatetokenimpl.go:47: FGljwccqRBbPpdBkEJAl
TRACE: 2017/05/10 19:05:27 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 19:05:27 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 19:05:28 authenticatetokenimpl.go:51: FGljwccqRBbPpdBkEJAl
TRACE: 2017/05/10 19:05:28 authenticatetokenimpl.go:59: Type is FGljwccqRBbPpdBkEJAl
TRACE: 2017/05/10 19:05:28 aunthenticate.go:42: 2017-05-10 19:05:28
TRACE: 2017/05/10 19:05:28 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 19:05:30 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 19:05:30 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 19:05:32 authenticatetokenimpl.go:30: {0xc042128150 0xc04245c1b0}
TRACE: 2017/05/10 19:05:32 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 19:05:32 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 19:05:32 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 19:05:32 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 19:05:32 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 19:05:32 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 19:05:32 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 19:05:34 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc04233c720 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 19:05:36 questionimpl.go:30: &{0xc0421be850 0x718ea0 0xc0421d7120 false [] <nil> 0xc0422fe900}
TRACE: 2017/05/10 19:07:18 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 19:07:18 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 19:07:18 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/10 19:07:18 Login.go:16: entering manager.login
TRACE: 2017/05/10 19:07:18 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 19:07:18 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 19:07:18 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 19:07:22 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/10 19:07:22 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/10 19:07:22 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/10 19:07:24 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/10 19:07:24 loginimpl.go:81: executing query.....
TRACE: 2017/05/10 19:07:26 loginimpl.go:93: {0xc0421be000 0xc042106110}
TRACE: 2017/05/10 19:07:26 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/10 19:07:26 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/10 19:07:26 loginimpl.go:16: exntering in SaveToken() function {0 2 GUQbqFPyVWDBAOgbKfWH 2017-05-10 19:07:22.0780825 +0530 IST}
TRACE: 2017/05/10 19:07:26 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/10 19:07:28 loginimpl.go:20: token inserted
TRACE: 2017/05/10 19:07:28 loginimpl.go:21: {0 2 GUQbqFPyVWDBAOgbKfWH 2017-05-10 19:07:22.0780825 +0530 IST}
TRACE: 2017/05/10 19:07:30 loginimpl.go:33: {0xc0421be690 0xc042106a60}
TRACE: 2017/05/10 19:07:30 Login.go:48: {2 rakesh GUQbqFPyVWDBAOgbKfWH user}
TRACE: 2017/05/10 19:07:39 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 19:07:39 QuestionList.go:18: fundamental
TRACE: 2017/05/10 19:07:39 QuestionList.go:19: GUQbqFPyVWDBAOgbKfWH
TRACE: 2017/05/10 19:07:39 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 19:07:39 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 19:07:39 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 19:07:39 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 19:07:41 authenticatetokenimpl.go:47: GUQbqFPyVWDBAOgbKfWH
TRACE: 2017/05/10 19:07:41 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 19:07:41 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 19:07:43 authenticatetokenimpl.go:51: GUQbqFPyVWDBAOgbKfWH
TRACE: 2017/05/10 19:07:43 authenticatetokenimpl.go:59: Type is GUQbqFPyVWDBAOgbKfWH
TRACE: 2017/05/10 19:07:43 aunthenticate.go:42: 2017-05-10 19:07:43
TRACE: 2017/05/10 19:07:43 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 19:07:45 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 19:07:45 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 19:07:47 authenticatetokenimpl.go:30: {0xc0421081c0 0xc0420455b0}
TRACE: 2017/05/10 19:07:47 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 19:07:47 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 19:07:47 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 19:07:47 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 19:07:47 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 19:07:47 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 19:07:47 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 19:07:49 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc04228b620 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 19:07:51 questionimpl.go:30: &{0xc0421084d0 0x718ea0 0xc0421d6da0 false [] <nil> 0xc0422846c0}
TRACE: 2017/05/10 19:08:15 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/10 19:08:15 AnswerList.go:23: [{0 4 hiding unnecessary information to outside world} {0 8 shows the access defination for a diractory} {0 7 unit testing} {0 10 has to implement at least one method from the interface} {0 2 python} {0 9 a long running background process} {0 6 queue} {0 1 both } {0 5 a method that iterates over a block of code until a condition is solved} {0 3 method overloading}]
TRACE: 2017/05/10 19:08:15 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/10 19:08:15 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/10 19:08:15 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/10 19:08:15 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/10 19:08:15 CalculateScore.go:30: answerList [{0 4 hiding unnecessary information to outside world} {0 8 shows the access defination for a diractory} {0 7 unit testing} {0 10 has to implement at least one method from the interface} {0 2 python} {0 9 a long running background process} {0 6 queue} {0 1 both } {0 5 a method that iterates over a block of code until a condition is solved} {0 3 method overloading}]
TRACE: 2017/05/10 19:08:15 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 19:08:15 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 19:08:17 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 19:08:17 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 19:08:19 questionimpl.go:108: Type is wraping up properties and methods
TRACE: 2017/05/10 19:08:19 questionimpl.go:111: correct Answer fir ID 4 wraping up properties and methods
TRACE: 2017/05/10 19:08:19 CalculateScore.go:39: Binomial took %s 4.0501584s
TRACE: 2017/05/10 19:08:19 CalculateScore.go:41: actual vs correct hiding unnecessary information to outside world wraping up properties and methods
TRACE: 2017/05/10 19:08:19 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 19:08:19 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 19:08:21 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 19:08:21 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 19:08:23 questionimpl.go:108: Type is shows path of current directory
TRACE: 2017/05/10 19:08:23 questionimpl.go:111: correct Answer fir ID 8 shows path of current directory
TRACE: 2017/05/10 19:08:23 CalculateScore.go:39: Binomial took %s 4.0734895s
TRACE: 2017/05/10 19:08:23 CalculateScore.go:41: actual vs correct shows the access defination for a diractory shows path of current directory
TRACE: 2017/05/10 19:08:23 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 19:08:23 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 19:08:25 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 19:08:25 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 19:08:27 questionimpl.go:108: Type is big O notation
TRACE: 2017/05/10 19:08:27 questionimpl.go:111: correct Answer fir ID 7 big O notation
TRACE: 2017/05/10 19:08:27 CalculateScore.go:39: Binomial took %s 3.8334587s
TRACE: 2017/05/10 19:08:27 CalculateScore.go:41: actual vs correct unit testing big O notation
TRACE: 2017/05/10 19:08:27 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 19:08:27 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 19:08:29 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 19:08:29 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 19:08:31 questionimpl.go:108: Type is has to implement all method defination from the interface
TRACE: 2017/05/10 19:08:31 questionimpl.go:111: correct Answer fir ID 10 has to implement all method defination from the interface
TRACE: 2017/05/10 19:08:31 CalculateScore.go:39: Binomial took %s 4.0143057s
TRACE: 2017/05/10 19:08:31 CalculateScore.go:41: actual vs correct has to implement at least one method from the interface has to implement all method defination from the interface
TRACE: 2017/05/10 19:08:31 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 19:08:31 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 19:08:33 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 19:08:33 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 19:08:35 questionimpl.go:108: Type is c
TRACE: 2017/05/10 19:08:35 questionimpl.go:111: correct Answer fir ID 2 c
TRACE: 2017/05/10 19:08:35 CalculateScore.go:39: Binomial took %s 3.9683752s
TRACE: 2017/05/10 19:08:35 CalculateScore.go:41: actual vs correct python c
TRACE: 2017/05/10 19:08:35 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 19:08:35 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 19:08:37 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 19:08:37 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 19:08:39 questionimpl.go:108: Type is a long running background process
TRACE: 2017/05/10 19:08:39 questionimpl.go:111: correct Answer fir ID 9 a long running background process
TRACE: 2017/05/10 19:08:39 CalculateScore.go:39: Binomial took %s 4.0524869s
TRACE: 2017/05/10 19:08:39 CalculateScore.go:41: actual vs correct a long running background process a long running background process
TRACE: 2017/05/10 19:08:39 CalculateScore.go:47: 263409560461970212832400
TRACE: 2017/05/10 19:08:40 CalculateScore.go:50: Binomial took %s 1.0012055s
TRACE: 2017/05/10 19:08:40 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 19:08:40 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 19:08:42 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 19:08:42 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 19:08:44 questionimpl.go:108: Type is stack
TRACE: 2017/05/10 19:08:44 questionimpl.go:111: correct Answer fir ID 6 stack
TRACE: 2017/05/10 19:08:44 CalculateScore.go:39: Binomial took %s 3.8342057s
TRACE: 2017/05/10 19:08:44 CalculateScore.go:41: actual vs correct queue stack
TRACE: 2017/05/10 19:08:44 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 19:08:44 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 19:08:46 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 19:08:46 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 19:08:48 questionimpl.go:108: Type is both
TRACE: 2017/05/10 19:08:48 questionimpl.go:111: correct Answer fir ID 1 both
TRACE: 2017/05/10 19:08:48 CalculateScore.go:39: Binomial took %s 3.803642s
TRACE: 2017/05/10 19:08:48 CalculateScore.go:41: actual vs correct both  both
TRACE: 2017/05/10 19:08:48 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 19:08:48 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 19:08:50 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 19:08:50 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 19:08:52 questionimpl.go:108: Type is a method that calls itself
TRACE: 2017/05/10 19:08:52 questionimpl.go:111: correct Answer fir ID 5 a method that calls itself
TRACE: 2017/05/10 19:08:52 CalculateScore.go:39: Binomial took %s 4.1075839s
TRACE: 2017/05/10 19:08:52 CalculateScore.go:41: actual vs correct a method that iterates over a block of code until a condition is solved a method that calls itself
TRACE: 2017/05/10 19:08:52 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 19:08:52 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 19:08:54 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 19:08:54 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 19:08:56 questionimpl.go:108: Type is method overriding
TRACE: 2017/05/10 19:08:56 questionimpl.go:111: correct Answer fir ID 3 method overriding
TRACE: 2017/05/10 19:08:56 CalculateScore.go:39: Binomial took %s 3.6281455s
TRACE: 2017/05/10 19:08:56 CalculateScore.go:41: actual vs correct method overloading method overriding
TRACE: 2017/05/10 19:08:56 CalculateScore.go:55: Binomial took %s 40.3690578s
TRACE: 2017/05/10 19:10:01 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 19:10:01 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 19:10:01 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/10 19:10:01 Login.go:16: entering manager.login
TRACE: 2017/05/10 19:10:01 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 19:10:01 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 19:10:01 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 19:10:05 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/10 19:10:05 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/10 19:10:05 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/10 19:10:07 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/10 19:10:07 loginimpl.go:81: executing query.....
TRACE: 2017/05/10 19:10:09 loginimpl.go:93: {0xc0421283f0 0xc0421068f0}
TRACE: 2017/05/10 19:10:09 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/10 19:10:09 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/10 19:10:09 loginimpl.go:16: exntering in SaveToken() function {0 2 aTxOzAGGcPLqXzvZQflK 2017-05-10 19:10:05.5359038 +0530 IST}
TRACE: 2017/05/10 19:10:09 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/10 19:10:11 loginimpl.go:20: token inserted
TRACE: 2017/05/10 19:10:11 loginimpl.go:21: {0 2 aTxOzAGGcPLqXzvZQflK 2017-05-10 19:10:05.5359038 +0530 IST}
TRACE: 2017/05/10 19:10:13 loginimpl.go:33: {0xc042108b60 0xc04245ca10}
TRACE: 2017/05/10 19:10:13 Login.go:48: {2 rakesh aTxOzAGGcPLqXzvZQflK user}
TRACE: 2017/05/10 19:10:39 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 19:10:39 QuestionList.go:18: fundamental
TRACE: 2017/05/10 19:10:39 QuestionList.go:19: aTxOzAGGcPLqXzvZQflK
TRACE: 2017/05/10 19:10:39 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 19:10:39 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 19:10:39 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 19:10:39 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 19:10:41 authenticatetokenimpl.go:47: aTxOzAGGcPLqXzvZQflK
TRACE: 2017/05/10 19:10:41 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 19:10:41 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 19:10:43 authenticatetokenimpl.go:51: aTxOzAGGcPLqXzvZQflK
TRACE: 2017/05/10 19:10:43 authenticatetokenimpl.go:59: Type is aTxOzAGGcPLqXzvZQflK
TRACE: 2017/05/10 19:10:43 aunthenticate.go:42: 2017-05-10 19:10:43
TRACE: 2017/05/10 19:10:43 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 19:10:45 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 19:10:45 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 19:10:47 authenticatetokenimpl.go:30: {0xc042109730 0xc04245d930}
TRACE: 2017/05/10 19:10:47 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 19:10:47 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 19:10:47 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 19:10:47 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 19:10:47 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 19:10:47 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 19:10:47 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 19:10:49 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0422d5680 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 19:10:51 questionimpl.go:30: &{0xc0421be070 0x718ea0 0xc0420fa360 false [] <nil> 0xc042404240}
TRACE: 2017/05/10 19:11:51 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/10 19:11:51 AnswerList.go:23: [{0 8 } {0 7 } {0 9 } {0 1 } {0 6 } {0 10 } {0 3 } {0 2 } {0 5 } {0 4 }]
TRACE: 2017/05/10 19:11:51 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/10 19:11:51 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/10 19:11:51 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/10 19:11:51 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/10 19:11:51 CalculateScore.go:30: answerList [{0 8 } {0 7 } {0 9 } {0 1 } {0 6 } {0 10 } {0 3 } {0 2 } {0 5 } {0 4 }]
TRACE: 2017/05/10 19:11:51 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 19:11:51 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 19:11:53 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 19:11:53 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 19:11:55 questionimpl.go:108: Type is shows path of current directory
TRACE: 2017/05/10 19:11:55 questionimpl.go:111: correct Answer fir ID 8 shows path of current directory
TRACE: 2017/05/10 19:11:55 CalculateScore.go:39: Binomial took %s 3.6150513s
TRACE: 2017/05/10 19:11:55 CalculateScore.go:41: actual vs correct  shows path of current directory
TRACE: 2017/05/10 19:11:55 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 19:11:55 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 19:11:57 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 19:11:57 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 19:11:58 questionimpl.go:108: Type is big O notation
TRACE: 2017/05/10 19:11:58 questionimpl.go:111: correct Answer fir ID 7 big O notation
TRACE: 2017/05/10 19:11:58 CalculateScore.go:39: Binomial took %s 3.7052369s
TRACE: 2017/05/10 19:11:58 CalculateScore.go:41: actual vs correct  big O notation
TRACE: 2017/05/10 19:11:58 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 19:11:58 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 19:12:00 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 19:12:00 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 19:12:02 questionimpl.go:108: Type is a long running background process
TRACE: 2017/05/10 19:12:02 questionimpl.go:111: correct Answer fir ID 9 a long running background process
TRACE: 2017/05/10 19:12:02 CalculateScore.go:39: Binomial took %s 3.7055207s
TRACE: 2017/05/10 19:12:02 CalculateScore.go:41: actual vs correct  a long running background process
TRACE: 2017/05/10 19:12:02 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 19:12:02 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 19:12:04 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 19:12:04 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 19:12:06 questionimpl.go:108: Type is both
TRACE: 2017/05/10 19:12:06 questionimpl.go:111: correct Answer fir ID 1 both
TRACE: 2017/05/10 19:12:06 CalculateScore.go:39: Binomial took %s 4.0450951s
TRACE: 2017/05/10 19:12:06 CalculateScore.go:41: actual vs correct  both
TRACE: 2017/05/10 19:12:06 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 19:12:06 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 19:12:08 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 19:12:08 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 19:12:10 questionimpl.go:108: Type is stack
TRACE: 2017/05/10 19:12:10 questionimpl.go:111: correct Answer fir ID 6 stack
TRACE: 2017/05/10 19:12:10 CalculateScore.go:39: Binomial took %s 4.0355157s
TRACE: 2017/05/10 19:12:10 CalculateScore.go:41: actual vs correct  stack
TRACE: 2017/05/10 19:12:10 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 19:12:10 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 19:12:12 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 19:12:12 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 19:12:14 questionimpl.go:108: Type is has to implement all method defination from the interface
TRACE: 2017/05/10 19:12:14 questionimpl.go:111: correct Answer fir ID 10 has to implement all method defination from the interface
TRACE: 2017/05/10 19:12:14 CalculateScore.go:39: Binomial took %s 3.6898033s
TRACE: 2017/05/10 19:12:14 CalculateScore.go:41: actual vs correct  has to implement all method defination from the interface
TRACE: 2017/05/10 19:12:14 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 19:12:14 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 19:12:16 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 19:12:16 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 19:12:18 questionimpl.go:108: Type is method overriding
TRACE: 2017/05/10 19:12:18 questionimpl.go:111: correct Answer fir ID 3 method overriding
TRACE: 2017/05/10 19:12:18 CalculateScore.go:39: Binomial took %s 3.945458s
TRACE: 2017/05/10 19:12:18 CalculateScore.go:41: actual vs correct  method overriding
TRACE: 2017/05/10 19:12:18 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 19:12:18 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 19:12:20 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 19:12:20 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 19:12:22 questionimpl.go:108: Type is c
TRACE: 2017/05/10 19:12:22 questionimpl.go:111: correct Answer fir ID 2 c
TRACE: 2017/05/10 19:12:22 CalculateScore.go:39: Binomial took %s 4.103085s
TRACE: 2017/05/10 19:12:22 CalculateScore.go:41: actual vs correct  c
TRACE: 2017/05/10 19:12:22 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 19:12:22 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 19:12:24 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 19:12:24 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 19:12:26 questionimpl.go:108: Type is a method that calls itself
TRACE: 2017/05/10 19:12:26 questionimpl.go:111: correct Answer fir ID 5 a method that calls itself
TRACE: 2017/05/10 19:12:26 CalculateScore.go:39: Binomial took %s 4.0588336s
TRACE: 2017/05/10 19:12:26 CalculateScore.go:41: actual vs correct  a method that calls itself
TRACE: 2017/05/10 19:12:26 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 19:12:26 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 19:12:28 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 19:12:28 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 19:12:30 questionimpl.go:108: Type is wraping up properties and methods
TRACE: 2017/05/10 19:12:30 questionimpl.go:111: correct Answer fir ID 4 wraping up properties and methods
TRACE: 2017/05/10 19:12:30 CalculateScore.go:39: Binomial took %s 4.0262748s
TRACE: 2017/05/10 19:12:30 CalculateScore.go:41: actual vs correct  wraping up properties and methods
TRACE: 2017/05/10 19:12:30 CalculateScore.go:55: Binomial took %s 38.930876s
TRACE: 2017/05/10 19:12:46 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 19:12:46 QuestionList.go:18: java
TRACE: 2017/05/10 19:12:46 QuestionList.go:19: aTxOzAGGcPLqXzvZQflK
TRACE: 2017/05/10 19:12:46 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 19:12:46 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 19:12:46 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 19:12:46 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 19:12:49 authenticatetokenimpl.go:47: aTxOzAGGcPLqXzvZQflK
TRACE: 2017/05/10 19:12:49 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 19:12:49 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 19:12:50 authenticatetokenimpl.go:51: aTxOzAGGcPLqXzvZQflK
TRACE: 2017/05/10 19:12:50 authenticatetokenimpl.go:59: Type is aTxOzAGGcPLqXzvZQflK
TRACE: 2017/05/10 19:12:50 aunthenticate.go:42: 2017-05-10 19:12:50
TRACE: 2017/05/10 19:12:50 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 19:12:53 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 19:12:53 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 19:12:55 authenticatetokenimpl.go:30: {0xc042128000 0xc042136a60}
TRACE: 2017/05/10 19:12:55 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 19:12:55 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 19:12:55 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 19:12:55 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 19:12:55 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 19:12:55 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 19:12:55 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 19:12:57 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0424e07e0 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 19:12:58 questionimpl.go:30: &{0xc042139030 0x718ea0 0xc0420d5b80 false [] <nil> 0xc042006ba0}
TRACE: 2017/05/10 19:22:45 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/05/10 19:22:45 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/05/10 19:22:45 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/05/10 19:22:45 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/05/10 19:22:45 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/05/10 19:22:45 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/05/10 19:22:45 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/05/10 19:22:45 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/05/10 19:22:45 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/05/10 19:22:45 debug.go:45: [GIN-debug] Listening and serving HTTP on :8084
TRACE: 2017/05/10 19:25:42 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 19:25:42 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 19:25:42 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/10 19:25:42 Login.go:16: entering manager.login
TRACE: 2017/05/10 19:25:42 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 19:25:42 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 19:25:42 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 19:25:46 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/10 19:25:46 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/10 19:25:46 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/10 19:25:48 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/10 19:25:48 loginimpl.go:81: executing query.....
TRACE: 2017/05/10 19:25:50 loginimpl.go:93: {0xc0422e0070 0xc0422dc0f0}
TRACE: 2017/05/10 19:25:50 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/10 19:25:50 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/10 19:25:50 loginimpl.go:16: exntering in SaveToken() function {0 2 TrtKLGUvfVmcNcRJifDe 2017-05-10 19:25:46.8971148 +0530 IST}
TRACE: 2017/05/10 19:25:50 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/10 19:25:52 loginimpl.go:20: token inserted
TRACE: 2017/05/10 19:25:52 loginimpl.go:21: {0 2 TrtKLGUvfVmcNcRJifDe 2017-05-10 19:25:46.8971148 +0530 IST}
TRACE: 2017/05/10 19:25:54 loginimpl.go:33: {0xc0422e03f0 0xc042316050}
TRACE: 2017/05/10 19:25:54 Login.go:48: {2 rakesh TrtKLGUvfVmcNcRJifDe user}
TRACE: 2017/05/10 19:26:02 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 19:26:02 QuestionList.go:18: fundamental
TRACE: 2017/05/10 19:26:02 QuestionList.go:19: TrtKLGUvfVmcNcRJifDe
TRACE: 2017/05/10 19:26:02 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 19:26:02 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 19:26:02 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 19:26:02 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 19:26:04 authenticatetokenimpl.go:47: TrtKLGUvfVmcNcRJifDe
TRACE: 2017/05/10 19:26:04 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 19:26:04 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 19:26:06 authenticatetokenimpl.go:51: TrtKLGUvfVmcNcRJifDe
TRACE: 2017/05/10 19:26:06 authenticatetokenimpl.go:59: Type is TrtKLGUvfVmcNcRJifDe
TRACE: 2017/05/10 19:26:06 aunthenticate.go:42: 2017-05-10 19:26:06
TRACE: 2017/05/10 19:26:06 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 19:26:08 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 19:26:08 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 19:26:10 authenticatetokenimpl.go:30: {0xc042032bd0 0xc042005600}
TRACE: 2017/05/10 19:26:10 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 19:26:10 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 19:26:10 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 19:26:10 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 19:26:10 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 19:26:10 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 19:26:10 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 19:26:12 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0422ba780 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 19:26:14 questionimpl.go:30: &{0xc042032fc0 0x718ea0 0xc04232dd20 false [] <nil> 0xc042007890}
TRACE: 2017/05/10 19:26:45 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/10 19:26:45 AnswerList.go:23: [{0 2 python} {0 8 } {0 9 } {0 10 } {0 4 } {0 1 } {0 5 } {0 7 } {0 6 } {0 3 }]
TRACE: 2017/05/10 19:26:45 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/10 19:26:45 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/10 19:26:45 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/10 19:26:45 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/10 19:26:45 CalculateScore.go:30: answerList [{0 2 python} {0 8 } {0 9 } {0 10 } {0 4 } {0 1 } {0 5 } {0 7 } {0 6 } {0 3 }]
TRACE: 2017/05/10 19:26:45 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 19:26:45 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 19:26:47 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 19:26:47 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 19:26:49 questionimpl.go:108: Type is c
TRACE: 2017/05/10 19:26:49 questionimpl.go:111: correct Answer fir ID 2 c
TRACE: 2017/05/10 19:26:49 CalculateScore.go:39: Binomial took %s 3.7740186s
TRACE: 2017/05/10 19:26:49 CalculateScore.go:41: actual vs correct python c
TRACE: 2017/05/10 19:26:49 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 19:26:49 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 19:26:51 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 19:26:51 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 19:26:53 questionimpl.go:108: Type is shows path of current directory
TRACE: 2017/05/10 19:26:53 questionimpl.go:111: correct Answer fir ID 8 shows path of current directory
TRACE: 2017/05/10 19:26:53 CalculateScore.go:39: Binomial took %s 3.6284399s
TRACE: 2017/05/10 19:26:53 CalculateScore.go:41: actual vs correct  shows path of current directory
TRACE: 2017/05/10 19:26:53 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 19:26:53 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 19:26:55 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 19:26:55 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 19:26:57 questionimpl.go:108: Type is a long running background process
TRACE: 2017/05/10 19:26:57 questionimpl.go:111: correct Answer fir ID 9 a long running background process
TRACE: 2017/05/10 19:26:57 CalculateScore.go:39: Binomial took %s 4.0365663s
TRACE: 2017/05/10 19:26:57 CalculateScore.go:41: actual vs correct  a long running background process
TRACE: 2017/05/10 19:26:57 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 19:26:57 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 19:26:59 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 19:26:59 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 19:27:01 questionimpl.go:108: Type is has to implement all method defination from the interface
TRACE: 2017/05/10 19:27:01 questionimpl.go:111: correct Answer fir ID 10 has to implement all method defination from the interface
TRACE: 2017/05/10 19:27:01 CalculateScore.go:39: Binomial took %s 4.0033079s
TRACE: 2017/05/10 19:27:01 CalculateScore.go:41: actual vs correct  has to implement all method defination from the interface
TRACE: 2017/05/10 19:27:01 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 19:27:01 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 19:27:03 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 19:27:03 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 19:27:03 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 19:27:03 QuestionList.go:18: language
TRACE: 2017/05/10 19:27:03 QuestionList.go:19: TrtKLGUvfVmcNcRJifDe
TRACE: 2017/05/10 19:27:03 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 19:27:03 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 19:27:03 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 19:27:03 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 19:27:05 questionimpl.go:108: Type is wraping up properties and methods
TRACE: 2017/05/10 19:27:05 questionimpl.go:111: correct Answer fir ID 4 wraping up properties and methods
TRACE: 2017/05/10 19:27:05 CalculateScore.go:39: Binomial took %s 4.0036154s
TRACE: 2017/05/10 19:27:05 CalculateScore.go:41: actual vs correct  wraping up properties and methods
TRACE: 2017/05/10 19:27:05 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 19:27:05 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 19:27:05 authenticatetokenimpl.go:47: TrtKLGUvfVmcNcRJifDe
TRACE: 2017/05/10 19:27:05 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 19:27:05 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 19:27:07 authenticatetokenimpl.go:51: TrtKLGUvfVmcNcRJifDe
TRACE: 2017/05/10 19:27:07 authenticatetokenimpl.go:59: Type is TrtKLGUvfVmcNcRJifDe
TRACE: 2017/05/10 19:27:07 aunthenticate.go:42: 2017-05-10 19:27:07
TRACE: 2017/05/10 19:27:07 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 19:27:09 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 19:27:09 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 19:27:11 authenticatetokenimpl.go:30: {0xc0422b4cb0 0xc0423655c0}
TRACE: 2017/05/10 19:27:11 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 19:27:11 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 19:27:11 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 19:27:11 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 19:27:11 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 19:27:11 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 19:27:11 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 19:27:13 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0423b6540 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 19:27:14 questionimpl.go:30: &{0xc042033ce0 0x718ea0 0xc0423b4720 false [] <nil> 0xc0423a4870}
TRACE: 2017/05/10 19:27:26 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 19:28:39 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 19:28:39 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 19:28:39 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/10 19:28:39 Login.go:16: entering manager.login
TRACE: 2017/05/10 19:28:39 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 19:28:39 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 19:28:39 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 19:28:43 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/10 19:28:43 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/10 19:28:43 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/10 19:28:45 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/10 19:28:45 loginimpl.go:81: executing query.....
TRACE: 2017/05/10 19:28:45 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 19:28:45 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 19:28:45 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/10 19:28:45 Login.go:16: entering manager.login
TRACE: 2017/05/10 19:28:45 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 19:28:45 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 19:28:45 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 19:28:47 loginimpl.go:93: {0xc0421488c0 0xc042004f80}
TRACE: 2017/05/10 19:28:47 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/10 19:28:47 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/10 19:28:47 loginimpl.go:16: exntering in SaveToken() function {0 2 dEYLssvFRWYoXwfVzkrp 2017-05-10 19:28:43.6683732 +0530 IST}
TRACE: 2017/05/10 19:28:47 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/10 19:28:49 loginimpl.go:20: token inserted
TRACE: 2017/05/10 19:28:49 loginimpl.go:21: {0 2 dEYLssvFRWYoXwfVzkrp 2017-05-10 19:28:43.6683732 +0530 IST}
TRACE: 2017/05/10 19:28:49 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/10 19:28:49 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/10 19:28:49 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/10 19:28:51 loginimpl.go:33: {0xc042138150 0xc042136d50}
TRACE: 2017/05/10 19:28:51 Login.go:48: {2 rakesh dEYLssvFRWYoXwfVzkrp user}
TRACE: 2017/05/10 19:28:51 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/10 19:28:51 loginimpl.go:81: executing query.....
TRACE: 2017/05/10 19:28:53 loginimpl.go:93: {0xc042148e70 0xc0421372f0}
TRACE: 2017/05/10 19:28:53 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/10 19:28:53 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/10 19:28:53 loginimpl.go:16: exntering in SaveToken() function {0 2 btsRJvNTDtdzsIaTnTyo 2017-05-10 19:28:49.8380915 +0530 IST}
TRACE: 2017/05/10 19:28:53 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/10 19:28:55 loginimpl.go:20: token inserted
TRACE: 2017/05/10 19:28:55 loginimpl.go:21: {0 2 btsRJvNTDtdzsIaTnTyo 2017-05-10 19:28:49.8380915 +0530 IST}
TRACE: 2017/05/10 19:28:57 loginimpl.go:33: {0xc042149030 0xc0420054b0}
TRACE: 2017/05/10 19:28:57 Login.go:48: {2 rakesh btsRJvNTDtdzsIaTnTyo user}
TRACE: 2017/05/10 19:29:03 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 19:29:03 QuestionList.go:18: fundamental
TRACE: 2017/05/10 19:29:03 QuestionList.go:19: btsRJvNTDtdzsIaTnTyo
TRACE: 2017/05/10 19:29:03 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 19:29:03 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 19:29:03 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 19:29:03 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 19:29:06 authenticatetokenimpl.go:47: btsRJvNTDtdzsIaTnTyo
TRACE: 2017/05/10 19:29:06 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 19:29:06 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 19:29:07 authenticatetokenimpl.go:51: btsRJvNTDtdzsIaTnTyo
TRACE: 2017/05/10 19:29:07 authenticatetokenimpl.go:59: Type is btsRJvNTDtdzsIaTnTyo
TRACE: 2017/05/10 19:29:07 aunthenticate.go:42: 2017-05-10 19:29:07
TRACE: 2017/05/10 19:29:07 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 19:29:09 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 19:29:09 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 19:29:11 authenticatetokenimpl.go:30: {0xc04211a380 0xc042137f50}
TRACE: 2017/05/10 19:29:11 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 19:29:11 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 19:29:11 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 19:29:11 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 19:29:11 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 19:29:11 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 19:29:11 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 19:29:13 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0421d8b40 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 19:29:15 questionimpl.go:30: &{0xc042129260 0x718ea0 0xc0420fb1c0 false [] <nil> 0xc0422e5440}
TRACE: 2017/05/10 19:29:28 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/10 19:29:28 AnswerList.go:23: [{0 4 wraping up properties and method} {0 10 has to implement all method defination from the interface} {0 9 a process that is eating memory} {0 3 method overriding} {0 6 stack} {0 8 shows the access defination for a diractory} {0 2 objective c} {0 7 unit testing} {0 5 a method that contains multiple defination} {0 1 }]
TRACE: 2017/05/10 19:29:28 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/10 19:29:28 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/10 19:29:28 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/10 19:29:28 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/10 19:29:28 CalculateScore.go:30: answerList [{0 4 wraping up properties and method} {0 10 has to implement all method defination from the interface} {0 9 a process that is eating memory} {0 3 method overriding} {0 6 stack} {0 8 shows the access defination for a diractory} {0 2 objective c} {0 7 unit testing} {0 5 a method that contains multiple defination} {0 1 }]
TRACE: 2017/05/10 19:29:28 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 19:29:28 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 19:29:31 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 19:29:31 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 19:29:33 questionimpl.go:108: Type is wraping up properties and methods
TRACE: 2017/05/10 19:29:33 questionimpl.go:111: correct Answer fir ID 4 wraping up properties and methods
TRACE: 2017/05/10 19:29:33 CalculateScore.go:39: Binomial took %s 4.0564944s
TRACE: 2017/05/10 19:29:33 CalculateScore.go:41: actual vs correct wraping up properties and method wraping up properties and methods
TRACE: 2017/05/10 19:29:33 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 19:29:33 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 19:29:35 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 19:29:35 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 19:29:36 questionimpl.go:108: Type is has to implement all method defination from the interface
TRACE: 2017/05/10 19:29:36 questionimpl.go:111: correct Answer fir ID 10 has to implement all method defination from the interface
TRACE: 2017/05/10 19:29:36 CalculateScore.go:39: Binomial took %s 3.8130956s
TRACE: 2017/05/10 19:29:36 CalculateScore.go:41: actual vs correct has to implement all method defination from the interface has to implement all method defination from the interface
TRACE: 2017/05/10 19:29:36 CalculateScore.go:47: 263409560461970212832400
TRACE: 2017/05/10 19:29:37 CalculateScore.go:50: Binomial took %s 1.0017329s
TRACE: 2017/05/10 19:29:37 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 19:29:37 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 19:29:40 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 19:29:40 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 19:29:41 questionimpl.go:108: Type is a long running background process
TRACE: 2017/05/10 19:29:41 questionimpl.go:111: correct Answer fir ID 9 a long running background process
TRACE: 2017/05/10 19:29:41 CalculateScore.go:39: Binomial took %s 4.0458761s
TRACE: 2017/05/10 19:29:41 CalculateScore.go:41: actual vs correct a process that is eating memory a long running background process
TRACE: 2017/05/10 19:29:41 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 19:29:41 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 19:29:44 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 19:29:44 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 19:29:45 questionimpl.go:108: Type is method overriding
TRACE: 2017/05/10 19:29:45 questionimpl.go:111: correct Answer fir ID 3 method overriding
TRACE: 2017/05/10 19:29:45 CalculateScore.go:39: Binomial took %s 3.9977287s
TRACE: 2017/05/10 19:29:45 CalculateScore.go:41: actual vs correct method overriding method overriding
TRACE: 2017/05/10 19:29:45 CalculateScore.go:47: 263409560461970212832400
TRACE: 2017/05/10 19:29:46 CalculateScore.go:50: Binomial took %s 1.0011989s
TRACE: 2017/05/10 19:29:46 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 19:29:46 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 19:29:49 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 19:29:49 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 19:29:50 questionimpl.go:108: Type is stack
TRACE: 2017/05/10 19:29:50 questionimpl.go:111: correct Answer fir ID 6 stack
TRACE: 2017/05/10 19:29:50 CalculateScore.go:39: Binomial took %s 4.0965838s
TRACE: 2017/05/10 19:29:50 CalculateScore.go:41: actual vs correct stack stack
TRACE: 2017/05/10 19:29:50 CalculateScore.go:47: 263409560461970212832400
TRACE: 2017/05/10 19:29:51 CalculateScore.go:50: Binomial took %s 1.0012171s
TRACE: 2017/05/10 19:29:51 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 19:29:51 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 19:29:54 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 19:29:54 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 19:29:56 questionimpl.go:108: Type is shows path of current directory
TRACE: 2017/05/10 19:29:56 questionimpl.go:111: correct Answer fir ID 8 shows path of current directory
TRACE: 2017/05/10 19:29:56 CalculateScore.go:39: Binomial took %s 4.0836747s
TRACE: 2017/05/10 19:29:56 CalculateScore.go:41: actual vs correct shows the access defination for a diractory shows path of current directory
TRACE: 2017/05/10 19:29:56 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 19:29:56 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 19:29:58 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 19:29:58 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 19:30:00 questionimpl.go:108: Type is c
TRACE: 2017/05/10 19:30:00 questionimpl.go:111: correct Answer fir ID 2 c
TRACE: 2017/05/10 19:30:00 CalculateScore.go:39: Binomial took %s 4.0054368s
TRACE: 2017/05/10 19:30:00 CalculateScore.go:41: actual vs correct objective c c
TRACE: 2017/05/10 19:30:00 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 19:30:00 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 19:30:02 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 19:30:02 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 19:30:04 questionimpl.go:108: Type is big O notation
TRACE: 2017/05/10 19:30:04 questionimpl.go:111: correct Answer fir ID 7 big O notation
TRACE: 2017/05/10 19:30:04 CalculateScore.go:39: Binomial took %s 4.0078838s
TRACE: 2017/05/10 19:30:04 CalculateScore.go:41: actual vs correct unit testing big O notation
TRACE: 2017/05/10 19:30:04 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 19:30:04 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 19:30:06 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 19:30:06 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 19:30:08 questionimpl.go:108: Type is a method that calls itself
TRACE: 2017/05/10 19:30:08 questionimpl.go:111: correct Answer fir ID 5 a method that calls itself
TRACE: 2017/05/10 19:30:08 CalculateScore.go:39: Binomial took %s 3.9595401s
TRACE: 2017/05/10 19:30:08 CalculateScore.go:41: actual vs correct a method that contains multiple defination a method that calls itself
TRACE: 2017/05/10 19:30:08 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 19:30:08 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 19:30:10 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 19:30:10 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 19:30:11 questionimpl.go:108: Type is both
TRACE: 2017/05/10 19:30:11 questionimpl.go:111: correct Answer fir ID 1 both
TRACE: 2017/05/10 19:30:11 CalculateScore.go:39: Binomial took %s 3.824185s
TRACE: 2017/05/10 19:30:11 CalculateScore.go:41: actual vs correct  both
TRACE: 2017/05/10 19:30:11 CalculateScore.go:55: Binomial took %s 42.8976364s
TRACE: 2017/05/10 19:30:42 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 19:30:42 QuestionList.go:18: language
TRACE: 2017/05/10 19:30:42 QuestionList.go:19: btsRJvNTDtdzsIaTnTyo
TRACE: 2017/05/10 19:30:42 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 19:30:42 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 19:30:42 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 19:30:42 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 19:30:44 authenticatetokenimpl.go:47: btsRJvNTDtdzsIaTnTyo
TRACE: 2017/05/10 19:30:44 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 19:30:44 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 19:30:46 authenticatetokenimpl.go:51: btsRJvNTDtdzsIaTnTyo
TRACE: 2017/05/10 19:30:46 authenticatetokenimpl.go:59: Type is btsRJvNTDtdzsIaTnTyo
TRACE: 2017/05/10 19:30:46 aunthenticate.go:42: 2017-05-10 19:30:46
TRACE: 2017/05/10 19:30:46 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 19:30:48 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 19:30:48 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 19:30:50 authenticatetokenimpl.go:30: {0xc042129110 0xc0422dd650}
TRACE: 2017/05/10 19:30:50 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 19:30:50 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 19:30:50 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 19:30:50 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 19:30:50 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 19:30:50 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 19:30:50 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 19:30:52 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc04203af00 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 19:30:54 questionimpl.go:30: &{0xc0421496c0 0x718ea0 0xc042356d00 false [] <nil> 0xc0423621b0}
TRACE: 2017/05/10 19:31:31 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 19:31:31 QuestionList.go:18: language
TRACE: 2017/05/10 19:31:31 QuestionList.go:19: btsRJvNTDtdzsIaTnTyo
TRACE: 2017/05/10 19:31:31 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 19:31:31 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 19:31:31 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 19:31:31 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 19:31:33 authenticatetokenimpl.go:47: btsRJvNTDtdzsIaTnTyo
TRACE: 2017/05/10 19:31:33 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 19:31:33 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 19:31:35 authenticatetokenimpl.go:51: btsRJvNTDtdzsIaTnTyo
TRACE: 2017/05/10 19:31:35 authenticatetokenimpl.go:59: Type is btsRJvNTDtdzsIaTnTyo
TRACE: 2017/05/10 19:31:35 aunthenticate.go:42: 2017-05-10 19:31:35
TRACE: 2017/05/10 19:31:35 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 19:31:37 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 19:31:37 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 19:31:39 authenticatetokenimpl.go:30: {0xc042138310 0xc04229e6d0}
TRACE: 2017/05/10 19:31:39 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 19:31:39 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 19:31:39 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 19:31:39 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 19:31:39 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 19:31:39 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 19:31:39 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 19:31:41 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0423ad020 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 19:31:43 questionimpl.go:30: &{0xc04211a150 0x718ea0 0xc0422de2e0 false [] <nil> 0xc0422a4180}
TRACE: 2017/05/10 19:52:57 Login.go:14: entering webservice.Login()
TRACE: 2017/05/10 19:52:57 Login.go:19: calling manager.Login()
TRACE: 2017/05/10 19:52:57 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/10 19:52:57 Login.go:16: entering manager.login
TRACE: 2017/05/10 19:52:57 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/10 19:52:57 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/10 19:52:57 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/10 19:53:01 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/10 19:53:01 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/10 19:53:01 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/10 19:53:02 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/10 19:53:02 loginimpl.go:81: executing query.....
TRACE: 2017/05/10 19:53:04 loginimpl.go:93: {0xc04211a770 0xc04229e040}
TRACE: 2017/05/10 19:53:04 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/10 19:53:04 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/10 19:53:04 loginimpl.go:16: exntering in SaveToken() function {0 2 YHgihaiKAcyoJNXJxOeF 2017-05-10 19:53:01.0110797 +0530 IST}
TRACE: 2017/05/10 19:53:04 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/10 19:53:06 loginimpl.go:20: token inserted
TRACE: 2017/05/10 19:53:06 loginimpl.go:21: {0 2 YHgihaiKAcyoJNXJxOeF 2017-05-10 19:53:01.0110797 +0530 IST}
TRACE: 2017/05/10 19:53:08 loginimpl.go:33: {0xc042138540 0xc04229e8b0}
TRACE: 2017/05/10 19:53:08 Login.go:48: {2 rakesh YHgihaiKAcyoJNXJxOeF user}
TRACE: 2017/05/10 19:53:19 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 19:53:19 QuestionList.go:18: fundamental
TRACE: 2017/05/10 19:53:19 QuestionList.go:19: YHgihaiKAcyoJNXJxOeF
TRACE: 2017/05/10 19:53:19 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 19:53:19 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 19:53:19 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 19:53:19 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 19:53:21 authenticatetokenimpl.go:47: YHgihaiKAcyoJNXJxOeF
TRACE: 2017/05/10 19:53:21 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 19:53:21 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 19:53:22 authenticatetokenimpl.go:51: YHgihaiKAcyoJNXJxOeF
TRACE: 2017/05/10 19:53:22 authenticatetokenimpl.go:59: Type is YHgihaiKAcyoJNXJxOeF
TRACE: 2017/05/10 19:53:22 aunthenticate.go:42: 2017-05-10 19:53:22
TRACE: 2017/05/10 19:53:22 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 19:53:25 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 19:53:25 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 19:53:26 authenticatetokenimpl.go:30: {0xc0421285b0 0xc0422dc810}
TRACE: 2017/05/10 19:53:26 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 19:53:26 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 19:53:26 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 19:53:26 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 19:53:26 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 19:53:26 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 19:53:26 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 19:53:29 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0421bc8a0 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 19:53:31 questionimpl.go:30: &{0xc042148310 0x718ea0 0xc0420086a0 false [] <nil> 0xc042144ae0}
TRACE: 2017/05/10 19:53:54 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/10 19:53:54 AnswerList.go:23: [{0 2 } {0 10 has to implement none of the methods from interface} {0 7 performance testing} {0 1 printer} {0 6 stack} {0 8 shows the list of files in the directory} {0 4 a way of delivering a class from another class } {0 3 abstract class} {0 5 a method that contains multiple defination} {0 9 a process that is dead}]
TRACE: 2017/05/10 19:53:54 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/10 19:53:54 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/10 19:53:54 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/10 19:53:54 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/10 19:53:54 CalculateScore.go:30: answerList [{0 2 } {0 10 has to implement none of the methods from interface} {0 7 performance testing} {0 1 printer} {0 6 stack} {0 8 shows the list of files in the directory} {0 4 a way of delivering a class from another class } {0 3 abstract class} {0 5 a method that contains multiple defination} {0 9 a process that is dead}]
TRACE: 2017/05/10 19:53:54 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 19:53:54 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 19:53:56 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 19:53:56 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 19:53:58 questionimpl.go:108: Type is c
TRACE: 2017/05/10 19:53:58 questionimpl.go:111: correct Answer fir ID 2 c
TRACE: 2017/05/10 19:53:58 CalculateScore.go:39: Binomial took %s 3.9741649s
TRACE: 2017/05/10 19:53:58 CalculateScore.go:41: actual vs correct  c
TRACE: 2017/05/10 19:53:58 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 19:53:58 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 19:54:00 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 19:54:00 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 19:54:02 questionimpl.go:108: Type is has to implement all method defination from the interface
TRACE: 2017/05/10 19:54:02 questionimpl.go:111: correct Answer fir ID 10 has to implement all method defination from the interface
TRACE: 2017/05/10 19:54:02 CalculateScore.go:39: Binomial took %s 4.0307448s
TRACE: 2017/05/10 19:54:02 CalculateScore.go:41: actual vs correct has to implement none of the methods from interface has to implement all method defination from the interface
TRACE: 2017/05/10 19:54:02 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 19:54:02 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 19:54:04 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 19:54:04 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 19:54:06 questionimpl.go:108: Type is big O notation
TRACE: 2017/05/10 19:54:06 questionimpl.go:111: correct Answer fir ID 7 big O notation
TRACE: 2017/05/10 19:54:06 CalculateScore.go:39: Binomial took %s 4.0123727s
TRACE: 2017/05/10 19:54:06 CalculateScore.go:41: actual vs correct performance testing big O notation
TRACE: 2017/05/10 19:54:06 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 19:54:06 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 19:54:08 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 19:54:08 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 19:54:10 questionimpl.go:108: Type is both
TRACE: 2017/05/10 19:54:10 questionimpl.go:111: correct Answer fir ID 1 both
TRACE: 2017/05/10 19:54:10 CalculateScore.go:39: Binomial took %s 4.0683556s
TRACE: 2017/05/10 19:54:10 CalculateScore.go:41: actual vs correct printer both
TRACE: 2017/05/10 19:54:10 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 19:54:10 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 19:54:12 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 19:54:12 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 19:54:14 questionimpl.go:108: Type is stack
TRACE: 2017/05/10 19:54:14 questionimpl.go:111: correct Answer fir ID 6 stack
TRACE: 2017/05/10 19:54:14 CalculateScore.go:39: Binomial took %s 3.929108s
TRACE: 2017/05/10 19:54:14 CalculateScore.go:41: actual vs correct stack stack
TRACE: 2017/05/10 19:54:14 CalculateScore.go:47: 263409560461970212832400
TRACE: 2017/05/10 19:54:15 CalculateScore.go:50: Binomial took %s 1.0008737s
TRACE: 2017/05/10 19:54:15 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 19:54:15 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 19:54:17 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 19:54:17 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 19:54:19 questionimpl.go:108: Type is shows path of current directory
TRACE: 2017/05/10 19:54:19 questionimpl.go:111: correct Answer fir ID 8 shows path of current directory
TRACE: 2017/05/10 19:54:19 CalculateScore.go:39: Binomial took %s 4.0534415s
TRACE: 2017/05/10 19:54:19 CalculateScore.go:41: actual vs correct shows the list of files in the directory shows path of current directory
TRACE: 2017/05/10 19:54:19 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 19:54:19 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 19:54:21 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 19:54:21 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 19:54:23 questionimpl.go:108: Type is wraping up properties and methods
TRACE: 2017/05/10 19:54:23 questionimpl.go:111: correct Answer fir ID 4 wraping up properties and methods
TRACE: 2017/05/10 19:54:23 CalculateScore.go:39: Binomial took %s 4.0351449s
TRACE: 2017/05/10 19:54:23 CalculateScore.go:41: actual vs correct a way of delivering a class from another class  wraping up properties and methods
TRACE: 2017/05/10 19:54:23 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 19:54:23 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 19:54:25 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 19:54:25 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 19:54:27 questionimpl.go:108: Type is method overriding
TRACE: 2017/05/10 19:54:27 questionimpl.go:111: correct Answer fir ID 3 method overriding
TRACE: 2017/05/10 19:54:27 CalculateScore.go:39: Binomial took %s 4.0101068s
TRACE: 2017/05/10 19:54:27 CalculateScore.go:41: actual vs correct abstract class method overriding
TRACE: 2017/05/10 19:54:27 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 19:54:27 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 19:54:29 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 19:54:29 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 19:54:31 questionimpl.go:108: Type is a method that calls itself
TRACE: 2017/05/10 19:54:31 questionimpl.go:111: correct Answer fir ID 5 a method that calls itself
TRACE: 2017/05/10 19:54:31 CalculateScore.go:39: Binomial took %s 3.6964664s
TRACE: 2017/05/10 19:54:31 CalculateScore.go:41: actual vs correct a method that contains multiple defination a method that calls itself
TRACE: 2017/05/10 19:54:31 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/10 19:54:31 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/10 19:54:33 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/10 19:54:33 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/10 19:54:35 questionimpl.go:108: Type is a long running background process
TRACE: 2017/05/10 19:54:35 questionimpl.go:111: correct Answer fir ID 9 a long running background process
TRACE: 2017/05/10 19:54:35 CalculateScore.go:39: Binomial took %s 3.7498641s
TRACE: 2017/05/10 19:54:35 CalculateScore.go:41: actual vs correct a process that is dead a long running background process
TRACE: 2017/05/10 19:54:35 CalculateScore.go:55: Binomial took %s 40.5616436s
TRACE: 2017/05/10 19:54:44 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 19:54:44 QuestionList.go:18: fundamental
TRACE: 2017/05/10 19:54:44 QuestionList.go:19: YHgihaiKAcyoJNXJxOeF
TRACE: 2017/05/10 19:54:44 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 19:54:44 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 19:54:44 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 19:54:44 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 19:54:46 authenticatetokenimpl.go:47: YHgihaiKAcyoJNXJxOeF
TRACE: 2017/05/10 19:54:46 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 19:54:46 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 19:54:48 authenticatetokenimpl.go:51: YHgihaiKAcyoJNXJxOeF
TRACE: 2017/05/10 19:54:48 authenticatetokenimpl.go:59: Type is YHgihaiKAcyoJNXJxOeF
TRACE: 2017/05/10 19:54:48 aunthenticate.go:42: 2017-05-10 19:54:48
TRACE: 2017/05/10 19:54:48 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 19:54:50 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 19:54:50 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 19:54:52 authenticatetokenimpl.go:30: {0xc042149e30 0xc042364520}
TRACE: 2017/05/10 19:54:52 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 19:54:52 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 19:54:52 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 19:54:52 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 19:54:52 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 19:54:52 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 19:54:52 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 19:54:54 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0422214a0 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 19:54:56 questionimpl.go:30: &{0xc042128ee0 0x718ea0 0xc042238680 false [] <nil> 0xc0422e52c0}
TRACE: 2017/05/10 19:55:08 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 19:55:08 QuestionList.go:18: language
TRACE: 2017/05/10 19:55:08 QuestionList.go:19: YHgihaiKAcyoJNXJxOeF
TRACE: 2017/05/10 19:55:08 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 19:55:08 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 19:55:08 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 19:55:08 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 19:55:10 authenticatetokenimpl.go:47: YHgihaiKAcyoJNXJxOeF
TRACE: 2017/05/10 19:55:10 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 19:55:10 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 19:55:12 authenticatetokenimpl.go:51: YHgihaiKAcyoJNXJxOeF
TRACE: 2017/05/10 19:55:12 authenticatetokenimpl.go:59: Type is YHgihaiKAcyoJNXJxOeF
TRACE: 2017/05/10 19:55:12 aunthenticate.go:42: 2017-05-10 19:55:12
TRACE: 2017/05/10 19:55:12 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 19:55:14 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 19:55:14 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 19:55:16 authenticatetokenimpl.go:30: {0xc042138150 0xc0422dc1b0}
TRACE: 2017/05/10 19:55:16 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 19:55:16 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 19:55:16 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 19:55:16 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 19:55:16 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 19:55:16 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 19:55:16 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 19:55:18 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0423acfc0 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 19:55:20 questionimpl.go:30: &{0xc04211a310 0x718ea0 0xc0422dede0 false [] <nil> 0xc0422e44e0}
TRACE: 2017/05/10 19:55:28 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/10 19:55:28 QuestionList.go:18: java
TRACE: 2017/05/10 19:55:28 QuestionList.go:19: YHgihaiKAcyoJNXJxOeF
TRACE: 2017/05/10 19:55:28 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/10 19:55:28 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/10 19:55:28 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/10 19:55:28 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/10 19:55:30 authenticatetokenimpl.go:47: YHgihaiKAcyoJNXJxOeF
TRACE: 2017/05/10 19:55:30 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/10 19:55:30 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/10 19:55:32 authenticatetokenimpl.go:51: YHgihaiKAcyoJNXJxOeF
TRACE: 2017/05/10 19:55:32 authenticatetokenimpl.go:59: Type is YHgihaiKAcyoJNXJxOeF
TRACE: 2017/05/10 19:55:32 aunthenticate.go:42: 2017-05-10 19:55:32
TRACE: 2017/05/10 19:55:32 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/10 19:55:34 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/10 19:55:34 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/10 19:55:35 authenticatetokenimpl.go:30: {0xc042148540 0xc0421368f0}
TRACE: 2017/05/10 19:55:35 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/10 19:55:35 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/10 19:55:35 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/10 19:55:35 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/10 19:55:35 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/10 19:55:35 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/10 19:55:35 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/10 19:55:38 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc042329da0 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/10 19:55:40 questionimpl.go:30: &{0xc04211aaf0 0x718ea0 0xc0420fbf20 false [] <nil> 0xc0422e5a70}
TRACE: 2017/05/10 19:55:57 Logout.go:14: entering webservice.Logout()
TRACE: 2017/05/10 19:55:57 Logout.go:16: calling manager.DeleteTokenLogin()
TRACE: 2017/05/10 19:55:57 Logout.go:12: entering manager.DeleteToken()
TRACE: 2017/05/10 19:55:57 Logout.go:15: calling logoutdao.DeleteToken()
TRACE: 2017/05/10 19:55:57 logoutimpl.go:13: exntering in DeleteToken() function
TRACE: 2017/05/10 19:55:57 logoutimpl.go:15: executing query and deleting token from database 
TRACE: 2017/05/10 19:56:01 logoutimpl.go:27: 
TRACE: 2017/05/10 19:56:01 logoutimpl.go:37: 0
TRACE: 2017/05/11 10:04:59 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/05/11 10:04:59 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/05/11 10:04:59 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/05/11 10:04:59 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/05/11 10:04:59 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/05/11 10:04:59 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/05/11 10:04:59 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/05/11 10:04:59 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/05/11 10:04:59 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/05/11 10:04:59 debug.go:45: [GIN-debug] Listening and serving HTTP on :8084
TRACE: 2017/05/11 10:06:26 Login.go:14: entering webservice.Login()
TRACE: 2017/05/11 10:06:26 Login.go:19: calling manager.Login()
TRACE: 2017/05/11 10:06:26 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/11 10:06:26 Login.go:16: entering manager.login
TRACE: 2017/05/11 10:06:26 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/11 10:06:26 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/11 10:06:26 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/11 10:06:30 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/11 10:06:30 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/11 10:06:30 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/11 10:06:32 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/11 10:06:32 loginimpl.go:81: executing query.....
TRACE: 2017/05/11 10:06:34 loginimpl.go:93: {0xc042032310 0xc0420049b0}
TRACE: 2017/05/11 10:06:34 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/11 10:06:34 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/11 10:06:34 loginimpl.go:16: exntering in SaveToken() function {0 2 quPoMDetpyGrrbUZICJZ 2017-05-11 10:06:30.1908407 +0530 IST}
TRACE: 2017/05/11 10:06:34 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/11 10:06:36 loginimpl.go:20: token inserted
TRACE: 2017/05/11 10:06:36 loginimpl.go:21: {0 2 quPoMDetpyGrrbUZICJZ 2017-05-11 10:06:30.1908407 +0530 IST}
TRACE: 2017/05/11 10:06:38 loginimpl.go:33: {0xc042032770 0xc042005110}
TRACE: 2017/05/11 10:06:38 Login.go:48: {2 rakesh quPoMDetpyGrrbUZICJZ user}
TRACE: 2017/05/11 10:09:34 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/11 10:09:34 QuestionList.go:18: fundamental
TRACE: 2017/05/11 10:09:34 QuestionList.go:19: quPoMDetpyGrrbUZICJZ
TRACE: 2017/05/11 10:09:34 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/11 10:09:34 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/11 10:09:34 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/11 10:09:34 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/11 10:09:36 authenticatetokenimpl.go:47: quPoMDetpyGrrbUZICJZ
TRACE: 2017/05/11 10:09:36 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/11 10:09:36 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/11 10:09:38 authenticatetokenimpl.go:51: quPoMDetpyGrrbUZICJZ
TRACE: 2017/05/11 10:09:38 authenticatetokenimpl.go:59: Type is quPoMDetpyGrrbUZICJZ
TRACE: 2017/05/11 10:09:38 aunthenticate.go:42: 2017-05-11 10:09:38
TRACE: 2017/05/11 10:09:38 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/11 10:09:40 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/11 10:09:40 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/11 10:09:42 authenticatetokenimpl.go:30: {0xc042032b60 0xc042005cf0}
TRACE: 2017/05/11 10:09:42 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/11 10:09:42 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/11 10:09:42 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/11 10:09:42 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/11 10:09:42 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/11 10:09:42 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/11 10:09:42 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/11 10:09:44 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc04231b6e0 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/11 10:09:46 questionimpl.go:30: &{0xc042032f50 0x718ea0 0xc04235c6c0 false [] <nil> 0xc042007ec0}
TRACE: 2017/05/11 10:10:10 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/11 10:10:10 AnswerList.go:23: [{0 5 a method that calls itself} {0 3 method overriding} {0 6 } {0 7 big O notation} {0 10 has to implement all method defination from the interface} {0 1 none} {0 2 java} {0 4 hiding unnecessary information to outside world} {0 8 shows the access defination for a diractory} {0 9 a process that automatically starts up when the machine is started}]
TRACE: 2017/05/11 10:10:10 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/11 10:10:10 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/11 10:10:10 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/11 10:10:10 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/11 10:10:10 CalculateScore.go:30: answerList [{0 5 a method that calls itself} {0 3 method overriding} {0 6 } {0 7 big O notation} {0 10 has to implement all method defination from the interface} {0 1 none} {0 2 java} {0 4 hiding unnecessary information to outside world} {0 8 shows the access defination for a diractory} {0 9 a process that automatically starts up when the machine is started}]
TRACE: 2017/05/11 10:10:10 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 10:10:10 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 10:10:12 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 10:10:12 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 10:10:14 questionimpl.go:108: Type is a method that calls itself
TRACE: 2017/05/11 10:10:14 questionimpl.go:111: correct Answer fir ID 5 a method that calls itself
TRACE: 2017/05/11 10:10:14 CalculateScore.go:39: Binomial took %s 3.8350179s
TRACE: 2017/05/11 10:10:14 CalculateScore.go:41: actual vs correct a method that calls itself a method that calls itself
TRACE: 2017/05/11 10:10:14 CalculateScore.go:47: 263409560461970212832400
TRACE: 2017/05/11 10:10:15 CalculateScore.go:50: Binomial took %s 1.002463s
TRACE: 2017/05/11 10:10:15 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 10:10:15 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 10:10:17 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 10:10:17 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 10:10:19 questionimpl.go:108: Type is method overriding
TRACE: 2017/05/11 10:10:19 questionimpl.go:111: correct Answer fir ID 3 method overriding
TRACE: 2017/05/11 10:10:19 CalculateScore.go:39: Binomial took %s 4.1907311s
TRACE: 2017/05/11 10:10:19 CalculateScore.go:41: actual vs correct method overriding method overriding
TRACE: 2017/05/11 10:10:19 CalculateScore.go:47: 263409560461970212832400
TRACE: 2017/05/11 10:10:20 CalculateScore.go:50: Binomial took %s 1.0017299s
TRACE: 2017/05/11 10:10:20 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 10:10:20 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 10:10:22 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 10:10:22 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 10:10:24 questionimpl.go:108: Type is stack
TRACE: 2017/05/11 10:10:24 questionimpl.go:111: correct Answer fir ID 6 stack
TRACE: 2017/05/11 10:10:24 CalculateScore.go:39: Binomial took %s 4.1382839s
TRACE: 2017/05/11 10:10:24 CalculateScore.go:41: actual vs correct  stack
TRACE: 2017/05/11 10:10:24 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 10:10:24 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 10:10:26 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 10:10:26 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 10:10:28 questionimpl.go:108: Type is big O notation
TRACE: 2017/05/11 10:10:28 questionimpl.go:111: correct Answer fir ID 7 big O notation
TRACE: 2017/05/11 10:10:28 CalculateScore.go:39: Binomial took %s 3.8089428s
TRACE: 2017/05/11 10:10:28 CalculateScore.go:41: actual vs correct big O notation big O notation
TRACE: 2017/05/11 10:10:28 CalculateScore.go:47: 263409560461970212832400
TRACE: 2017/05/11 10:10:29 CalculateScore.go:50: Binomial took %s 1.0008966s
TRACE: 2017/05/11 10:10:29 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 10:10:29 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 10:10:31 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 10:10:31 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 10:10:33 questionimpl.go:108: Type is has to implement all method defination from the interface
TRACE: 2017/05/11 10:10:33 questionimpl.go:111: correct Answer fir ID 10 has to implement all method defination from the interface
TRACE: 2017/05/11 10:10:33 CalculateScore.go:39: Binomial took %s 3.895873s
TRACE: 2017/05/11 10:10:33 CalculateScore.go:41: actual vs correct has to implement all method defination from the interface has to implement all method defination from the interface
TRACE: 2017/05/11 10:10:33 CalculateScore.go:47: 263409560461970212832400
TRACE: 2017/05/11 10:10:34 CalculateScore.go:50: Binomial took %s 1.0017267s
TRACE: 2017/05/11 10:10:34 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 10:10:34 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 10:10:36 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 10:10:36 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 10:10:38 questionimpl.go:108: Type is both
TRACE: 2017/05/11 10:10:38 questionimpl.go:111: correct Answer fir ID 1 both
TRACE: 2017/05/11 10:10:38 CalculateScore.go:39: Binomial took %s 3.9187647s
TRACE: 2017/05/11 10:10:38 CalculateScore.go:41: actual vs correct none both
TRACE: 2017/05/11 10:10:38 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 10:10:38 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 10:10:40 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 10:10:40 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 10:10:41 questionimpl.go:108: Type is c
TRACE: 2017/05/11 10:10:41 questionimpl.go:111: correct Answer fir ID 2 c
TRACE: 2017/05/11 10:10:41 CalculateScore.go:39: Binomial took %s 3.7895785s
TRACE: 2017/05/11 10:10:41 CalculateScore.go:41: actual vs correct java c
TRACE: 2017/05/11 10:10:41 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 10:10:41 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 10:11:02 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 10:11:35 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/11 10:11:35 QuestionList.go:18: language
TRACE: 2017/05/11 10:11:35 QuestionList.go:19: quPoMDetpyGrrbUZICJZ
TRACE: 2017/05/11 10:11:35 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/11 10:11:35 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/11 10:11:35 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/11 10:11:35 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/11 10:11:37 authenticatetokenimpl.go:47: quPoMDetpyGrrbUZICJZ
TRACE: 2017/05/11 10:11:37 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/11 10:11:37 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/11 10:11:39 authenticatetokenimpl.go:51: quPoMDetpyGrrbUZICJZ
TRACE: 2017/05/11 10:11:39 authenticatetokenimpl.go:59: Type is quPoMDetpyGrrbUZICJZ
TRACE: 2017/05/11 10:11:39 aunthenticate.go:42: 2017-05-11 10:11:39
TRACE: 2017/05/11 10:11:39 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/11 10:11:41 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/11 10:11:41 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/11 10:11:43 authenticatetokenimpl.go:30: {0xc042138150 0xc04235a290}
TRACE: 2017/05/11 10:11:43 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/11 10:11:43 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/11 10:11:43 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/11 10:11:43 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/11 10:11:43 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/11 10:11:43 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/11 10:11:43 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/11 10:11:45 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc04238aba0 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/11 10:11:47 questionimpl.go:30: &{0xc042128af0 0x718ea0 0xc0420fae80 false [] <nil> 0xc0422a8a50}
TRACE: 2017/05/11 10:34:42 Login.go:14: entering webservice.Login()
TRACE: 2017/05/11 10:34:42 Login.go:19: calling manager.Login()
TRACE: 2017/05/11 10:34:42 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/11 10:34:42 Login.go:16: entering manager.login
TRACE: 2017/05/11 10:34:42 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/11 10:34:42 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/11 10:34:42 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/11 10:34:47 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/11 10:34:47 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/11 10:34:47 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/11 10:34:49 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/11 10:34:49 loginimpl.go:81: executing query.....
TRACE: 2017/05/11 10:34:51 loginimpl.go:93: {0xc0421287e0 0xc04235ac10}
TRACE: 2017/05/11 10:34:51 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/11 10:34:51 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/11 10:34:51 loginimpl.go:16: exntering in SaveToken() function {0 2 OiTkATHupSbzTCEDnULn 2017-05-11 10:34:47.5879811 +0530 IST}
TRACE: 2017/05/11 10:34:51 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/11 10:34:53 loginimpl.go:20: token inserted
TRACE: 2017/05/11 10:34:53 loginimpl.go:21: {0 2 OiTkATHupSbzTCEDnULn 2017-05-11 10:34:47.5879811 +0530 IST}
TRACE: 2017/05/11 10:34:55 loginimpl.go:33: {0xc0421483f0 0xc0421369e0}
TRACE: 2017/05/11 10:34:55 Login.go:48: {2 rakesh OiTkATHupSbzTCEDnULn user}
TRACE: 2017/05/11 10:35:04 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/11 10:35:04 QuestionList.go:18: java
TRACE: 2017/05/11 10:35:04 QuestionList.go:19: OiTkATHupSbzTCEDnULn
TRACE: 2017/05/11 10:35:04 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/11 10:35:04 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/11 10:35:04 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/11 10:35:04 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/11 10:35:07 authenticatetokenimpl.go:47: OiTkATHupSbzTCEDnULn
TRACE: 2017/05/11 10:35:07 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/11 10:35:07 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/11 10:35:08 authenticatetokenimpl.go:51: OiTkATHupSbzTCEDnULn
TRACE: 2017/05/11 10:35:08 authenticatetokenimpl.go:59: Type is OiTkATHupSbzTCEDnULn
TRACE: 2017/05/11 10:35:08 aunthenticate.go:42: 2017-05-11 10:35:08
TRACE: 2017/05/11 10:35:08 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/11 10:35:10 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/11 10:35:10 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/11 10:35:12 authenticatetokenimpl.go:30: {0xc042148a80 0xc042137a70}
TRACE: 2017/05/11 10:35:12 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/11 10:35:12 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/11 10:35:12 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/11 10:35:12 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/11 10:35:12 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/11 10:35:12 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/11 10:35:12 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/11 10:35:14 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0421d2180 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/11 10:35:16 questionimpl.go:30: &{0xc042149030 0x718ea0 0xc0423068a0 false [] <nil> 0xc04237b260}
TRACE: 2017/05/11 10:35:52 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/11 10:35:52 AnswerList.go:23: [{0 29 } {0 26 Compilation error} {0 27 -128 to 127} {0 35 } {0 32 All of the mentioned} {0 17 Singlethreaded} {0 31 } {0 33 continue, if} {0 30 max(Comparator comp)} {0 19 autoboxing} {0 15 } {0 23 InputStream class} {0 11 parent class} {0 12 w.q} {0 16 } {0 20 Object} {0 28 } {0 25 Method} {0 24 volatile} {0 14 start() method} {0 22 Queue} {0 34 for(i=0; ; i++)} {0 21 string} {0 13 } {0 18 }]
TRACE: 2017/05/11 10:35:52 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/11 10:35:52 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/11 10:35:52 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/11 10:35:52 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/11 10:35:52 CalculateScore.go:30: answerList [{0 29 } {0 26 Compilation error} {0 27 -128 to 127} {0 35 } {0 32 All of the mentioned} {0 17 Singlethreaded} {0 31 } {0 33 continue, if} {0 30 max(Comparator comp)} {0 19 autoboxing} {0 15 } {0 23 InputStream class} {0 11 parent class} {0 12 w.q} {0 16 } {0 20 Object} {0 28 } {0 25 Method} {0 24 volatile} {0 14 start() method} {0 22 Queue} {0 34 for(i=0; ; i++)} {0 21 string} {0 13 } {0 18 }]
TRACE: 2017/05/11 10:35:52 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 10:35:52 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 10:35:54 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 10:35:54 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 10:35:56 questionimpl.go:108: Type is flush()
TRACE: 2017/05/11 10:35:56 questionimpl.go:111: correct Answer fir ID 29 flush()
TRACE: 2017/05/11 10:35:56 CalculateScore.go:39: Binomial took %s 4.6100561s
TRACE: 2017/05/11 10:35:56 CalculateScore.go:41: actual vs correct  flush()
TRACE: 2017/05/11 10:35:56 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 10:35:56 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 10:36:00 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 10:36:00 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 10:36:02 questionimpl.go:108: Type is 100
TRACE: 2017/05/11 10:36:02 questionimpl.go:111: correct Answer fir ID 26 100
TRACE: 2017/05/11 10:36:02 CalculateScore.go:39: Binomial took %s 5.6517813s
TRACE: 2017/05/11 10:36:02 CalculateScore.go:41: actual vs correct Compilation error 100
TRACE: 2017/05/11 10:36:02 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 10:36:02 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 10:36:04 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 10:36:04 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 10:36:06 questionimpl.go:108: Type is 0 to 65535
TRACE: 2017/05/11 10:36:06 questionimpl.go:111: correct Answer fir ID 27 0 to 65535
TRACE: 2017/05/11 10:36:06 CalculateScore.go:39: Binomial took %s 3.8675691s
TRACE: 2017/05/11 10:36:06 CalculateScore.go:41: actual vs correct -128 to 127 0 to 65535
TRACE: 2017/05/11 10:36:06 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 10:36:06 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 10:36:08 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 10:36:08 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 10:36:10 questionimpl.go:108: Type is final
TRACE: 2017/05/11 10:36:10 questionimpl.go:111: correct Answer fir ID 35 final
TRACE: 2017/05/11 10:36:10 CalculateScore.go:39: Binomial took %s 4.1071891s
TRACE: 2017/05/11 10:36:10 CalculateScore.go:41: actual vs correct  final
TRACE: 2017/05/11 10:36:10 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 10:36:10 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 10:36:12 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 10:36:12 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 10:36:14 questionimpl.go:108: Type is All of the mentioned
TRACE: 2017/05/11 10:36:14 questionimpl.go:111: correct Answer fir ID 32 All of the mentioned
TRACE: 2017/05/11 10:36:14 CalculateScore.go:39: Binomial took %s 3.7959831s
TRACE: 2017/05/11 10:36:14 CalculateScore.go:41: actual vs correct All of the mentioned All of the mentioned
TRACE: 2017/05/11 10:36:14 CalculateScore.go:47: 263409560461970212832400
TRACE: 2017/05/11 10:36:15 CalculateScore.go:50: Binomial took %s 1.001969s
TRACE: 2017/05/11 10:36:15 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 10:36:15 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 10:36:17 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 10:36:17 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 10:36:18 questionimpl.go:108: Type is Multithreaded
TRACE: 2017/05/11 10:36:18 questionimpl.go:111: correct Answer fir ID 17 Multithreaded
TRACE: 2017/05/11 10:36:18 CalculateScore.go:39: Binomial took %s 3.7746064s
TRACE: 2017/05/11 10:36:18 CalculateScore.go:41: actual vs correct Singlethreaded Multithreaded
TRACE: 2017/05/11 10:36:18 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 10:36:18 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 10:36:21 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 10:36:21 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 10:36:22 questionimpl.go:108: Type is shuffle()
TRACE: 2017/05/11 10:36:22 questionimpl.go:111: correct Answer fir ID 31 shuffle()
TRACE: 2017/05/11 10:36:22 CalculateScore.go:39: Binomial took %s 4.0296906s
TRACE: 2017/05/11 10:36:22 CalculateScore.go:41: actual vs correct  shuffle()
TRACE: 2017/05/11 10:36:22 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 10:36:22 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 10:36:25 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 10:36:25 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 10:36:26 questionimpl.go:108: Type is switch, if
TRACE: 2017/05/11 10:36:26 questionimpl.go:111: correct Answer fir ID 33 switch, if
TRACE: 2017/05/11 10:36:26 CalculateScore.go:39: Binomial took %s 3.8946881s
TRACE: 2017/05/11 10:36:26 CalculateScore.go:41: actual vs correct continue, if switch, if
TRACE: 2017/05/11 10:36:26 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 10:36:26 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 10:36:29 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 10:36:29 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 10:36:31 questionimpl.go:108: Type is max(Comparator comp)
TRACE: 2017/05/11 10:36:31 questionimpl.go:111: correct Answer fir ID 30 max(Comparator comp)
TRACE: 2017/05/11 10:36:31 CalculateScore.go:39: Binomial took %s 4.1150819s
TRACE: 2017/05/11 10:36:31 CalculateScore.go:41: actual vs correct max(Comparator comp) max(Comparator comp)
TRACE: 2017/05/11 10:36:31 CalculateScore.go:47: 263409560461970212832400
TRACE: 2017/05/11 10:36:32 CalculateScore.go:50: Binomial took %s 1.0007556s
TRACE: 2017/05/11 10:36:32 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 10:36:32 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 10:36:33 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 10:36:33 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 10:36:35 questionimpl.go:108: Type is autoboxing
TRACE: 2017/05/11 10:36:35 questionimpl.go:111: correct Answer fir ID 19 autoboxing
TRACE: 2017/05/11 10:36:35 CalculateScore.go:39: Binomial took %s 3.5784895s
TRACE: 2017/05/11 10:36:35 CalculateScore.go:41: actual vs correct autoboxing autoboxing
TRACE: 2017/05/11 10:36:35 CalculateScore.go:47: 263409560461970212832400
TRACE: 2017/05/11 10:36:36 CalculateScore.go:50: Binomial took %s 1.0014131s
TRACE: 2017/05/11 10:36:36 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 10:36:36 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 10:36:38 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 10:36:38 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 10:36:40 questionimpl.go:108: Type is java.util.TreeMap
TRACE: 2017/05/11 10:36:40 questionimpl.go:111: correct Answer fir ID 15 java.util.TreeMap
TRACE: 2017/05/11 10:36:40 CalculateScore.go:39: Binomial took %s 4.1568526s
TRACE: 2017/05/11 10:36:40 CalculateScore.go:41: actual vs correct  java.util.TreeMap
TRACE: 2017/05/11 10:36:40 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 10:36:40 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 10:36:42 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 10:36:42 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 10:36:45 questionimpl.go:108: Type is PrintStream class
TRACE: 2017/05/11 10:36:45 questionimpl.go:111: correct Answer fir ID 23 PrintStream class
TRACE: 2017/05/11 10:36:45 CalculateScore.go:39: Binomial took %s 4.6277725s
TRACE: 2017/05/11 10:36:45 CalculateScore.go:41: actual vs correct InputStream class PrintStream class
TRACE: 2017/05/11 10:36:45 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 10:36:45 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 10:36:47 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 10:36:47 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 10:36:49 questionimpl.go:108: Type is Final class
TRACE: 2017/05/11 10:36:49 questionimpl.go:111: correct Answer fir ID 11 Final class
TRACE: 2017/05/11 10:36:49 CalculateScore.go:39: Binomial took %s 3.7638603s
TRACE: 2017/05/11 10:36:49 CalculateScore.go:41: actual vs correct parent class Final class
TRACE: 2017/05/11 10:36:49 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 10:36:49 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 10:36:51 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 10:36:51 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 10:36:53 questionimpl.go:108: Type is No
TRACE: 2017/05/11 10:36:53 questionimpl.go:111: correct Answer fir ID 12 No
TRACE: 2017/05/11 10:36:53 CalculateScore.go:39: Binomial took %s 4.0058596s
TRACE: 2017/05/11 10:36:53 CalculateScore.go:41: actual vs correct w.q No
TRACE: 2017/05/11 10:36:53 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 10:36:53 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 10:36:55 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 10:36:55 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 10:36:56 questionimpl.go:108: Type is getConnection()
TRACE: 2017/05/11 10:36:56 questionimpl.go:111: correct Answer fir ID 16 getConnection()
TRACE: 2017/05/11 10:36:56 CalculateScore.go:39: Binomial took %s 3.8530489s
TRACE: 2017/05/11 10:36:56 CalculateScore.go:41: actual vs correct  getConnection()
TRACE: 2017/05/11 10:36:56 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 10:36:56 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 10:36:59 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 10:36:59 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 10:37:01 questionimpl.go:108: Type is Constructor
TRACE: 2017/05/11 10:37:01 questionimpl.go:111: correct Answer fir ID 20 Constructor
TRACE: 2017/05/11 10:37:01 CalculateScore.go:39: Binomial took %s 4.0401973s
TRACE: 2017/05/11 10:37:01 CalculateScore.go:41: actual vs correct Object Constructor
TRACE: 2017/05/11 10:37:01 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 10:37:01 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 10:37:03 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 10:37:03 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 10:37:05 questionimpl.go:108: Type is Serialization
TRACE: 2017/05/11 10:37:05 questionimpl.go:111: correct Answer fir ID 28 Serialization
TRACE: 2017/05/11 10:37:05 CalculateScore.go:39: Binomial took %s 4.129083s
TRACE: 2017/05/11 10:37:05 CalculateScore.go:41: actual vs correct  Serialization
TRACE: 2017/05/11 10:37:05 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 10:37:05 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 10:37:07 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 10:37:07 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 10:37:08 questionimpl.go:108: Type is Interface
TRACE: 2017/05/11 10:37:08 questionimpl.go:111: correct Answer fir ID 25 Interface
TRACE: 2017/05/11 10:37:08 CalculateScore.go:39: Binomial took %s 3.5859664s
TRACE: 2017/05/11 10:37:08 CalculateScore.go:41: actual vs correct Method Interface
TRACE: 2017/05/11 10:37:08 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 10:37:08 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 10:37:10 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 10:37:10 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 10:37:12 questionimpl.go:108: Type is transient
TRACE: 2017/05/11 10:37:12 questionimpl.go:111: correct Answer fir ID 24 transient
TRACE: 2017/05/11 10:37:12 CalculateScore.go:39: Binomial took %s 4.0497164s
TRACE: 2017/05/11 10:37:12 CalculateScore.go:41: actual vs correct volatile transient
TRACE: 2017/05/11 10:37:12 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 10:37:12 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 10:37:14 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 10:37:14 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 10:37:16 questionimpl.go:108: Type is resume() method
TRACE: 2017/05/11 10:37:16 questionimpl.go:111: correct Answer fir ID 14 resume() method
TRACE: 2017/05/11 10:37:16 CalculateScore.go:39: Binomial took %s 4.0284007s
TRACE: 2017/05/11 10:37:16 CalculateScore.go:41: actual vs correct start() method resume() method
TRACE: 2017/05/11 10:37:16 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 10:37:16 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 10:37:19 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 10:37:19 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 10:37:21 questionimpl.go:108: Type is Queue
TRACE: 2017/05/11 10:37:21 questionimpl.go:111: correct Answer fir ID 22 Queue
TRACE: 2017/05/11 10:37:21 CalculateScore.go:39: Binomial took %s 4.7655031s
TRACE: 2017/05/11 10:37:21 CalculateScore.go:41: actual vs correct Queue Queue
TRACE: 2017/05/11 10:37:21 CalculateScore.go:47: 263409560461970212832400
TRACE: 2017/05/11 10:37:22 CalculateScore.go:50: Binomial took %s 1.0009532s
TRACE: 2017/05/11 10:37:22 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 10:37:22 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 10:37:24 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 10:37:24 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 10:37:26 questionimpl.go:108: Type is All of the above
TRACE: 2017/05/11 10:37:26 questionimpl.go:111: correct Answer fir ID 34 All of the above
TRACE: 2017/05/11 10:37:26 CalculateScore.go:39: Binomial took %s 4.1623881s
TRACE: 2017/05/11 10:37:26 CalculateScore.go:41: actual vs correct for(i=0; ; i++) All of the above
TRACE: 2017/05/11 10:37:26 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 10:37:26 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 10:37:28 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 10:37:28 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 10:37:30 questionimpl.go:108: Type is string
TRACE: 2017/05/11 10:37:30 questionimpl.go:111: correct Answer fir ID 21 string
TRACE: 2017/05/11 10:37:30 CalculateScore.go:39: Binomial took %s 3.9262427s
TRACE: 2017/05/11 10:37:30 CalculateScore.go:41: actual vs correct string string
TRACE: 2017/05/11 10:37:30 CalculateScore.go:47: 263409560461970212832400
TRACE: 2017/05/11 10:37:31 CalculateScore.go:50: Binomial took %s 1.001711s
TRACE: 2017/05/11 10:37:31 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 10:37:31 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 10:37:33 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 10:37:33 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 10:37:35 questionimpl.go:108: Type is Can store multiple values
TRACE: 2017/05/11 10:37:35 questionimpl.go:111: correct Answer fir ID 13 Can store multiple values
TRACE: 2017/05/11 10:37:35 CalculateScore.go:39: Binomial took %s 4.0129177s
TRACE: 2017/05/11 10:37:35 CalculateScore.go:41: actual vs correct  Can store multiple values
TRACE: 2017/05/11 10:37:35 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 10:37:35 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 10:37:37 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 10:37:37 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 10:37:39 questionimpl.go:108: Type is java.util.Date
TRACE: 2017/05/11 10:37:39 questionimpl.go:111: correct Answer fir ID 18 java.util.Date
TRACE: 2017/05/11 10:37:39 CalculateScore.go:39: Binomial took %s 3.7565314s
TRACE: 2017/05/11 10:37:39 CalculateScore.go:41: actual vs correct  java.util.Date
TRACE: 2017/05/11 10:37:39 CalculateScore.go:55: Binomial took %s 1m47.3002117s
TRACE: 2017/05/11 10:51:50 Login.go:14: entering webservice.Login()
TRACE: 2017/05/11 10:51:50 Login.go:19: calling manager.Login()
TRACE: 2017/05/11 10:51:50 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/11 10:51:50 Login.go:16: entering manager.login
TRACE: 2017/05/11 10:51:50 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/11 10:51:50 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/11 10:51:50 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/11 10:51:54 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/11 10:51:54 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/11 10:51:54 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/11 10:51:56 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/11 10:51:56 loginimpl.go:81: executing query.....
TRACE: 2017/05/11 10:51:58 loginimpl.go:93: {0xc04211a310 0xc042106330}
TRACE: 2017/05/11 10:51:58 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/11 10:51:58 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/11 10:51:58 loginimpl.go:16: exntering in SaveToken() function {0 2 XuFUBFVKGgmisRLhKghz 2017-05-11 10:51:54.6876526 +0530 IST}
TRACE: 2017/05/11 10:51:58 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/11 10:52:00 loginimpl.go:20: token inserted
TRACE: 2017/05/11 10:52:00 loginimpl.go:21: {0 2 XuFUBFVKGgmisRLhKghz 2017-05-11 10:51:54.6876526 +0530 IST}
TRACE: 2017/05/11 10:52:02 loginimpl.go:33: {0xc042138000 0xc042045070}
TRACE: 2017/05/11 10:52:02 Login.go:48: {2 rakesh XuFUBFVKGgmisRLhKghz user}
TRACE: 2017/05/11 10:52:11 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/11 10:52:11 QuestionList.go:18: fundamental
TRACE: 2017/05/11 10:52:11 QuestionList.go:19: XuFUBFVKGgmisRLhKghz
TRACE: 2017/05/11 10:52:11 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/11 10:52:11 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/11 10:52:11 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/11 10:52:11 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/11 10:52:13 authenticatetokenimpl.go:47: XuFUBFVKGgmisRLhKghz
TRACE: 2017/05/11 10:52:13 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/11 10:52:13 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/11 10:52:15 authenticatetokenimpl.go:51: XuFUBFVKGgmisRLhKghz
TRACE: 2017/05/11 10:52:15 authenticatetokenimpl.go:59: Type is XuFUBFVKGgmisRLhKghz
TRACE: 2017/05/11 10:52:15 aunthenticate.go:42: 2017-05-11 10:52:15
TRACE: 2017/05/11 10:52:15 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/11 10:52:17 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/11 10:52:17 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/11 10:52:19 authenticatetokenimpl.go:30: {0xc04211a770 0xc042106a00}
TRACE: 2017/05/11 10:52:19 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/11 10:52:19 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/11 10:52:19 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/11 10:52:19 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/11 10:52:19 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/11 10:52:19 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/11 10:52:19 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/11 10:52:22 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc042341e00 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/11 10:52:24 questionimpl.go:30: &{0xc042128b60 0x718ea0 0xc0420fa360 false [] <nil> 0xc042118de0}
TRACE: 2017/05/11 10:52:40 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/11 10:52:40 AnswerList.go:23: [{0 3 method overloading} {0 9 a process that is eating memory} {0 10 has to overload the method from the interface} {0 6 doubly linked list} {0 1 } {0 7 SLOC} {0 8 shows the access defination for a diractory} {0 2 c} {0 5 a method that iterates over a block of code until a condition is solved} {0 4 wraping up properties and method}]
TRACE: 2017/05/11 10:52:40 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/11 10:52:40 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/11 10:52:40 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/11 10:52:40 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/11 10:52:40 CalculateScore.go:30: answerList [{0 3 method overloading} {0 9 a process that is eating memory} {0 10 has to overload the method from the interface} {0 6 doubly linked list} {0 1 } {0 7 SLOC} {0 8 shows the access defination for a diractory} {0 2 c} {0 5 a method that iterates over a block of code until a condition is solved} {0 4 wraping up properties and method}]
TRACE: 2017/05/11 10:52:40 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 10:52:40 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 10:52:42 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 10:52:42 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 10:52:44 questionimpl.go:108: Type is method overriding
TRACE: 2017/05/11 10:52:44 questionimpl.go:111: correct Answer fir ID 3 method overriding
TRACE: 2017/05/11 10:52:44 CalculateScore.go:39: Binomial took %s 3.9455967s
TRACE: 2017/05/11 10:52:44 CalculateScore.go:41: actual vs correct method overloading method overriding
TRACE: 2017/05/11 10:52:44 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 10:52:44 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 10:52:46 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 10:52:46 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 10:52:48 questionimpl.go:108: Type is a long running background process
TRACE: 2017/05/11 10:52:48 questionimpl.go:111: correct Answer fir ID 9 a long running background process
TRACE: 2017/05/11 10:52:48 CalculateScore.go:39: Binomial took %s 3.9269618s
TRACE: 2017/05/11 10:52:48 CalculateScore.go:41: actual vs correct a process that is eating memory a long running background process
TRACE: 2017/05/11 10:52:48 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 10:52:48 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 10:52:51 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 10:52:51 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 10:52:53 questionimpl.go:108: Type is has to implement all method defination from the interface
TRACE: 2017/05/11 10:52:53 questionimpl.go:111: correct Answer fir ID 10 has to implement all method defination from the interface
TRACE: 2017/05/11 10:52:53 CalculateScore.go:39: Binomial took %s 5.0605195s
TRACE: 2017/05/11 10:52:53 CalculateScore.go:41: actual vs correct has to overload the method from the interface has to implement all method defination from the interface
TRACE: 2017/05/11 10:52:53 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 10:52:53 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 10:52:55 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 10:52:55 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 10:52:57 questionimpl.go:108: Type is stack
TRACE: 2017/05/11 10:52:57 questionimpl.go:111: correct Answer fir ID 6 stack
TRACE: 2017/05/11 10:52:57 CalculateScore.go:39: Binomial took %s 3.9942768s
TRACE: 2017/05/11 10:52:57 CalculateScore.go:41: actual vs correct doubly linked list stack
TRACE: 2017/05/11 10:52:57 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 10:52:57 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 10:53:00 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 10:53:00 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 10:53:02 questionimpl.go:108: Type is both
TRACE: 2017/05/11 10:53:02 questionimpl.go:111: correct Answer fir ID 1 both
TRACE: 2017/05/11 10:53:02 CalculateScore.go:39: Binomial took %s 4.6742661s
TRACE: 2017/05/11 10:53:02 CalculateScore.go:41: actual vs correct  both
TRACE: 2017/05/11 10:53:02 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 10:53:02 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 10:53:04 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 10:53:04 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 10:53:06 questionimpl.go:108: Type is big O notation
TRACE: 2017/05/11 10:53:06 questionimpl.go:111: correct Answer fir ID 7 big O notation
TRACE: 2017/05/11 10:53:06 CalculateScore.go:39: Binomial took %s 3.8547391s
TRACE: 2017/05/11 10:53:06 CalculateScore.go:41: actual vs correct SLOC big O notation
TRACE: 2017/05/11 10:53:06 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 10:53:06 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 10:53:08 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 10:53:08 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 10:53:10 questionimpl.go:108: Type is shows path of current directory
TRACE: 2017/05/11 10:53:10 questionimpl.go:111: correct Answer fir ID 8 shows path of current directory
TRACE: 2017/05/11 10:53:10 CalculateScore.go:39: Binomial took %s 4.0038453s
TRACE: 2017/05/11 10:53:10 CalculateScore.go:41: actual vs correct shows the access defination for a diractory shows path of current directory
TRACE: 2017/05/11 10:53:10 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 10:53:10 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 10:53:12 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 10:53:12 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 10:53:14 questionimpl.go:108: Type is c
TRACE: 2017/05/11 10:53:14 questionimpl.go:111: correct Answer fir ID 2 c
TRACE: 2017/05/11 10:53:14 CalculateScore.go:39: Binomial took %s 3.9446005s
TRACE: 2017/05/11 10:53:14 CalculateScore.go:41: actual vs correct c c
TRACE: 2017/05/11 10:53:14 CalculateScore.go:47: 263409560461970212832400
TRACE: 2017/05/11 10:53:15 CalculateScore.go:50: Binomial took %s 1.0018097s
TRACE: 2017/05/11 10:53:15 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 10:53:15 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 10:53:17 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 10:53:17 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 10:53:19 questionimpl.go:108: Type is a method that calls itself
TRACE: 2017/05/11 10:53:19 questionimpl.go:111: correct Answer fir ID 5 a method that calls itself
TRACE: 2017/05/11 10:53:19 CalculateScore.go:39: Binomial took %s 3.9222604s
TRACE: 2017/05/11 10:53:19 CalculateScore.go:41: actual vs correct a method that iterates over a block of code until a condition is solved a method that calls itself
TRACE: 2017/05/11 10:53:19 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 10:53:19 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 10:53:21 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 10:53:21 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 10:53:23 questionimpl.go:108: Type is wraping up properties and methods
TRACE: 2017/05/11 10:53:23 questionimpl.go:111: correct Answer fir ID 4 wraping up properties and methods
TRACE: 2017/05/11 10:53:23 CalculateScore.go:39: Binomial took %s 4.1767717s
TRACE: 2017/05/11 10:53:23 CalculateScore.go:41: actual vs correct wraping up properties and method wraping up properties and methods
TRACE: 2017/05/11 10:53:23 CalculateScore.go:55: Binomial took %s 42.5076352s
TRACE: 2017/05/11 11:10:31 Login.go:14: entering webservice.Login()
TRACE: 2017/05/11 11:10:31 Login.go:19: calling manager.Login()
TRACE: 2017/05/11 11:10:31 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/11 11:10:31 Login.go:16: entering manager.login
TRACE: 2017/05/11 11:10:31 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/11 11:10:31 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/11 11:10:31 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/11 11:10:35 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/11 11:10:35 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/11 11:10:35 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/11 11:10:37 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/11 11:10:37 loginimpl.go:81: executing query.....
TRACE: 2017/05/11 11:10:39 loginimpl.go:93: {0xc042138770 0xc0423187d0}
TRACE: 2017/05/11 11:10:39 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/11 11:10:39 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/11 11:10:39 loginimpl.go:16: exntering in SaveToken() function {0 2 fNaDdkSgUyoZDoXGwwoD 2017-05-11 11:10:35.1093008 +0530 IST}
TRACE: 2017/05/11 11:10:39 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/11 11:10:41 loginimpl.go:20: token inserted
TRACE: 2017/05/11 11:10:41 loginimpl.go:21: {0 2 fNaDdkSgUyoZDoXGwwoD 2017-05-11 11:10:35.1093008 +0530 IST}
TRACE: 2017/05/11 11:10:43 loginimpl.go:33: {0xc042128150 0xc0422a01a0}
TRACE: 2017/05/11 11:10:43 Login.go:48: {2 rakesh fNaDdkSgUyoZDoXGwwoD user}
TRACE: 2017/05/11 11:11:14 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/11 11:11:14 QuestionList.go:18: fundamental
TRACE: 2017/05/11 11:11:14 QuestionList.go:19: fNaDdkSgUyoZDoXGwwoD
TRACE: 2017/05/11 11:11:14 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/11 11:11:14 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/11 11:11:14 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/11 11:11:14 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/11 11:11:18 authenticatetokenimpl.go:47: fNaDdkSgUyoZDoXGwwoD
TRACE: 2017/05/11 11:11:18 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/11 11:11:18 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/11 11:11:20 authenticatetokenimpl.go:51: fNaDdkSgUyoZDoXGwwoD
TRACE: 2017/05/11 11:11:20 authenticatetokenimpl.go:59: Type is fNaDdkSgUyoZDoXGwwoD
TRACE: 2017/05/11 11:11:20 aunthenticate.go:42: 2017-05-11 11:11:20
TRACE: 2017/05/11 11:11:20 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/11 11:11:22 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/11 11:11:22 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/11 11:11:24 authenticatetokenimpl.go:30: {0xc042138000 0xc042318110}
TRACE: 2017/05/11 11:11:24 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/11 11:11:24 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/11 11:11:24 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/11 11:11:24 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/11 11:11:24 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/11 11:11:24 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/11 11:11:24 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/11 11:11:26 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0421c4ea0 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/11 11:11:28 questionimpl.go:30: &{0xc04211a150 0x718ea0 0xc042040960 false [] <nil> 0xc0422a80c0}
TRACE: 2017/05/11 11:11:48 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/11 11:11:48 AnswerList.go:23: [{0 2 objective c} {0 9 a process that is eating memory} {0 4 a way of delivering a class from another class } {0 7 unit testing} {0 10 has to overload the method from the interface} {0 8 shows the access defination for a diractory} {0 5 a method that contains multiple defination} {0 3 method overriding} {0 6 doubly linked list} {0 1 printer}]
TRACE: 2017/05/11 11:11:48 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/11 11:11:48 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/11 11:11:48 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/11 11:11:48 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/11 11:11:48 CalculateScore.go:30: answerList [{0 2 objective c} {0 9 a process that is eating memory} {0 4 a way of delivering a class from another class } {0 7 unit testing} {0 10 has to overload the method from the interface} {0 8 shows the access defination for a diractory} {0 5 a method that contains multiple defination} {0 3 method overriding} {0 6 doubly linked list} {0 1 printer}]
TRACE: 2017/05/11 11:11:48 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 11:11:48 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 11:11:50 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 11:11:50 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 11:11:52 questionimpl.go:108: Type is c
TRACE: 2017/05/11 11:11:52 questionimpl.go:111: correct Answer fir ID 2 c
TRACE: 2017/05/11 11:11:52 CalculateScore.go:39: Binomial took %s 3.7028488s
TRACE: 2017/05/11 11:11:52 CalculateScore.go:41: actual vs correct objective c c
TRACE: 2017/05/11 11:11:52 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 11:11:52 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 11:11:54 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 11:11:54 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 11:11:56 questionimpl.go:108: Type is a long running background process
TRACE: 2017/05/11 11:11:56 questionimpl.go:111: correct Answer fir ID 9 a long running background process
TRACE: 2017/05/11 11:11:56 CalculateScore.go:39: Binomial took %s 4.1367066s
TRACE: 2017/05/11 11:11:56 CalculateScore.go:41: actual vs correct a process that is eating memory a long running background process
TRACE: 2017/05/11 11:11:56 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 11:11:56 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 11:11:58 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 11:11:58 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 11:12:00 questionimpl.go:108: Type is wraping up properties and methods
TRACE: 2017/05/11 11:12:00 questionimpl.go:111: correct Answer fir ID 4 wraping up properties and methods
TRACE: 2017/05/11 11:12:00 CalculateScore.go:39: Binomial took %s 3.993168s
TRACE: 2017/05/11 11:12:00 CalculateScore.go:41: actual vs correct a way of delivering a class from another class  wraping up properties and methods
TRACE: 2017/05/11 11:12:00 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 11:12:00 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 11:12:02 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 11:12:02 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 11:12:04 questionimpl.go:108: Type is big O notation
TRACE: 2017/05/11 11:12:04 questionimpl.go:111: correct Answer fir ID 7 big O notation
TRACE: 2017/05/11 11:12:04 CalculateScore.go:39: Binomial took %s 4.0397132s
TRACE: 2017/05/11 11:12:04 CalculateScore.go:41: actual vs correct unit testing big O notation
TRACE: 2017/05/11 11:12:04 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 11:12:04 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 11:12:06 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 11:12:06 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 11:12:09 questionimpl.go:108: Type is has to implement all method defination from the interface
TRACE: 2017/05/11 11:12:09 questionimpl.go:111: correct Answer fir ID 10 has to implement all method defination from the interface
TRACE: 2017/05/11 11:12:09 CalculateScore.go:39: Binomial took %s 4.6101551s
TRACE: 2017/05/11 11:12:09 CalculateScore.go:41: actual vs correct has to overload the method from the interface has to implement all method defination from the interface
TRACE: 2017/05/11 11:12:09 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 11:12:09 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 11:12:11 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 11:12:11 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 11:12:12 questionimpl.go:108: Type is shows path of current directory
TRACE: 2017/05/11 11:12:12 questionimpl.go:111: correct Answer fir ID 8 shows path of current directory
TRACE: 2017/05/11 11:12:12 CalculateScore.go:39: Binomial took %s 3.6593106s
TRACE: 2017/05/11 11:12:12 CalculateScore.go:41: actual vs correct shows the access defination for a diractory shows path of current directory
TRACE: 2017/05/11 11:12:12 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 11:12:12 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 11:12:15 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 11:12:15 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 11:12:16 questionimpl.go:108: Type is a method that calls itself
TRACE: 2017/05/11 11:12:16 questionimpl.go:111: correct Answer fir ID 5 a method that calls itself
TRACE: 2017/05/11 11:12:16 CalculateScore.go:39: Binomial took %s 3.991585s
TRACE: 2017/05/11 11:12:16 CalculateScore.go:41: actual vs correct a method that contains multiple defination a method that calls itself
TRACE: 2017/05/11 11:12:16 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 11:12:16 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 11:12:19 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 11:12:19 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 11:12:20 questionimpl.go:108: Type is method overriding
TRACE: 2017/05/11 11:12:20 questionimpl.go:111: correct Answer fir ID 3 method overriding
TRACE: 2017/05/11 11:12:20 CalculateScore.go:39: Binomial took %s 4.0692731s
TRACE: 2017/05/11 11:12:20 CalculateScore.go:41: actual vs correct method overriding method overriding
TRACE: 2017/05/11 11:12:20 CalculateScore.go:47: 263409560461970212832400
TRACE: 2017/05/11 11:12:21 CalculateScore.go:50: Binomial took %s 1.0007261s
TRACE: 2017/05/11 11:12:21 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 11:12:21 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 11:12:24 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 11:12:24 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 11:12:26 questionimpl.go:108: Type is stack
TRACE: 2017/05/11 11:12:26 questionimpl.go:111: correct Answer fir ID 6 stack
TRACE: 2017/05/11 11:12:26 CalculateScore.go:39: Binomial took %s 4.0433813s
TRACE: 2017/05/11 11:12:26 CalculateScore.go:41: actual vs correct doubly linked list stack
TRACE: 2017/05/11 11:12:26 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 11:12:26 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 11:12:28 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 11:12:28 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 11:12:30 questionimpl.go:108: Type is both
TRACE: 2017/05/11 11:12:30 questionimpl.go:111: correct Answer fir ID 1 both
TRACE: 2017/05/11 11:12:30 CalculateScore.go:39: Binomial took %s 4.673938s
TRACE: 2017/05/11 11:12:30 CalculateScore.go:41: actual vs correct printer both
TRACE: 2017/05/11 11:12:30 CalculateScore.go:55: Binomial took %s 41.9218064s
TRACE: 2017/05/11 11:13:41 Login.go:14: entering webservice.Login()
TRACE: 2017/05/11 11:13:41 Login.go:19: calling manager.Login()
TRACE: 2017/05/11 11:13:41 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/11 11:13:41 Login.go:16: entering manager.login
TRACE: 2017/05/11 11:13:41 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/11 11:13:41 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/11 11:13:41 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/11 11:13:46 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/11 11:13:46 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/11 11:13:46 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/11 11:13:48 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/11 11:13:48 loginimpl.go:81: executing query.....
TRACE: 2017/05/11 11:13:50 loginimpl.go:93: {0xc042128690 0xc042045900}
TRACE: 2017/05/11 11:13:50 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/11 11:13:50 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/11 11:13:50 loginimpl.go:16: exntering in SaveToken() function {0 2 LvDqtkJWycUIMhQeeizW 2017-05-11 11:13:46.1470269 +0530 IST}
TRACE: 2017/05/11 11:13:50 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/11 11:13:53 loginimpl.go:20: token inserted
TRACE: 2017/05/11 11:13:53 loginimpl.go:21: {0 2 LvDqtkJWycUIMhQeeizW 2017-05-11 11:13:46.1470269 +0530 IST}
TRACE: 2017/05/11 11:13:55 loginimpl.go:33: {0xc04211c4d0 0xc042318a50}
TRACE: 2017/05/11 11:13:55 Login.go:48: {2 rakesh LvDqtkJWycUIMhQeeizW user}
TRACE: 2017/05/11 11:15:15 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/11 11:15:15 QuestionList.go:18: fundamental
TRACE: 2017/05/11 11:15:15 QuestionList.go:19: LvDqtkJWycUIMhQeeizW
TRACE: 2017/05/11 11:15:15 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/11 11:15:15 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/11 11:15:15 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/11 11:15:15 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/11 11:15:18 authenticatetokenimpl.go:47: LvDqtkJWycUIMhQeeizW
TRACE: 2017/05/11 11:15:18 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/11 11:15:18 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/11 11:15:20 authenticatetokenimpl.go:51: LvDqtkJWycUIMhQeeizW
TRACE: 2017/05/11 11:15:20 authenticatetokenimpl.go:59: Type is LvDqtkJWycUIMhQeeizW
TRACE: 2017/05/11 11:15:20 aunthenticate.go:42: 2017-05-11 11:15:20
TRACE: 2017/05/11 11:15:20 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/11 11:15:22 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/11 11:15:22 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/11 11:15:24 authenticatetokenimpl.go:30: {0xc042128cb0 0xc0422a0200}
TRACE: 2017/05/11 11:15:24 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/11 11:15:24 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/11 11:15:24 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/11 11:15:24 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/11 11:15:24 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/11 11:15:24 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/11 11:15:24 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/11 11:15:26 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc04204a1e0 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/11 11:15:32 questionimpl.go:30: &{0xc042129110 0x718ea0 0xc0423d2020 false [] <nil> 0xc042145d70}
TRACE: 2017/05/11 11:15:57 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/11 11:15:57 AnswerList.go:23: [{0 9 a process that is eating memory} {0 6 doubly linked list} {0 4 a way of delivering a class from another class } {0 8 shows the list of files in the directory} {0 1 both } {0 7 } {0 5 a method that loops through a list} {0 2 c} {0 10 has to overload the method from the interface} {0 3 method overriding}]
TRACE: 2017/05/11 11:15:57 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/11 11:15:57 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/11 11:15:57 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/11 11:15:57 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/11 11:15:57 CalculateScore.go:30: answerList [{0 9 a process that is eating memory} {0 6 doubly linked list} {0 4 a way of delivering a class from another class } {0 8 shows the list of files in the directory} {0 1 both } {0 7 } {0 5 a method that loops through a list} {0 2 c} {0 10 has to overload the method from the interface} {0 3 method overriding}]
TRACE: 2017/05/11 11:15:57 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 11:15:57 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 11:15:59 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 11:15:59 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 11:16:01 questionimpl.go:108: Type is a long running background process
TRACE: 2017/05/11 11:16:01 questionimpl.go:111: correct Answer fir ID 9 a long running background process
TRACE: 2017/05/11 11:16:01 CalculateScore.go:39: Binomial took %s 4.0589163s
TRACE: 2017/05/11 11:16:01 CalculateScore.go:41: actual vs correct a process that is eating memory a long running background process
TRACE: 2017/05/11 11:16:01 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 11:16:01 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 11:16:03 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 11:16:03 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 11:16:05 questionimpl.go:108: Type is stack
TRACE: 2017/05/11 11:16:05 questionimpl.go:111: correct Answer fir ID 6 stack
TRACE: 2017/05/11 11:16:05 CalculateScore.go:39: Binomial took %s 4.0040068s
TRACE: 2017/05/11 11:16:05 CalculateScore.go:41: actual vs correct doubly linked list stack
TRACE: 2017/05/11 11:16:05 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 11:16:05 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 11:16:07 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 11:16:07 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 11:16:10 questionimpl.go:108: Type is wraping up properties and methods
TRACE: 2017/05/11 11:16:10 questionimpl.go:111: correct Answer fir ID 4 wraping up properties and methods
TRACE: 2017/05/11 11:16:10 CalculateScore.go:39: Binomial took %s 4.6603443s
TRACE: 2017/05/11 11:16:10 CalculateScore.go:41: actual vs correct a way of delivering a class from another class  wraping up properties and methods
TRACE: 2017/05/11 11:16:10 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 11:16:10 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 11:16:13 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 11:16:13 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 11:16:15 questionimpl.go:108: Type is shows path of current directory
TRACE: 2017/05/11 11:16:15 questionimpl.go:111: correct Answer fir ID 8 shows path of current directory
TRACE: 2017/05/11 11:16:15 CalculateScore.go:39: Binomial took %s 5.5776648s
TRACE: 2017/05/11 11:16:15 CalculateScore.go:41: actual vs correct shows the list of files in the directory shows path of current directory
TRACE: 2017/05/11 11:16:15 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 11:16:15 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 11:16:17 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 11:16:17 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 11:16:19 questionimpl.go:108: Type is both
TRACE: 2017/05/11 11:16:19 questionimpl.go:111: correct Answer fir ID 1 both
TRACE: 2017/05/11 11:16:19 CalculateScore.go:39: Binomial took %s 3.8293043s
TRACE: 2017/05/11 11:16:19 CalculateScore.go:41: actual vs correct both  both
TRACE: 2017/05/11 11:16:19 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 11:16:19 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 11:16:23 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 11:16:23 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 11:16:25 questionimpl.go:108: Type is big O notation
TRACE: 2017/05/11 11:16:25 questionimpl.go:111: correct Answer fir ID 7 big O notation
TRACE: 2017/05/11 11:16:25 CalculateScore.go:39: Binomial took %s 5.6725504s
TRACE: 2017/05/11 11:16:25 CalculateScore.go:41: actual vs correct  big O notation
TRACE: 2017/05/11 11:16:25 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 11:16:25 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 11:16:29 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 11:16:29 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 11:16:31 questionimpl.go:108: Type is a method that calls itself
TRACE: 2017/05/11 11:16:31 questionimpl.go:111: correct Answer fir ID 5 a method that calls itself
TRACE: 2017/05/11 11:16:31 CalculateScore.go:39: Binomial took %s 6.1577959s
TRACE: 2017/05/11 11:16:31 CalculateScore.go:41: actual vs correct a method that loops through a list a method that calls itself
TRACE: 2017/05/11 11:16:31 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 11:16:31 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 11:16:34 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 11:16:34 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 11:16:36 questionimpl.go:108: Type is c
TRACE: 2017/05/11 11:16:36 questionimpl.go:111: correct Answer fir ID 2 c
TRACE: 2017/05/11 11:16:36 CalculateScore.go:39: Binomial took %s 5.0032996s
TRACE: 2017/05/11 11:16:36 CalculateScore.go:41: actual vs correct c c
TRACE: 2017/05/11 11:16:36 CalculateScore.go:47: 263409560461970212832400
TRACE: 2017/05/11 11:16:37 CalculateScore.go:50: Binomial took %s 1.0009807s
TRACE: 2017/05/11 11:16:37 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 11:16:37 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 11:16:39 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 11:16:39 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 11:16:41 questionimpl.go:108: Type is has to implement all method defination from the interface
TRACE: 2017/05/11 11:16:41 questionimpl.go:111: correct Answer fir ID 10 has to implement all method defination from the interface
TRACE: 2017/05/11 11:16:41 CalculateScore.go:39: Binomial took %s 4.0436039s
TRACE: 2017/05/11 11:16:41 CalculateScore.go:41: actual vs correct has to overload the method from the interface has to implement all method defination from the interface
TRACE: 2017/05/11 11:16:41 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 11:16:41 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 11:16:43 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 11:16:43 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 11:16:45 questionimpl.go:108: Type is method overriding
TRACE: 2017/05/11 11:16:45 questionimpl.go:111: correct Answer fir ID 3 method overriding
TRACE: 2017/05/11 11:16:45 CalculateScore.go:39: Binomial took %s 3.7214655s
TRACE: 2017/05/11 11:16:45 CalculateScore.go:41: actual vs correct method overriding method overriding
TRACE: 2017/05/11 11:16:45 CalculateScore.go:47: 263409560461970212832400
TRACE: 2017/05/11 11:16:46 CalculateScore.go:50: Binomial took %s 1.0019938s
TRACE: 2017/05/11 11:16:46 CalculateScore.go:55: Binomial took %s 48.7339273s
TRACE: 2017/05/11 11:20:11 Login.go:14: entering webservice.Login()
TRACE: 2017/05/11 11:20:11 Login.go:19: calling manager.Login()
TRACE: 2017/05/11 11:20:11 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/11 11:20:11 Login.go:16: entering manager.login
TRACE: 2017/05/11 11:20:11 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/11 11:20:11 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/11 11:20:11 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/11 11:20:16 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/11 11:20:16 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/11 11:20:16 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/11 11:20:18 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/11 11:20:18 loginimpl.go:81: executing query.....
TRACE: 2017/05/11 11:20:20 loginimpl.go:93: {0xc042128150 0xc042136a90}
TRACE: 2017/05/11 11:20:20 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/11 11:20:20 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/11 11:20:20 loginimpl.go:16: exntering in SaveToken() function {0 2 EXXzbpRMxgxdFqFViYTx 2017-05-11 11:20:16.2255638 +0530 IST}
TRACE: 2017/05/11 11:20:20 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/11 11:20:22 loginimpl.go:20: token inserted
TRACE: 2017/05/11 11:20:22 loginimpl.go:21: {0 2 EXXzbpRMxgxdFqFViYTx 2017-05-11 11:20:16.2255638 +0530 IST}
TRACE: 2017/05/11 11:20:24 loginimpl.go:33: {0xc0421389a0 0xc0422a0a00}
TRACE: 2017/05/11 11:20:24 Login.go:48: {2 rakesh EXXzbpRMxgxdFqFViYTx user}
TRACE: 2017/05/11 11:20:33 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/11 11:20:33 QuestionList.go:18: fundamental
TRACE: 2017/05/11 11:20:33 QuestionList.go:19: EXXzbpRMxgxdFqFViYTx
TRACE: 2017/05/11 11:20:33 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/11 11:20:33 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/11 11:20:33 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/11 11:20:33 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/11 11:20:36 authenticatetokenimpl.go:47: EXXzbpRMxgxdFqFViYTx
TRACE: 2017/05/11 11:20:36 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/11 11:20:36 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/11 11:20:37 authenticatetokenimpl.go:51: EXXzbpRMxgxdFqFViYTx
TRACE: 2017/05/11 11:20:37 authenticatetokenimpl.go:59: Type is EXXzbpRMxgxdFqFViYTx
TRACE: 2017/05/11 11:20:37 aunthenticate.go:42: 2017-05-11 11:20:37
TRACE: 2017/05/11 11:20:37 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/11 11:20:39 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/11 11:20:39 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/11 11:20:42 authenticatetokenimpl.go:30: {0xc0421287e0 0xc042137a20}
TRACE: 2017/05/11 11:20:42 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/11 11:20:42 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/11 11:20:42 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/11 11:20:42 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/11 11:20:42 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/11 11:20:42 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/11 11:20:42 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/11 11:20:45 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc04230d2c0 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/11 11:20:47 questionimpl.go:30: &{0xc042128a10 0x718ea0 0xc042040a00 false [] <nil> 0xc0422a8f30}
TRACE: 2017/05/11 11:21:02 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/11 11:21:02 AnswerList.go:23: [{0 9 a long running background process} {0 8 shows path of current directory} {0 10 } {0 7 big O notation} {0 4 hiding unnecessary information to outside world} {0 2 objective c} {0 3 } {0 1 none} {0 5 a method that loops through a list} {0 6 linked list}]
TRACE: 2017/05/11 11:21:02 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/11 11:21:02 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/11 11:21:02 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/11 11:21:02 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/11 11:21:02 CalculateScore.go:30: answerList [{0 9 a long running background process} {0 8 shows path of current directory} {0 10 } {0 7 big O notation} {0 4 hiding unnecessary information to outside world} {0 2 objective c} {0 3 } {0 1 none} {0 5 a method that loops through a list} {0 6 linked list}]
TRACE: 2017/05/11 11:21:02 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 11:21:02 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 11:21:04 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 11:21:04 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 11:21:06 questionimpl.go:108: Type is a long running background process
TRACE: 2017/05/11 11:21:06 questionimpl.go:111: correct Answer fir ID 9 a long running background process
TRACE: 2017/05/11 11:21:06 CalculateScore.go:39: Binomial took %s 3.6953736s
TRACE: 2017/05/11 11:21:06 CalculateScore.go:41: actual vs correct a long running background process a long running background process
TRACE: 2017/05/11 11:21:06 CalculateScore.go:47: 263409560461970212832400
TRACE: 2017/05/11 11:21:07 CalculateScore.go:50: Binomial took %s 1.0016551s
TRACE: 2017/05/11 11:21:07 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 11:21:07 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 11:21:09 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 11:21:09 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 11:21:10 questionimpl.go:108: Type is shows path of current directory
TRACE: 2017/05/11 11:21:10 questionimpl.go:111: correct Answer fir ID 8 shows path of current directory
TRACE: 2017/05/11 11:21:10 CalculateScore.go:39: Binomial took %s 3.7787244s
TRACE: 2017/05/11 11:21:10 CalculateScore.go:41: actual vs correct shows path of current directory shows path of current directory
TRACE: 2017/05/11 11:21:10 CalculateScore.go:47: 263409560461970212832400
TRACE: 2017/05/11 11:21:11 CalculateScore.go:50: Binomial took %s 1.0010304s
TRACE: 2017/05/11 11:21:11 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 11:21:11 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 11:21:14 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 11:21:14 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 11:21:16 questionimpl.go:108: Type is has to implement all method defination from the interface
TRACE: 2017/05/11 11:21:16 questionimpl.go:111: correct Answer fir ID 10 has to implement all method defination from the interface
TRACE: 2017/05/11 11:21:16 CalculateScore.go:39: Binomial took %s 4.8730962s
TRACE: 2017/05/11 11:21:16 CalculateScore.go:41: actual vs correct  has to implement all method defination from the interface
TRACE: 2017/05/11 11:21:16 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 11:21:16 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 11:21:18 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 11:21:18 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 11:21:20 questionimpl.go:108: Type is big O notation
TRACE: 2017/05/11 11:21:20 questionimpl.go:111: correct Answer fir ID 7 big O notation
TRACE: 2017/05/11 11:21:20 CalculateScore.go:39: Binomial took %s 3.7876913s
TRACE: 2017/05/11 11:21:20 CalculateScore.go:41: actual vs correct big O notation big O notation
TRACE: 2017/05/11 11:21:20 CalculateScore.go:47: 263409560461970212832400
TRACE: 2017/05/11 11:21:21 CalculateScore.go:50: Binomial took %s 1.0047143s
TRACE: 2017/05/11 11:21:21 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 11:21:21 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 11:21:23 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 11:21:23 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 11:21:25 questionimpl.go:108: Type is wraping up properties and methods
TRACE: 2017/05/11 11:21:25 questionimpl.go:111: correct Answer fir ID 4 wraping up properties and methods
TRACE: 2017/05/11 11:21:25 CalculateScore.go:39: Binomial took %s 4.2019937s
TRACE: 2017/05/11 11:21:25 CalculateScore.go:41: actual vs correct hiding unnecessary information to outside world wraping up properties and methods
TRACE: 2017/05/11 11:21:25 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 11:21:25 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 11:21:28 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 11:21:28 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 11:21:30 questionimpl.go:108: Type is c
TRACE: 2017/05/11 11:21:30 questionimpl.go:111: correct Answer fir ID 2 c
TRACE: 2017/05/11 11:21:30 CalculateScore.go:39: Binomial took %s 4.8193125s
TRACE: 2017/05/11 11:21:30 CalculateScore.go:41: actual vs correct objective c c
TRACE: 2017/05/11 11:21:30 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 11:21:30 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 11:21:32 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 11:21:32 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 11:21:34 questionimpl.go:108: Type is method overriding
TRACE: 2017/05/11 11:21:34 questionimpl.go:111: correct Answer fir ID 3 method overriding
TRACE: 2017/05/11 11:21:34 CalculateScore.go:39: Binomial took %s 3.835245s
TRACE: 2017/05/11 11:21:34 CalculateScore.go:41: actual vs correct  method overriding
TRACE: 2017/05/11 11:21:34 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 11:21:34 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 11:21:37 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 11:21:37 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 11:21:38 questionimpl.go:108: Type is both
TRACE: 2017/05/11 11:21:38 questionimpl.go:111: correct Answer fir ID 1 both
TRACE: 2017/05/11 11:21:38 CalculateScore.go:39: Binomial took %s 4.542253s
TRACE: 2017/05/11 11:21:38 CalculateScore.go:41: actual vs correct none both
TRACE: 2017/05/11 11:21:38 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 11:21:38 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 11:21:41 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 11:21:41 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 11:21:43 questionimpl.go:108: Type is a method that calls itself
TRACE: 2017/05/11 11:21:43 questionimpl.go:111: correct Answer fir ID 5 a method that calls itself
TRACE: 2017/05/11 11:21:43 CalculateScore.go:39: Binomial took %s 4.1567354s
TRACE: 2017/05/11 11:21:43 CalculateScore.go:41: actual vs correct a method that loops through a list a method that calls itself
TRACE: 2017/05/11 11:21:43 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 11:21:43 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 11:21:45 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 11:21:45 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 11:21:46 questionimpl.go:108: Type is stack
TRACE: 2017/05/11 11:21:46 questionimpl.go:111: correct Answer fir ID 6 stack
TRACE: 2017/05/11 11:21:46 CalculateScore.go:39: Binomial took %s 3.9549192s
TRACE: 2017/05/11 11:21:46 CalculateScore.go:41: actual vs correct linked list stack
TRACE: 2017/05/11 11:21:46 CalculateScore.go:55: Binomial took %s 44.6557292s
TRACE: 2017/05/11 11:24:01 Login.go:14: entering webservice.Login()
TRACE: 2017/05/11 11:24:01 Login.go:19: calling manager.Login()
TRACE: 2017/05/11 11:24:01 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/11 11:24:01 Login.go:16: entering manager.login
TRACE: 2017/05/11 11:24:01 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/11 11:24:01 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/11 11:24:01 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/11 11:24:06 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/11 11:24:06 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/11 11:24:06 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/11 11:24:08 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/11 11:24:08 loginimpl.go:81: executing query.....
TRACE: 2017/05/11 11:24:11 loginimpl.go:93: {0xc04211a460 0xc042136a80}
TRACE: 2017/05/11 11:24:11 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/11 11:24:11 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/11 11:24:11 loginimpl.go:16: exntering in SaveToken() function {0 2 NMrsQJdoFhMJoOivkffR 2017-05-11 11:24:06.9432897 +0530 IST}
TRACE: 2017/05/11 11:24:11 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/11 11:24:13 loginimpl.go:20: token inserted
TRACE: 2017/05/11 11:24:13 loginimpl.go:21: {0 2 NMrsQJdoFhMJoOivkffR 2017-05-11 11:24:06.9432897 +0530 IST}
TRACE: 2017/05/11 11:24:15 loginimpl.go:33: {0xc04211c1c0 0xc042318210}
TRACE: 2017/05/11 11:24:15 Login.go:48: {2 rakesh NMrsQJdoFhMJoOivkffR user}
TRACE: 2017/05/11 11:24:25 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/11 11:24:25 QuestionList.go:18: fundamental
TRACE: 2017/05/11 11:24:25 QuestionList.go:19: NMrsQJdoFhMJoOivkffR
TRACE: 2017/05/11 11:24:25 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/11 11:24:25 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/11 11:24:25 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/11 11:24:25 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/11 11:24:28 authenticatetokenimpl.go:47: NMrsQJdoFhMJoOivkffR
TRACE: 2017/05/11 11:24:28 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/11 11:24:28 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/11 11:24:30 authenticatetokenimpl.go:51: NMrsQJdoFhMJoOivkffR
TRACE: 2017/05/11 11:24:30 authenticatetokenimpl.go:59: Type is NMrsQJdoFhMJoOivkffR
TRACE: 2017/05/11 11:24:30 aunthenticate.go:42: 2017-05-11 11:24:30
TRACE: 2017/05/11 11:24:30 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/11 11:24:32 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/11 11:24:32 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/11 11:24:33 authenticatetokenimpl.go:30: {0xc04211c460 0xc042318b00}
TRACE: 2017/05/11 11:24:33 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/11 11:24:33 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/11 11:24:33 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/11 11:24:33 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/11 11:24:33 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/11 11:24:33 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/11 11:24:33 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/11 11:24:36 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc04211f5c0 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/11 11:24:39 questionimpl.go:30: &{0xc042129030 0x718ea0 0xc04235d500 false [] <nil> 0xc0423631d0}
TRACE: 2017/05/11 11:25:01 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/11 11:25:01 AnswerList.go:23: [{0 4 hiding unnecessary information to outside world} {0 7 SLOC} {0 10 has to implement all method defination from the interface} {0 9 a process that is dead} {0 1 none} {0 8 shows the list of files in the directory} {0 3 method overloading} {0 2 java} {0 6 linked list} {0 5 a method that loops through a list}]
TRACE: 2017/05/11 11:25:01 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/11 11:25:01 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/11 11:25:01 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/11 11:25:01 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/11 11:25:01 CalculateScore.go:30: answerList [{0 4 hiding unnecessary information to outside world} {0 7 SLOC} {0 10 has to implement all method defination from the interface} {0 9 a process that is dead} {0 1 none} {0 8 shows the list of files in the directory} {0 3 method overloading} {0 2 java} {0 6 linked list} {0 5 a method that loops through a list}]
TRACE: 2017/05/11 11:25:01 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 11:25:01 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 11:25:03 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 11:25:03 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 11:25:10 questionimpl.go:108: Type is wraping up properties and methods
TRACE: 2017/05/11 11:25:10 questionimpl.go:111: correct Answer fir ID 4 wraping up properties and methods
TRACE: 2017/05/11 11:25:10 CalculateScore.go:39: Binomial took %s 8.6140618s
TRACE: 2017/05/11 11:25:10 CalculateScore.go:41: actual vs correct hiding unnecessary information to outside world wraping up properties and methods
TRACE: 2017/05/11 11:25:10 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 11:25:10 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 11:25:14 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 11:25:14 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 11:25:15 questionimpl.go:108: Type is big O notation
TRACE: 2017/05/11 11:25:15 questionimpl.go:111: correct Answer fir ID 7 big O notation
TRACE: 2017/05/11 11:25:15 CalculateScore.go:39: Binomial took %s 5.9128185s
TRACE: 2017/05/11 11:25:15 CalculateScore.go:41: actual vs correct SLOC big O notation
TRACE: 2017/05/11 11:25:15 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 11:25:15 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 11:25:18 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 11:25:18 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 11:25:21 questionimpl.go:108: Type is has to implement all method defination from the interface
TRACE: 2017/05/11 11:25:21 questionimpl.go:111: correct Answer fir ID 10 has to implement all method defination from the interface
TRACE: 2017/05/11 11:25:21 CalculateScore.go:39: Binomial took %s 5.0607882s
TRACE: 2017/05/11 11:25:21 CalculateScore.go:41: actual vs correct has to implement all method defination from the interface has to implement all method defination from the interface
TRACE: 2017/05/11 11:25:21 CalculateScore.go:47: 263409560461970212832400
TRACE: 2017/05/11 11:25:22 CalculateScore.go:50: Binomial took %s 1.0015429s
TRACE: 2017/05/11 11:25:22 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 11:25:22 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 11:25:24 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 11:25:24 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 11:25:27 questionimpl.go:108: Type is a long running background process
TRACE: 2017/05/11 11:25:27 questionimpl.go:111: correct Answer fir ID 9 a long running background process
TRACE: 2017/05/11 11:25:27 CalculateScore.go:39: Binomial took %s 5.2867401s
TRACE: 2017/05/11 11:25:27 CalculateScore.go:41: actual vs correct a process that is dead a long running background process
TRACE: 2017/05/11 11:25:27 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 11:25:27 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 11:25:29 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 11:25:29 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 11:25:31 questionimpl.go:108: Type is both
TRACE: 2017/05/11 11:25:31 questionimpl.go:111: correct Answer fir ID 1 both
TRACE: 2017/05/11 11:25:31 CalculateScore.go:39: Binomial took %s 4.1569542s
TRACE: 2017/05/11 11:25:31 CalculateScore.go:41: actual vs correct none both
TRACE: 2017/05/11 11:25:31 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 11:25:31 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 11:25:33 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 11:25:33 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 11:25:35 questionimpl.go:108: Type is shows path of current directory
TRACE: 2017/05/11 11:25:35 questionimpl.go:111: correct Answer fir ID 8 shows path of current directory
TRACE: 2017/05/11 11:25:35 CalculateScore.go:39: Binomial took %s 3.7756835s
TRACE: 2017/05/11 11:25:35 CalculateScore.go:41: actual vs correct shows the list of files in the directory shows path of current directory
TRACE: 2017/05/11 11:25:35 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 11:25:35 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 11:25:37 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 11:25:37 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 11:25:38 questionimpl.go:108: Type is method overriding
TRACE: 2017/05/11 11:25:38 questionimpl.go:111: correct Answer fir ID 3 method overriding
TRACE: 2017/05/11 11:25:38 CalculateScore.go:39: Binomial took %s 3.6896222s
TRACE: 2017/05/11 11:25:38 CalculateScore.go:41: actual vs correct method overloading method overriding
TRACE: 2017/05/11 11:25:38 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 11:25:38 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 11:25:41 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 11:25:41 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 11:25:44 questionimpl.go:108: Type is c
TRACE: 2017/05/11 11:25:44 questionimpl.go:111: correct Answer fir ID 2 c
TRACE: 2017/05/11 11:25:44 CalculateScore.go:39: Binomial took %s 5.5711811s
TRACE: 2017/05/11 11:25:44 CalculateScore.go:41: actual vs correct java c
TRACE: 2017/05/11 11:25:44 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 11:25:44 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 11:25:46 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 11:25:46 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 11:25:48 questionimpl.go:108: Type is stack
TRACE: 2017/05/11 11:25:48 questionimpl.go:111: correct Answer fir ID 6 stack
TRACE: 2017/05/11 11:25:48 CalculateScore.go:39: Binomial took %s 3.8246092s
TRACE: 2017/05/11 11:25:48 CalculateScore.go:41: actual vs correct linked list stack
TRACE: 2017/05/11 11:25:48 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 11:25:48 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 11:25:50 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 11:25:50 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 11:25:52 questionimpl.go:108: Type is a method that calls itself
TRACE: 2017/05/11 11:25:52 questionimpl.go:111: correct Answer fir ID 5 a method that calls itself
TRACE: 2017/05/11 11:25:52 CalculateScore.go:39: Binomial took %s 3.8027045s
TRACE: 2017/05/11 11:25:52 CalculateScore.go:41: actual vs correct a method that loops through a list a method that calls itself
TRACE: 2017/05/11 11:25:52 CalculateScore.go:55: Binomial took %s 50.6977071s
TRACE: 2017/05/11 11:27:10 Login.go:14: entering webservice.Login()
TRACE: 2017/05/11 11:27:10 Login.go:19: calling manager.Login()
TRACE: 2017/05/11 11:27:10 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/11 11:27:10 Login.go:16: entering manager.login
TRACE: 2017/05/11 11:27:10 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/11 11:27:10 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/11 11:27:10 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/11 11:27:15 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/11 11:27:15 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/11 11:27:15 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/11 11:27:17 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/11 11:27:17 loginimpl.go:81: executing query.....
TRACE: 2017/05/11 11:27:19 loginimpl.go:93: {0xc042148a10 0xc042137cd0}
TRACE: 2017/05/11 11:27:19 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/11 11:27:19 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/11 11:27:19 loginimpl.go:16: exntering in SaveToken() function {0 2 YegDruglWRSKtSULErbX 2017-05-11 11:27:15.2815036 +0530 IST}
TRACE: 2017/05/11 11:27:19 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/11 11:27:22 loginimpl.go:20: token inserted
TRACE: 2017/05/11 11:27:22 loginimpl.go:21: {0 2 YegDruglWRSKtSULErbX 2017-05-11 11:27:15.2815036 +0530 IST}
TRACE: 2017/05/11 11:27:25 loginimpl.go:33: {0xc04211a310 0xc042045810}
TRACE: 2017/05/11 11:27:25 Login.go:48: {2 rakesh YegDruglWRSKtSULErbX user}
TRACE: 2017/05/11 11:27:38 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/11 11:27:38 QuestionList.go:18: java
TRACE: 2017/05/11 11:27:38 QuestionList.go:19: YegDruglWRSKtSULErbX
TRACE: 2017/05/11 11:27:38 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/11 11:27:38 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/11 11:27:38 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/11 11:27:38 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/11 11:27:40 authenticatetokenimpl.go:47: YegDruglWRSKtSULErbX
TRACE: 2017/05/11 11:27:40 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/11 11:27:40 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/11 11:27:43 authenticatetokenimpl.go:51: YegDruglWRSKtSULErbX
TRACE: 2017/05/11 11:27:43 authenticatetokenimpl.go:59: Type is YegDruglWRSKtSULErbX
TRACE: 2017/05/11 11:27:43 aunthenticate.go:42: 2017-05-11 11:27:43
TRACE: 2017/05/11 11:27:43 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/11 11:27:46 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/11 11:27:46 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/11 11:27:47 authenticatetokenimpl.go:30: {0xc042148e70 0xc042136220}
TRACE: 2017/05/11 11:27:47 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/11 11:27:47 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/11 11:27:47 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/11 11:27:47 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/11 11:27:47 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/11 11:27:47 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/11 11:27:47 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/11 11:27:50 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0421d4ea0 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/11 11:27:54 questionimpl.go:30: &{0xc04211a150 0x718ea0 0xc0421d82a0 false [] <nil> 0xc0422a80f0}
TRACE: 2017/05/11 11:28:38 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/11 11:28:38 AnswerList.go:23: [{0 24 volatile} {0 31 randomize()} {0 23 System class} {0 29 fflush()} {0 32 EMPTY_LIST} {0 17 Both of above} {0 34 for(; ;)} {0 20 Object} {0 12 Yes} {0 16 executeUpdate()} {0 26 101} {0 30 max(Collection c)} {0 25 } {0 33 } {0 22 Queue} {0 18 } {0 28 All of the mentioned} {0 15 java.util.LinkedList} {0 11 Final class} {0 27 0 to 65535} {0 13 it is syntax} {0 35 private} {0 19 wrapping} {0 14 Suspend() method} {0 21 double}]
TRACE: 2017/05/11 11:28:38 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/11 11:28:38 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/11 11:28:38 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/11 11:28:38 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/11 11:28:38 CalculateScore.go:30: answerList [{0 24 volatile} {0 31 randomize()} {0 23 System class} {0 29 fflush()} {0 32 EMPTY_LIST} {0 17 Both of above} {0 34 for(; ;)} {0 20 Object} {0 12 Yes} {0 16 executeUpdate()} {0 26 101} {0 30 max(Collection c)} {0 25 } {0 33 } {0 22 Queue} {0 18 } {0 28 All of the mentioned} {0 15 java.util.LinkedList} {0 11 Final class} {0 27 0 to 65535} {0 13 it is syntax} {0 35 private} {0 19 wrapping} {0 14 Suspend() method} {0 21 double}]
TRACE: 2017/05/11 11:28:38 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 11:28:38 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 11:28:40 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 11:28:40 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 11:28:43 questionimpl.go:108: Type is transient
TRACE: 2017/05/11 11:28:43 questionimpl.go:111: correct Answer fir ID 24 transient
TRACE: 2017/05/11 11:28:43 CalculateScore.go:39: Binomial took %s 5.0969658s
TRACE: 2017/05/11 11:28:43 CalculateScore.go:41: actual vs correct volatile transient
TRACE: 2017/05/11 11:28:43 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 11:28:43 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 11:28:45 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 11:28:45 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 11:28:51 questionimpl.go:108: Type is shuffle()
TRACE: 2017/05/11 11:28:51 questionimpl.go:111: correct Answer fir ID 31 shuffle()
TRACE: 2017/05/11 11:28:51 CalculateScore.go:39: Binomial took %s 8.5287599s
TRACE: 2017/05/11 11:28:51 CalculateScore.go:41: actual vs correct randomize() shuffle()
TRACE: 2017/05/11 11:28:51 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 11:28:51 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 11:28:53 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 11:28:53 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 11:28:55 questionimpl.go:108: Type is PrintStream class
TRACE: 2017/05/11 11:28:55 questionimpl.go:111: correct Answer fir ID 23 PrintStream class
TRACE: 2017/05/11 11:28:55 CalculateScore.go:39: Binomial took %s 3.8197144s
TRACE: 2017/05/11 11:28:55 CalculateScore.go:41: actual vs correct System class PrintStream class
TRACE: 2017/05/11 11:28:55 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 11:28:55 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 11:28:57 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 11:28:57 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 11:29:00 questionimpl.go:108: Type is flush()
TRACE: 2017/05/11 11:29:00 questionimpl.go:111: correct Answer fir ID 29 flush()
TRACE: 2017/05/11 11:29:00 CalculateScore.go:39: Binomial took %s 4.5641508s
TRACE: 2017/05/11 11:29:00 CalculateScore.go:41: actual vs correct fflush() flush()
TRACE: 2017/05/11 11:29:00 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 11:29:00 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 11:29:02 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 11:29:02 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 11:29:04 questionimpl.go:108: Type is All of the mentioned
TRACE: 2017/05/11 11:29:04 questionimpl.go:111: correct Answer fir ID 32 All of the mentioned
TRACE: 2017/05/11 11:29:04 CalculateScore.go:39: Binomial took %s 4.4430805s
TRACE: 2017/05/11 11:29:04 CalculateScore.go:41: actual vs correct EMPTY_LIST All of the mentioned
TRACE: 2017/05/11 11:29:04 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 11:29:04 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 11:29:07 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 11:29:07 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 11:29:09 questionimpl.go:108: Type is Multithreaded
TRACE: 2017/05/11 11:29:09 questionimpl.go:111: correct Answer fir ID 17 Multithreaded
TRACE: 2017/05/11 11:29:09 CalculateScore.go:39: Binomial took %s 4.7090336s
TRACE: 2017/05/11 11:29:09 CalculateScore.go:41: actual vs correct Both of above Multithreaded
TRACE: 2017/05/11 11:29:09 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 11:29:09 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 11:29:11 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 11:29:11 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 11:29:13 questionimpl.go:108: Type is All of the above
TRACE: 2017/05/11 11:29:13 questionimpl.go:111: correct Answer fir ID 34 All of the above
TRACE: 2017/05/11 11:29:13 CalculateScore.go:39: Binomial took %s 3.8137568s
TRACE: 2017/05/11 11:29:13 CalculateScore.go:41: actual vs correct for(; ;) All of the above
TRACE: 2017/05/11 11:29:13 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 11:29:13 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 11:29:16 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 11:29:16 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 11:29:18 questionimpl.go:108: Type is Constructor
TRACE: 2017/05/11 11:29:18 questionimpl.go:111: correct Answer fir ID 20 Constructor
TRACE: 2017/05/11 11:29:18 CalculateScore.go:39: Binomial took %s 5.5431072s
TRACE: 2017/05/11 11:29:18 CalculateScore.go:41: actual vs correct Object Constructor
TRACE: 2017/05/11 11:29:18 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 11:29:18 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 11:29:20 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 11:29:20 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 11:29:22 questionimpl.go:108: Type is No
TRACE: 2017/05/11 11:29:22 questionimpl.go:111: correct Answer fir ID 12 No
TRACE: 2017/05/11 11:29:22 CalculateScore.go:39: Binomial took %s 3.920454s
TRACE: 2017/05/11 11:29:22 CalculateScore.go:41: actual vs correct Yes No
TRACE: 2017/05/11 11:29:22 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 11:29:22 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 11:29:25 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 11:29:25 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 11:29:27 questionimpl.go:108: Type is getConnection()
TRACE: 2017/05/11 11:29:27 questionimpl.go:111: correct Answer fir ID 16 getConnection()
TRACE: 2017/05/11 11:29:27 CalculateScore.go:39: Binomial took %s 4.671777s
TRACE: 2017/05/11 11:29:27 CalculateScore.go:41: actual vs correct executeUpdate() getConnection()
TRACE: 2017/05/11 11:29:27 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 11:29:27 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 11:29:29 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 11:29:29 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 11:29:31 questionimpl.go:108: Type is 100
TRACE: 2017/05/11 11:29:31 questionimpl.go:111: correct Answer fir ID 26 100
TRACE: 2017/05/11 11:29:31 CalculateScore.go:39: Binomial took %s 4.1916542s
TRACE: 2017/05/11 11:29:31 CalculateScore.go:41: actual vs correct 101 100
TRACE: 2017/05/11 11:29:31 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 11:29:31 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 11:29:33 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 11:29:33 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 11:29:35 questionimpl.go:108: Type is max(Comparator comp)
TRACE: 2017/05/11 11:29:35 questionimpl.go:111: correct Answer fir ID 30 max(Comparator comp)
TRACE: 2017/05/11 11:29:35 CalculateScore.go:39: Binomial took %s 4.0108788s
TRACE: 2017/05/11 11:29:35 CalculateScore.go:41: actual vs correct max(Collection c) max(Comparator comp)
TRACE: 2017/05/11 11:29:35 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 11:29:35 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 11:29:37 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 11:29:37 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 11:29:40 questionimpl.go:108: Type is Interface
TRACE: 2017/05/11 11:29:40 questionimpl.go:111: correct Answer fir ID 25 Interface
TRACE: 2017/05/11 11:29:40 CalculateScore.go:39: Binomial took %s 4.6259152s
TRACE: 2017/05/11 11:29:40 CalculateScore.go:41: actual vs correct  Interface
TRACE: 2017/05/11 11:29:40 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 11:29:40 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 11:29:42 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 11:29:42 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 11:29:44 questionimpl.go:108: Type is switch, if
TRACE: 2017/05/11 11:29:44 questionimpl.go:111: correct Answer fir ID 33 switch, if
TRACE: 2017/05/11 11:29:44 CalculateScore.go:39: Binomial took %s 4.6063779s
TRACE: 2017/05/11 11:29:44 CalculateScore.go:41: actual vs correct  switch, if
TRACE: 2017/05/11 11:29:44 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 11:29:44 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 11:29:47 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 11:29:47 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 11:29:51 questionimpl.go:108: Type is Queue
TRACE: 2017/05/11 11:29:51 questionimpl.go:111: correct Answer fir ID 22 Queue
TRACE: 2017/05/11 11:29:51 CalculateScore.go:39: Binomial took %s 6.9873389s
TRACE: 2017/05/11 11:29:51 CalculateScore.go:41: actual vs correct Queue Queue
TRACE: 2017/05/11 11:29:51 CalculateScore.go:47: 263409560461970212832400
TRACE: 2017/05/11 11:29:52 CalculateScore.go:50: Binomial took %s 1.0026951s
TRACE: 2017/05/11 11:29:52 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 11:29:52 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 11:29:54 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 11:29:54 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 11:29:56 questionimpl.go:108: Type is java.util.Date
TRACE: 2017/05/11 11:29:56 questionimpl.go:111: correct Answer fir ID 18 java.util.Date
TRACE: 2017/05/11 11:29:56 CalculateScore.go:39: Binomial took %s 4.0531872s
TRACE: 2017/05/11 11:29:56 CalculateScore.go:41: actual vs correct  java.util.Date
TRACE: 2017/05/11 11:29:56 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 11:29:56 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 11:29:59 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 11:29:59 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 11:30:01 questionimpl.go:108: Type is Serialization
TRACE: 2017/05/11 11:30:01 questionimpl.go:111: correct Answer fir ID 28 Serialization
TRACE: 2017/05/11 11:30:01 CalculateScore.go:39: Binomial took %s 4.6245795s
TRACE: 2017/05/11 11:30:01 CalculateScore.go:41: actual vs correct All of the mentioned Serialization
TRACE: 2017/05/11 11:30:01 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 11:30:01 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 11:30:03 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 11:30:03 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 11:30:05 questionimpl.go:108: Type is java.util.TreeMap
TRACE: 2017/05/11 11:30:05 questionimpl.go:111: correct Answer fir ID 15 java.util.TreeMap
TRACE: 2017/05/11 11:30:05 CalculateScore.go:39: Binomial took %s 3.8552218s
TRACE: 2017/05/11 11:30:05 CalculateScore.go:41: actual vs correct java.util.LinkedList java.util.TreeMap
TRACE: 2017/05/11 11:30:05 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 11:30:05 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 11:30:08 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 11:30:08 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 11:30:09 questionimpl.go:108: Type is Final class
TRACE: 2017/05/11 11:30:09 questionimpl.go:111: correct Answer fir ID 11 Final class
TRACE: 2017/05/11 11:30:09 CalculateScore.go:39: Binomial took %s 4.5597398s
TRACE: 2017/05/11 11:30:09 CalculateScore.go:41: actual vs correct Final class Final class
TRACE: 2017/05/11 11:30:09 CalculateScore.go:47: 263409560461970212832400
TRACE: 2017/05/11 11:30:10 CalculateScore.go:50: Binomial took %s 1.0011187s
TRACE: 2017/05/11 11:30:10 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 11:30:10 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 11:30:13 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 11:30:13 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 11:30:15 questionimpl.go:108: Type is 0 to 65535
TRACE: 2017/05/11 11:30:15 questionimpl.go:111: correct Answer fir ID 27 0 to 65535
TRACE: 2017/05/11 11:30:15 CalculateScore.go:39: Binomial took %s 4.5691754s
TRACE: 2017/05/11 11:30:15 CalculateScore.go:41: actual vs correct 0 to 65535 0 to 65535
TRACE: 2017/05/11 11:30:15 CalculateScore.go:47: 263409560461970212832400
TRACE: 2017/05/11 11:30:16 CalculateScore.go:50: Binomial took %s 1.0019282s
TRACE: 2017/05/11 11:30:16 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 11:30:16 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 11:30:18 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 11:30:18 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 11:30:20 questionimpl.go:108: Type is Can store multiple values
TRACE: 2017/05/11 11:30:20 questionimpl.go:111: correct Answer fir ID 13 Can store multiple values
TRACE: 2017/05/11 11:30:20 CalculateScore.go:39: Binomial took %s 4.2649251s
TRACE: 2017/05/11 11:30:20 CalculateScore.go:41: actual vs correct it is syntax Can store multiple values
TRACE: 2017/05/11 11:30:20 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 11:30:20 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 11:30:22 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 11:30:22 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 11:30:24 questionimpl.go:108: Type is final
TRACE: 2017/05/11 11:30:24 questionimpl.go:111: correct Answer fir ID 35 final
TRACE: 2017/05/11 11:30:24 CalculateScore.go:39: Binomial took %s 4.1179313s
TRACE: 2017/05/11 11:30:24 CalculateScore.go:41: actual vs correct private final
TRACE: 2017/05/11 11:30:24 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 11:30:24 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 11:30:26 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 11:30:26 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 11:30:30 questionimpl.go:108: Type is autoboxing
TRACE: 2017/05/11 11:30:30 questionimpl.go:111: correct Answer fir ID 19 autoboxing
TRACE: 2017/05/11 11:30:30 CalculateScore.go:39: Binomial took %s 6.1404601s
TRACE: 2017/05/11 11:30:30 CalculateScore.go:41: actual vs correct wrapping autoboxing
TRACE: 2017/05/11 11:30:30 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 11:30:30 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 11:30:33 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 11:30:33 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 11:30:35 questionimpl.go:108: Type is resume() method
TRACE: 2017/05/11 11:30:35 questionimpl.go:111: correct Answer fir ID 14 resume() method
TRACE: 2017/05/11 11:30:35 CalculateScore.go:39: Binomial took %s 4.2045017s
TRACE: 2017/05/11 11:30:35 CalculateScore.go:41: actual vs correct Suspend() method resume() method
TRACE: 2017/05/11 11:30:35 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/11 11:30:35 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/11 11:30:37 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/11 11:30:37 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/11 11:30:38 questionimpl.go:108: Type is string
TRACE: 2017/05/11 11:30:38 questionimpl.go:111: correct Answer fir ID 21 string
TRACE: 2017/05/11 11:30:38 CalculateScore.go:39: Binomial took %s 3.8488742s
TRACE: 2017/05/11 11:30:38 CalculateScore.go:41: actual vs correct double string
TRACE: 2017/05/11 11:30:38 CalculateScore.go:55: Binomial took %s 2m0.7818053s
TRACE: 2017/05/12 09:42:55 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/05/12 09:42:55 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/05/12 09:42:55 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/05/12 09:42:55 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/05/12 09:42:55 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/05/12 09:42:55 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/05/12 09:42:55 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/05/12 09:42:55 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/05/12 09:42:55 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/05/12 09:42:55 debug.go:45: [GIN-debug] Listening and serving HTTP on :8084
TRACE: 2017/05/12 09:44:53 Login.go:14: entering webservice.Login()
TRACE: 2017/05/12 09:44:53 Login.go:19: calling manager.Login()
TRACE: 2017/05/12 09:44:53 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/12 09:44:53 Login.go:16: entering manager.login
TRACE: 2017/05/12 09:44:53 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/12 09:44:53 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/12 09:44:53 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/12 09:44:57 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/12 09:44:57 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/12 09:44:57 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/12 09:44:59 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/12 09:44:59 loginimpl.go:81: executing query.....
TRACE: 2017/05/12 09:45:01 loginimpl.go:93: {0xc0422901c0 0xc042282340}
TRACE: 2017/05/12 09:45:01 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/12 09:45:01 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/12 09:45:01 loginimpl.go:16: exntering in SaveToken() function {0 2 CYQmDGuLCjiswNLLXfbK 2017-05-12 09:44:57.3633384 +0530 IST}
TRACE: 2017/05/12 09:45:01 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/12 09:45:03 loginimpl.go:20: token inserted
TRACE: 2017/05/12 09:45:03 loginimpl.go:21: {0 2 CYQmDGuLCjiswNLLXfbK 2017-05-12 09:44:57.3633384 +0530 IST}
TRACE: 2017/05/12 09:45:05 loginimpl.go:33: {0xc0422fc000 0xc0422e80e0}
TRACE: 2017/05/12 09:45:05 Login.go:48: {2 rakesh CYQmDGuLCjiswNLLXfbK user}
TRACE: 2017/05/12 09:45:29 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/12 09:45:29 QuestionList.go:18: fundamental
TRACE: 2017/05/12 09:45:29 QuestionList.go:19: CYQmDGuLCjiswNLLXfbK
TRACE: 2017/05/12 09:45:29 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/12 09:45:29 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/12 09:45:29 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/12 09:45:29 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/12 09:45:31 authenticatetokenimpl.go:47: CYQmDGuLCjiswNLLXfbK
TRACE: 2017/05/12 09:45:31 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/12 09:45:31 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/12 09:45:33 authenticatetokenimpl.go:51: CYQmDGuLCjiswNLLXfbK
TRACE: 2017/05/12 09:45:33 authenticatetokenimpl.go:59: Type is CYQmDGuLCjiswNLLXfbK
TRACE: 2017/05/12 09:45:33 aunthenticate.go:42: 2017-05-12 09:45:33
TRACE: 2017/05/12 09:45:33 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/12 09:45:35 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/12 09:45:35 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/12 09:45:37 authenticatetokenimpl.go:30: {0xc0422fc690 0xc042004450}
TRACE: 2017/05/12 09:45:37 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/12 09:45:37 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/12 09:45:37 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/12 09:45:37 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/12 09:45:37 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/12 09:45:37 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/12 09:45:37 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/12 09:45:39 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0423390e0 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/12 09:45:41 questionimpl.go:30: &{0xc042290700 0x718ea0 0xc04200b400 false [] <nil> 0xc042284cf0}
TRACE: 2017/05/12 09:46:11 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/12 09:46:11 AnswerList.go:23: [{0 5 a method that iterates over a block of code until a condition is solved} {0 1 both } {0 10 has to implement none of the methods from interface} {0 6 linked list} {0 3 abstract class} {0 2 c} {0 8 shows the access defination for a diractory} {0 4 a way of delivering a class from another class } {0 7 unit testing} {0 9 a process that automatically starts up when the machine is started}]
TRACE: 2017/05/12 09:46:11 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/12 09:46:11 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/12 09:46:11 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/12 09:46:11 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/12 09:46:11 CalculateScore.go:30: answerList [{0 5 a method that iterates over a block of code until a condition is solved} {0 1 both } {0 10 has to implement none of the methods from interface} {0 6 linked list} {0 3 abstract class} {0 2 c} {0 8 shows the access defination for a diractory} {0 4 a way of delivering a class from another class } {0 7 unit testing} {0 9 a process that automatically starts up when the machine is started}]
TRACE: 2017/05/12 09:46:11 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/12 09:46:11 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/12 09:46:13 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/12 09:46:13 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/12 09:46:15 questionimpl.go:108: Type is a method that calls itself
TRACE: 2017/05/12 09:46:15 questionimpl.go:111: correct Answer fir ID 5 a method that calls itself
TRACE: 2017/05/12 09:46:15 CalculateScore.go:39: Binomial took %s 4.0990342s
TRACE: 2017/05/12 09:46:15 CalculateScore.go:41: actual vs correct a method that iterates over a block of code until a condition is solved a method that calls itself
TRACE: 2017/05/12 09:46:15 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/12 09:46:15 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/12 09:46:17 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/12 09:46:17 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/12 09:46:19 questionimpl.go:108: Type is both
TRACE: 2017/05/12 09:46:19 questionimpl.go:111: correct Answer fir ID 1 both
TRACE: 2017/05/12 09:46:19 CalculateScore.go:39: Binomial took %s 3.9477961s
TRACE: 2017/05/12 09:46:19 CalculateScore.go:41: actual vs correct both  both
TRACE: 2017/05/12 09:46:19 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/12 09:46:19 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/12 09:46:21 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/12 09:46:21 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/12 09:46:23 questionimpl.go:108: Type is has to implement all method defination from the interface
TRACE: 2017/05/12 09:46:23 questionimpl.go:111: correct Answer fir ID 10 has to implement all method defination from the interface
TRACE: 2017/05/12 09:46:23 CalculateScore.go:39: Binomial took %s 4.1270131s
TRACE: 2017/05/12 09:46:23 CalculateScore.go:41: actual vs correct has to implement none of the methods from interface has to implement all method defination from the interface
TRACE: 2017/05/12 09:46:23 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/12 09:46:23 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/12 09:46:25 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/12 09:46:25 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/12 09:46:27 questionimpl.go:108: Type is stack
TRACE: 2017/05/12 09:46:27 questionimpl.go:111: correct Answer fir ID 6 stack
TRACE: 2017/05/12 09:46:27 CalculateScore.go:39: Binomial took %s 4.146493s
TRACE: 2017/05/12 09:46:27 CalculateScore.go:41: actual vs correct linked list stack
TRACE: 2017/05/12 09:46:27 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/12 09:46:27 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/12 09:46:29 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/12 09:46:29 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/12 09:46:31 questionimpl.go:108: Type is method overriding
TRACE: 2017/05/12 09:46:31 questionimpl.go:111: correct Answer fir ID 3 method overriding
TRACE: 2017/05/12 09:46:31 CalculateScore.go:39: Binomial took %s 3.9959521s
TRACE: 2017/05/12 09:46:31 CalculateScore.go:41: actual vs correct abstract class method overriding
TRACE: 2017/05/12 09:46:31 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/12 09:46:31 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/12 09:46:33 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/12 09:46:33 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/12 09:46:35 questionimpl.go:108: Type is c
TRACE: 2017/05/12 09:46:35 questionimpl.go:111: correct Answer fir ID 2 c
TRACE: 2017/05/12 09:46:35 CalculateScore.go:39: Binomial took %s 3.9924426s
TRACE: 2017/05/12 09:46:35 CalculateScore.go:41: actual vs correct c c
TRACE: 2017/05/12 09:46:35 CalculateScore.go:47: 263409560461970212832400
TRACE: 2017/05/12 09:46:36 CalculateScore.go:50: Binomial took %s 1.0008456s
TRACE: 2017/05/12 09:46:36 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/12 09:46:36 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/12 09:46:38 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/12 09:46:38 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/12 09:46:40 questionimpl.go:108: Type is shows path of current directory
TRACE: 2017/05/12 09:46:40 questionimpl.go:111: correct Answer fir ID 8 shows path of current directory
TRACE: 2017/05/12 09:46:40 CalculateScore.go:39: Binomial took %s 3.8048369s
TRACE: 2017/05/12 09:46:40 CalculateScore.go:41: actual vs correct shows the access defination for a diractory shows path of current directory
TRACE: 2017/05/12 09:46:40 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/12 09:46:40 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/12 09:46:42 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/12 09:46:42 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/12 09:46:44 questionimpl.go:108: Type is wraping up properties and methods
TRACE: 2017/05/12 09:46:44 questionimpl.go:111: correct Answer fir ID 4 wraping up properties and methods
TRACE: 2017/05/12 09:46:44 CalculateScore.go:39: Binomial took %s 3.7192845s
TRACE: 2017/05/12 09:46:44 CalculateScore.go:41: actual vs correct a way of delivering a class from another class  wraping up properties and methods
TRACE: 2017/05/12 09:46:44 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/12 09:46:44 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/12 09:46:46 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/12 09:46:46 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/12 09:46:47 questionimpl.go:108: Type is big O notation
TRACE: 2017/05/12 09:46:47 questionimpl.go:111: correct Answer fir ID 7 big O notation
TRACE: 2017/05/12 09:46:47 CalculateScore.go:39: Binomial took %s 3.6753704s
TRACE: 2017/05/12 09:46:47 CalculateScore.go:41: actual vs correct unit testing big O notation
TRACE: 2017/05/12 09:46:47 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/12 09:46:47 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/12 09:46:49 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/12 09:46:49 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/12 09:46:51 questionimpl.go:108: Type is a long running background process
TRACE: 2017/05/12 09:46:51 questionimpl.go:111: correct Answer fir ID 9 a long running background process
TRACE: 2017/05/12 09:46:51 CalculateScore.go:39: Binomial took %s 3.6789565s
TRACE: 2017/05/12 09:46:51 CalculateScore.go:41: actual vs correct a process that automatically starts up when the machine is started a long running background process
TRACE: 2017/05/12 09:46:51 CalculateScore.go:55: Binomial took %s 40.1910282s
TRACE: 2017/05/12 10:48:05 Login.go:14: entering webservice.Login()
TRACE: 2017/05/12 10:48:05 Login.go:19: calling manager.Login()
TRACE: 2017/05/12 10:48:05 Login.go:20: {0    test@1.com 123 }
TRACE: 2017/05/12 10:48:05 Login.go:16: entering manager.login
TRACE: 2017/05/12 10:48:05 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/05/12 10:48:05 userimpl.go:84: entering in AuthenticateUser()
TRACE: 2017/05/12 10:48:05 userimpl.go:86: Executing query and authenticating user exist
TRACE: 2017/05/12 10:48:09 userimpl.go:109: Response user Obj :  {2 rakesh bharti 1212121212   user}
TRACE: 2017/05/12 10:48:09 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/05/12 10:48:09 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/05/12 10:48:11 loginimpl.go:80: entering In DeleteDuplicateUid()
TRACE: 2017/05/12 10:48:11 loginimpl.go:81: executing query.....
TRACE: 2017/05/12 10:48:13 loginimpl.go:93: {0xc042033730 0xc0423a1a50}
TRACE: 2017/05/12 10:48:13 loginimpl.go:98: 0 <nil>
TRACE: 2017/05/12 10:48:13 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/05/12 10:48:13 loginimpl.go:16: exntering in SaveToken() function {0 2 nryFnwkvAMlyAjhMZTxL 2017-05-12 10:48:09.5384114 +0530 IST}
TRACE: 2017/05/12 10:48:13 loginimpl.go:17: executing query and storing token in database for the user 
TRACE: 2017/05/12 10:48:15 loginimpl.go:20: token inserted
TRACE: 2017/05/12 10:48:15 loginimpl.go:21: {0 2 nryFnwkvAMlyAjhMZTxL 2017-05-12 10:48:09.5384114 +0530 IST}
TRACE: 2017/05/12 10:48:17 loginimpl.go:33: {0xc0422fcf50 0xc0423af1a0}
TRACE: 2017/05/12 10:48:17 Login.go:48: {2 rakesh nryFnwkvAMlyAjhMZTxL user}
TRACE: 2017/05/12 10:48:29 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/12 10:48:29 QuestionList.go:18: fundamental
TRACE: 2017/05/12 10:48:29 QuestionList.go:19: nryFnwkvAMlyAjhMZTxL
TRACE: 2017/05/12 10:48:30 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/12 10:48:30 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/12 10:48:30 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/12 10:48:30 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/12 10:48:32 authenticatetokenimpl.go:47: nryFnwkvAMlyAjhMZTxL
TRACE: 2017/05/12 10:48:32 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/12 10:48:32 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/12 10:48:34 authenticatetokenimpl.go:51: nryFnwkvAMlyAjhMZTxL
TRACE: 2017/05/12 10:48:34 authenticatetokenimpl.go:59: Type is nryFnwkvAMlyAjhMZTxL
TRACE: 2017/05/12 10:48:34 aunthenticate.go:42: 2017-05-12 10:48:34
TRACE: 2017/05/12 10:48:34 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/12 10:48:36 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/12 10:48:36 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/12 10:48:38 authenticatetokenimpl.go:30: {0xc04246c150 0xc042468290}
TRACE: 2017/05/12 10:48:38 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/12 10:48:38 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/12 10:48:38 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/12 10:48:38 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/12 10:48:38 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/12 10:48:38 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/12 10:48:38 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/12 10:48:40 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc04242b3e0 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/12 10:48:42 questionimpl.go:30: &{0xc04241a690 0x718ea0 0xc04247a300 false [] <nil> 0xc0424723c0}
TRACE: 2017/05/12 10:49:42 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/12 10:49:42 AnswerList.go:23: [{0 10 } {0 3 } {0 6 } {0 7 } {0 2 } {0 8 } {0 5 } {0 9 } {0 1 } {0 4 }]
TRACE: 2017/05/12 10:49:42 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/12 10:49:42 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/12 10:49:42 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/12 10:49:42 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/12 10:49:42 CalculateScore.go:30: answerList [{0 10 } {0 3 } {0 6 } {0 7 } {0 2 } {0 8 } {0 5 } {0 9 } {0 1 } {0 4 }]
TRACE: 2017/05/12 10:49:42 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/12 10:49:42 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/12 10:49:44 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/12 10:49:44 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/12 10:49:46 questionimpl.go:108: Type is has to implement all method defination from the interface
TRACE: 2017/05/12 10:49:46 questionimpl.go:111: correct Answer fir ID 10 has to implement all method defination from the interface
TRACE: 2017/05/12 10:49:46 CalculateScore.go:39: Binomial took %s 3.744853s
TRACE: 2017/05/12 10:49:46 CalculateScore.go:41: actual vs correct  has to implement all method defination from the interface
TRACE: 2017/05/12 10:49:46 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/12 10:49:46 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/12 10:49:48 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/12 10:49:48 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/12 10:49:50 questionimpl.go:108: Type is method overriding
TRACE: 2017/05/12 10:49:50 questionimpl.go:111: correct Answer fir ID 3 method overriding
TRACE: 2017/05/12 10:49:50 CalculateScore.go:39: Binomial took %s 3.7550692s
TRACE: 2017/05/12 10:49:50 CalculateScore.go:41: actual vs correct  method overriding
TRACE: 2017/05/12 10:49:50 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/12 10:49:50 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/12 10:49:52 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/12 10:49:52 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/12 10:49:54 questionimpl.go:108: Type is stack
TRACE: 2017/05/12 10:49:54 questionimpl.go:111: correct Answer fir ID 6 stack
TRACE: 2017/05/12 10:49:54 CalculateScore.go:39: Binomial took %s 3.9355783s
TRACE: 2017/05/12 10:49:54 CalculateScore.go:41: actual vs correct  stack
TRACE: 2017/05/12 10:49:54 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/12 10:49:54 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/12 10:49:56 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/12 10:49:56 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/12 10:49:58 questionimpl.go:108: Type is big O notation
TRACE: 2017/05/12 10:49:58 questionimpl.go:111: correct Answer fir ID 7 big O notation
TRACE: 2017/05/12 10:49:58 CalculateScore.go:39: Binomial took %s 4.0208721s
TRACE: 2017/05/12 10:49:58 CalculateScore.go:41: actual vs correct  big O notation
TRACE: 2017/05/12 10:49:58 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/12 10:49:58 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/12 10:50:00 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/12 10:50:00 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/12 10:50:01 questionimpl.go:108: Type is c
TRACE: 2017/05/12 10:50:01 questionimpl.go:111: correct Answer fir ID 2 c
TRACE: 2017/05/12 10:50:01 CalculateScore.go:39: Binomial took %s 3.7606833s
TRACE: 2017/05/12 10:50:01 CalculateScore.go:41: actual vs correct  c
TRACE: 2017/05/12 10:50:01 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/12 10:50:01 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/12 10:50:03 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/12 10:50:03 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/12 10:50:05 questionimpl.go:108: Type is shows path of current directory
TRACE: 2017/05/12 10:50:05 questionimpl.go:111: correct Answer fir ID 8 shows path of current directory
TRACE: 2017/05/12 10:50:05 CalculateScore.go:39: Binomial took %s 3.7156323s
TRACE: 2017/05/12 10:50:05 CalculateScore.go:41: actual vs correct  shows path of current directory
TRACE: 2017/05/12 10:50:05 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/12 10:50:05 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/12 10:50:07 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/12 10:50:07 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/12 10:50:09 questionimpl.go:108: Type is a method that calls itself
TRACE: 2017/05/12 10:50:09 questionimpl.go:111: correct Answer fir ID 5 a method that calls itself
TRACE: 2017/05/12 10:50:09 CalculateScore.go:39: Binomial took %s 3.9907306s
TRACE: 2017/05/12 10:50:09 CalculateScore.go:41: actual vs correct  a method that calls itself
TRACE: 2017/05/12 10:50:09 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/12 10:50:09 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/12 10:50:11 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/12 10:50:11 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/12 10:50:13 questionimpl.go:108: Type is a long running background process
TRACE: 2017/05/12 10:50:13 questionimpl.go:111: correct Answer fir ID 9 a long running background process
TRACE: 2017/05/12 10:50:13 CalculateScore.go:39: Binomial took %s 4.0063409s
TRACE: 2017/05/12 10:50:13 CalculateScore.go:41: actual vs correct  a long running background process
TRACE: 2017/05/12 10:50:13 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/12 10:50:13 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/12 10:50:15 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/12 10:50:15 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/12 10:50:17 questionimpl.go:108: Type is both
TRACE: 2017/05/12 10:50:17 questionimpl.go:111: correct Answer fir ID 1 both
TRACE: 2017/05/12 10:50:17 CalculateScore.go:39: Binomial took %s 3.6946437s
TRACE: 2017/05/12 10:50:17 CalculateScore.go:41: actual vs correct  both
TRACE: 2017/05/12 10:50:17 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/12 10:50:17 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/12 10:50:19 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/12 10:50:19 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/12 10:50:21 questionimpl.go:108: Type is wraping up properties and methods
TRACE: 2017/05/12 10:50:21 questionimpl.go:111: correct Answer fir ID 4 wraping up properties and methods
TRACE: 2017/05/12 10:50:21 CalculateScore.go:39: Binomial took %s 3.8797533s
TRACE: 2017/05/12 10:50:21 CalculateScore.go:41: actual vs correct  wraping up properties and methods
TRACE: 2017/05/12 10:50:21 CalculateScore.go:55: Binomial took %s 38.5056533s
TRACE: 2017/05/12 10:51:35 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/12 10:51:35 QuestionList.go:18: java
TRACE: 2017/05/12 10:51:35 QuestionList.go:19: nryFnwkvAMlyAjhMZTxL
TRACE: 2017/05/12 10:51:35 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/12 10:51:35 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/12 10:51:35 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/12 10:51:35 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/12 10:51:38 authenticatetokenimpl.go:47: nryFnwkvAMlyAjhMZTxL
TRACE: 2017/05/12 10:51:38 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/12 10:51:38 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/12 10:51:40 authenticatetokenimpl.go:51: nryFnwkvAMlyAjhMZTxL
TRACE: 2017/05/12 10:51:40 authenticatetokenimpl.go:59: Type is nryFnwkvAMlyAjhMZTxL
TRACE: 2017/05/12 10:51:40 aunthenticate.go:42: 2017-05-12 10:51:40
TRACE: 2017/05/12 10:51:40 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/12 10:51:42 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/12 10:51:42 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/12 10:51:43 authenticatetokenimpl.go:30: {0xc0421bea10 0xc0422e9130}
TRACE: 2017/05/12 10:51:43 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/12 10:51:43 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/12 10:51:43 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/12 10:51:43 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/12 10:51:43 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/12 10:51:43 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/12 10:51:43 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/12 10:51:45 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc04242a1e0 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/12 10:51:47 questionimpl.go:30: &{0xc0421280e0 0x718ea0 0xc04240c220 false [] <nil> 0xc042472210}
TRACE: 2017/05/12 10:52:47 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/12 10:52:47 AnswerList.go:23: [{0 14 } {0 18 java.util.Date} {0 17 Singlethreaded} {0 24 native} {0 13 none of above} {0 11 parent class} {0 27 0 to 32767} {0 25 Variable} {0 12 w.q} {0 33 if, switch} {0 31 rand()} {0 21 double} {0 32 All of the mentioned} {0 34 for(i=0 ; i<1; i--)} {0 15 java.util.LinkedList} {0 20 Constructor} {0 35 final} {0 23 } {0 30 } {0 28 } {0 16 } {0 26 } {0 19 boxing} {0 29 close()} {0 22 Queue}]
TRACE: 2017/05/12 10:52:47 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/12 10:52:47 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/12 10:52:47 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/12 10:52:47 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/12 10:52:47 CalculateScore.go:30: answerList [{0 14 } {0 18 java.util.Date} {0 17 Singlethreaded} {0 24 native} {0 13 none of above} {0 11 parent class} {0 27 0 to 32767} {0 25 Variable} {0 12 w.q} {0 33 if, switch} {0 31 rand()} {0 21 double} {0 32 All of the mentioned} {0 34 for(i=0 ; i<1; i--)} {0 15 java.util.LinkedList} {0 20 Constructor} {0 35 final} {0 23 } {0 30 } {0 28 } {0 16 } {0 26 } {0 19 boxing} {0 29 close()} {0 22 Queue}]
TRACE: 2017/05/12 10:52:47 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/12 10:52:47 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/12 10:52:50 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/12 10:52:50 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/12 10:52:52 questionimpl.go:108: Type is resume() method
TRACE: 2017/05/12 10:52:52 questionimpl.go:111: correct Answer fir ID 14 resume() method
TRACE: 2017/05/12 10:52:52 CalculateScore.go:39: Binomial took %s 4.9352956s
TRACE: 2017/05/12 10:52:52 CalculateScore.go:41: actual vs correct  resume() method
TRACE: 2017/05/12 10:52:52 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/12 10:52:52 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/12 10:52:54 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/12 10:52:54 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/12 10:52:56 questionimpl.go:108: Type is java.util.Date
TRACE: 2017/05/12 10:52:56 questionimpl.go:111: correct Answer fir ID 18 java.util.Date
TRACE: 2017/05/12 10:52:56 CalculateScore.go:39: Binomial took %s 4.0513337s
TRACE: 2017/05/12 10:52:56 CalculateScore.go:41: actual vs correct java.util.Date java.util.Date
TRACE: 2017/05/12 10:52:56 CalculateScore.go:47: 263409560461970212832400
TRACE: 2017/05/12 10:52:57 CalculateScore.go:50: Binomial took %s 1.001729s
TRACE: 2017/05/12 10:52:57 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/12 10:52:57 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/12 10:52:59 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/12 10:52:59 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/12 10:53:01 questionimpl.go:108: Type is Multithreaded
TRACE: 2017/05/12 10:53:01 questionimpl.go:111: correct Answer fir ID 17 Multithreaded
TRACE: 2017/05/12 10:53:01 CalculateScore.go:39: Binomial took %s 4.1509914s
TRACE: 2017/05/12 10:53:01 CalculateScore.go:41: actual vs correct Singlethreaded Multithreaded
TRACE: 2017/05/12 10:53:01 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/12 10:53:01 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/12 10:53:03 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/12 10:53:03 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/12 10:53:05 questionimpl.go:108: Type is transient
TRACE: 2017/05/12 10:53:05 questionimpl.go:111: correct Answer fir ID 24 transient
TRACE: 2017/05/12 10:53:05 CalculateScore.go:39: Binomial took %s 3.7096208s
TRACE: 2017/05/12 10:53:05 CalculateScore.go:41: actual vs correct native transient
TRACE: 2017/05/12 10:53:05 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/12 10:53:05 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/12 10:53:07 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/12 10:53:07 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/12 10:53:09 questionimpl.go:108: Type is Can store multiple values
TRACE: 2017/05/12 10:53:09 questionimpl.go:111: correct Answer fir ID 13 Can store multiple values
TRACE: 2017/05/12 10:53:09 CalculateScore.go:39: Binomial took %s 3.6990914s
TRACE: 2017/05/12 10:53:09 CalculateScore.go:41: actual vs correct none of above Can store multiple values
TRACE: 2017/05/12 10:53:09 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/12 10:53:09 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/12 10:53:12 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/12 10:53:12 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/12 10:53:13 questionimpl.go:108: Type is Final class
TRACE: 2017/05/12 10:53:13 questionimpl.go:111: correct Answer fir ID 11 Final class
TRACE: 2017/05/12 10:53:13 CalculateScore.go:39: Binomial took %s 4.4393061s
TRACE: 2017/05/12 10:53:13 CalculateScore.go:41: actual vs correct parent class Final class
TRACE: 2017/05/12 10:53:13 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/12 10:53:13 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/12 10:53:15 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/12 10:53:15 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/12 10:53:17 questionimpl.go:108: Type is 0 to 65535
TRACE: 2017/05/12 10:53:17 questionimpl.go:111: correct Answer fir ID 27 0 to 65535
TRACE: 2017/05/12 10:53:17 CalculateScore.go:39: Binomial took %s 3.9835142s
TRACE: 2017/05/12 10:53:17 CalculateScore.go:41: actual vs correct 0 to 32767 0 to 65535
TRACE: 2017/05/12 10:53:17 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/12 10:53:17 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/12 10:53:19 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/12 10:53:19 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/12 10:53:21 questionimpl.go:108: Type is Interface
TRACE: 2017/05/12 10:53:21 questionimpl.go:111: correct Answer fir ID 25 Interface
TRACE: 2017/05/12 10:53:21 CalculateScore.go:39: Binomial took %s 4.0725982s
TRACE: 2017/05/12 10:53:21 CalculateScore.go:41: actual vs correct Variable Interface
TRACE: 2017/05/12 10:53:21 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/12 10:53:21 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/12 10:53:23 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/12 10:53:23 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/12 10:53:25 questionimpl.go:108: Type is No
TRACE: 2017/05/12 10:53:25 questionimpl.go:111: correct Answer fir ID 12 No
TRACE: 2017/05/12 10:53:25 CalculateScore.go:39: Binomial took %s 3.9246901s
TRACE: 2017/05/12 10:53:25 CalculateScore.go:41: actual vs correct w.q No
TRACE: 2017/05/12 10:53:25 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/12 10:53:25 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/12 10:53:27 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/12 10:53:27 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/12 10:53:29 questionimpl.go:108: Type is switch, if
TRACE: 2017/05/12 10:53:29 questionimpl.go:111: correct Answer fir ID 33 switch, if
TRACE: 2017/05/12 10:53:29 CalculateScore.go:39: Binomial took %s 3.7066215s
TRACE: 2017/05/12 10:53:29 CalculateScore.go:41: actual vs correct if, switch switch, if
TRACE: 2017/05/12 10:53:29 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/12 10:53:29 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/12 10:53:31 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/12 10:53:31 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/12 10:53:33 questionimpl.go:108: Type is shuffle()
TRACE: 2017/05/12 10:53:33 questionimpl.go:111: correct Answer fir ID 31 shuffle()
TRACE: 2017/05/12 10:53:33 CalculateScore.go:39: Binomial took %s 3.7674938s
TRACE: 2017/05/12 10:53:33 CalculateScore.go:41: actual vs correct rand() shuffle()
TRACE: 2017/05/12 10:53:33 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/12 10:53:33 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/12 10:53:35 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/12 10:53:35 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/12 10:53:37 questionimpl.go:108: Type is string
TRACE: 2017/05/12 10:53:37 questionimpl.go:111: correct Answer fir ID 21 string
TRACE: 2017/05/12 10:53:37 CalculateScore.go:39: Binomial took %s 4.0429546s
TRACE: 2017/05/12 10:53:37 CalculateScore.go:41: actual vs correct double string
TRACE: 2017/05/12 10:53:37 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/12 10:53:37 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/12 10:53:39 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/12 10:53:39 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/12 10:53:41 questionimpl.go:108: Type is All of the mentioned
TRACE: 2017/05/12 10:53:41 questionimpl.go:111: correct Answer fir ID 32 All of the mentioned
TRACE: 2017/05/12 10:53:41 CalculateScore.go:39: Binomial took %s 3.9870161s
TRACE: 2017/05/12 10:53:41 CalculateScore.go:41: actual vs correct All of the mentioned All of the mentioned
TRACE: 2017/05/12 10:53:41 CalculateScore.go:47: 263409560461970212832400
TRACE: 2017/05/12 10:53:42 CalculateScore.go:50: Binomial took %s 1.006346s
TRACE: 2017/05/12 10:53:42 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/12 10:53:42 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/12 10:53:44 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/12 10:53:44 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/12 10:53:46 questionimpl.go:108: Type is All of the above
TRACE: 2017/05/12 10:53:46 questionimpl.go:111: correct Answer fir ID 34 All of the above
TRACE: 2017/05/12 10:53:46 CalculateScore.go:39: Binomial took %s 4.0170162s
TRACE: 2017/05/12 10:53:46 CalculateScore.go:41: actual vs correct for(i=0 ; i<1; i--) All of the above
TRACE: 2017/05/12 10:53:46 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/12 10:53:46 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/12 10:53:48 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/12 10:53:48 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/12 10:53:50 questionimpl.go:108: Type is java.util.TreeMap
TRACE: 2017/05/12 10:53:50 questionimpl.go:111: correct Answer fir ID 15 java.util.TreeMap
TRACE: 2017/05/12 10:53:50 CalculateScore.go:39: Binomial took %s 3.964422s
TRACE: 2017/05/12 10:53:50 CalculateScore.go:41: actual vs correct java.util.LinkedList java.util.TreeMap
TRACE: 2017/05/12 10:53:50 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/12 10:53:50 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/12 10:53:52 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/12 10:53:52 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/12 10:53:54 questionimpl.go:108: Type is Constructor
TRACE: 2017/05/12 10:53:54 questionimpl.go:111: correct Answer fir ID 20 Constructor
TRACE: 2017/05/12 10:53:54 CalculateScore.go:39: Binomial took %s 4.1440631s
TRACE: 2017/05/12 10:53:54 CalculateScore.go:41: actual vs correct Constructor Constructor
TRACE: 2017/05/12 10:53:54 CalculateScore.go:47: 263409560461970212832400
TRACE: 2017/05/12 10:53:55 CalculateScore.go:50: Binomial took %s 1.0010687s
TRACE: 2017/05/12 10:53:55 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/12 10:53:55 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/12 10:53:57 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/12 10:53:57 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/12 10:53:59 questionimpl.go:108: Type is final
TRACE: 2017/05/12 10:53:59 questionimpl.go:111: correct Answer fir ID 35 final
TRACE: 2017/05/12 10:53:59 CalculateScore.go:39: Binomial took %s 4.3927939s
TRACE: 2017/05/12 10:53:59 CalculateScore.go:41: actual vs correct final final
TRACE: 2017/05/12 10:53:59 CalculateScore.go:47: 263409560461970212832400
TRACE: 2017/05/12 10:54:00 CalculateScore.go:50: Binomial took %s 1.000929s
TRACE: 2017/05/12 10:54:00 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/12 10:54:00 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/12 10:54:02 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/12 10:54:02 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/12 10:54:04 questionimpl.go:108: Type is PrintStream class
TRACE: 2017/05/12 10:54:04 questionimpl.go:111: correct Answer fir ID 23 PrintStream class
TRACE: 2017/05/12 10:54:04 CalculateScore.go:39: Binomial took %s 4.0341692s
TRACE: 2017/05/12 10:54:04 CalculateScore.go:41: actual vs correct  PrintStream class
TRACE: 2017/05/12 10:54:04 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/12 10:54:04 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/12 10:54:06 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/12 10:54:06 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/12 10:54:08 questionimpl.go:108: Type is max(Comparator comp)
TRACE: 2017/05/12 10:54:08 questionimpl.go:111: correct Answer fir ID 30 max(Comparator comp)
TRACE: 2017/05/12 10:54:08 CalculateScore.go:39: Binomial took %s 4.0078504s
TRACE: 2017/05/12 10:54:08 CalculateScore.go:41: actual vs correct  max(Comparator comp)
TRACE: 2017/05/12 10:54:08 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/12 10:54:08 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/12 10:54:10 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/12 10:54:10 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/12 10:54:12 questionimpl.go:108: Type is Serialization
TRACE: 2017/05/12 10:54:12 questionimpl.go:111: correct Answer fir ID 28 Serialization
TRACE: 2017/05/12 10:54:12 CalculateScore.go:39: Binomial took %s 3.7086391s
TRACE: 2017/05/12 10:54:12 CalculateScore.go:41: actual vs correct  Serialization
TRACE: 2017/05/12 10:54:12 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/12 10:54:12 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/12 10:54:14 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/12 10:54:14 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/12 10:54:16 questionimpl.go:108: Type is getConnection()
TRACE: 2017/05/12 10:54:16 questionimpl.go:111: correct Answer fir ID 16 getConnection()
TRACE: 2017/05/12 10:54:16 CalculateScore.go:39: Binomial took %s 4.0488818s
TRACE: 2017/05/12 10:54:16 CalculateScore.go:41: actual vs correct  getConnection()
TRACE: 2017/05/12 10:54:16 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/12 10:54:16 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/12 10:54:18 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/12 10:54:18 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/12 10:54:20 questionimpl.go:108: Type is 100
TRACE: 2017/05/12 10:54:20 questionimpl.go:111: correct Answer fir ID 26 100
TRACE: 2017/05/12 10:54:20 CalculateScore.go:39: Binomial took %s 4.169975s
TRACE: 2017/05/12 10:54:20 CalculateScore.go:41: actual vs correct  100
TRACE: 2017/05/12 10:54:20 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/12 10:54:20 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/12 10:54:22 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/12 10:54:22 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/12 10:54:24 questionimpl.go:108: Type is autoboxing
TRACE: 2017/05/12 10:54:24 questionimpl.go:111: correct Answer fir ID 19 autoboxing
TRACE: 2017/05/12 10:54:24 CalculateScore.go:39: Binomial took %s 3.6896134s
TRACE: 2017/05/12 10:54:24 CalculateScore.go:41: actual vs correct boxing autoboxing
TRACE: 2017/05/12 10:54:24 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/12 10:54:24 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/12 10:54:26 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/12 10:54:26 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/12 10:54:28 questionimpl.go:108: Type is flush()
TRACE: 2017/05/12 10:54:28 questionimpl.go:111: correct Answer fir ID 29 flush()
TRACE: 2017/05/12 10:54:28 CalculateScore.go:39: Binomial took %s 4.1219322s
TRACE: 2017/05/12 10:54:28 CalculateScore.go:41: actual vs correct close() flush()
TRACE: 2017/05/12 10:54:28 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/12 10:54:28 CalculateScore.go:36: 263409560461970212832400
TRACE: 2017/05/12 10:54:30 questionimpl.go:93: entering in GetAnswerById() 
TRACE: 2017/05/12 10:54:30 questionimpl.go:99: executing query and fetching answers 
TRACE: 2017/05/12 10:54:32 questionimpl.go:108: Type is Queue
TRACE: 2017/05/12 10:54:32 questionimpl.go:111: correct Answer fir ID 22 Queue
TRACE: 2017/05/12 10:54:32 CalculateScore.go:39: Binomial took %s 3.9246472s
TRACE: 2017/05/12 10:54:32 CalculateScore.go:41: actual vs correct Queue Queue
TRACE: 2017/05/12 10:54:32 CalculateScore.go:47: 263409560461970212832400
TRACE: 2017/05/12 10:54:33 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/05/12 10:54:33 QuestionList.go:18: language
TRACE: 2017/05/12 10:54:33 QuestionList.go:19: nryFnwkvAMlyAjhMZTxL
TRACE: 2017/05/12 10:54:33 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/05/12 10:54:33 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/05/12 10:54:33 aunthenticate.go:24: 6 0 0
TRACE: 2017/05/12 10:54:33 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/05/12 10:54:33 CalculateScore.go:50: Binomial took %s 1.0007317s
TRACE: 2017/05/12 10:54:33 CalculateScore.go:55: Binomial took %s 1m45.7103051s
TRACE: 2017/05/12 10:54:35 authenticatetokenimpl.go:47: nryFnwkvAMlyAjhMZTxL
TRACE: 2017/05/12 10:54:35 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/05/12 10:54:35 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/05/12 10:54:37 authenticatetokenimpl.go:51: nryFnwkvAMlyAjhMZTxL
TRACE: 2017/05/12 10:54:37 authenticatetokenimpl.go:59: Type is nryFnwkvAMlyAjhMZTxL
TRACE: 2017/05/12 10:54:37 aunthenticate.go:42: 2017-05-12 10:54:37
TRACE: 2017/05/12 10:54:37 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/05/12 10:54:39 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/05/12 10:54:39 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/05/12 10:54:41 authenticatetokenimpl.go:30: {0xc0421296c0 0xc042409c70}
TRACE: 2017/05/12 10:54:41 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/05/12 10:54:41 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/05/12 10:54:41 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/05/12 10:54:41 FetchQuestion.go:15: calling Question manager
TRACE: 2017/05/12 10:54:41 FetchQuestion.go:19: calling FetchQuestionsByType()
TRACE: 2017/05/12 10:54:41 questionimpl.go:20: entering into FetchQuestionsByType()
TRACE: 2017/05/12 10:54:41 questionimpl.go:21: executing query and Fetching Questions By Type 
TRACE: 2017/05/12 10:54:43 questionimpl.go:28: &{0xae4660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc04228aae0 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/05/12 10:54:45 questionimpl.go:30: &{0xc0421bf500 0x718ea0 0xc04236ab80 false [] <nil> 0xc042007dd0}
TRACE: 2017/05/12 10:55:45 AnswerList.go:20: entering webservice.AnswerLIst()
TRACE: 2017/05/12 10:55:45 AnswerList.go:23: [{0 42 } {0 41 } {0 37 } {0 43 } {0 36 } {0 40 } {0 39 } {0 38 }]
TRACE: 2017/05/12 10:55:45 AnswerList.go:24: calling manager.CalculateScore()
TRACE: 2017/05/12 10:55:45 CalculateScore.go:20: 263409560461970212832400
TRACE: 2017/05/12 10:55:45 CalculateScore.go:21: entering manager.CalculateScore()
TRACE: 2017/05/12 10:55:45 CalculateScore.go:23: calling Answer manager
TRACE: 2017/05/12 10:55:45 CalculateScore.go:30: answerList [{0 42 } {0 41 } {0 37 } {0 43 } {0 36 } {0 40 } {0 39 } {0 38 }]
TRACE: 2017/05/12 10:55:45 CalculateScore.go:33: calling questionDao.GetAnswerById() and Fetching the right answer...
TRACE: 2017/05/12 10:55:45 CalculateScore.go:36: 263409560461970212832400
